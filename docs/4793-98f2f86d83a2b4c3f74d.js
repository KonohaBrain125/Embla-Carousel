"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[4793],{4793:function(e,n,i){i.r(n),n.default="import React, { useCallback, useEffect, useState } from 'react';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport { LazyLoadImage } from './EmblaCarouselLazyLoadImage';\nimport imageByIndex from '../imageByIndex';\n\nconst EmblaCarousel = (props) => {\n    const { slides, options } = props;\n    const [emblaRed, emblaApi] = useEmblaCarousel(options);\n    const [slidesInView, setSlidesInView] = useState([]);\n    \n    const findSlidesInView = useCallback(() => {\n        if (!emblaApi)\n            return;\n        \n        setSlidesInView((slidesInView) => {\n            if (slidesInView.length === emblaApi.slideNodes().length) {\n                emblaApi.off('select', findSlidesInView);\n            }\n            const inView = emblaApi\n                .slidesInView(true)\n                .filter((index) => slidesInView.indexOf(index) === -1);\n            return slidesInView.concat(inView);\n        });\n    }, [emblaApi, setSlidesInView]);\n    \n    useEffect(() => {\n        if (!emblaApi)\n            return;\n        findSlidesInView();\n        emblaApi.on('select', findSlidesInView);\n        emblaApi.on('reInit', findSlidesInView);\n    }, [emblaApi, findSlidesInView]);\n    \n    return (<div className=\"embla\">\n      <div className=\"embla__viewport\" ref={emblaRed}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (<LazyLoadImage key={index} index={index} imgSrc={imageByIndex(index)} inView={slidesInView.indexOf(index) > -1}/>))}\n        </div>\n      </div>\n    </div>);\n};\n\nexport default EmblaCarousel;\n"}}]);
//# sourceMappingURL=4793-98f2f86d83a2b4c3f74d.js.map
{"version":3,"file":"component---src-templates-page-tsx-content-file-path-users-davidjerleke-sites-embla-carousel-packages-embla-carousel-docs-src-content-pages-plugins-index-mdx-11cfefaea6452a0dbc2a.js","mappings":"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","sources":["webpack://embla-carousel-docs/./src/content/pages/plugins/index.mdx","webpack://embla-carousel-docs/./src/templates/Page.tsx","webpack://embla-carousel-docs/./src/components/Page/Breadcrumbs.tsx","webpack://embla-carousel-docs/./src/hooks/useRouteBreadcrumbs.ts","webpack://embla-carousel-docs/./src/components/Page/EditPage.tsx","webpack://embla-carousel-docs/./src/components/Page/Pagination.tsx","webpack://embla-carousel-docs/./src/components/Seo/Seo.tsx","webpack://embla-carousel-docs/./src/utils/removeProtocol.ts","webpack://embla-carousel-docs/./src/assets/images/maskable.png"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\"\n  }, _provideComponents(), props.components), {PageChildLinks} = _components;\n  if (!PageChildLinks) _missingMdxReference(\"PageChildLinks\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Plugins\"), \"\\n\", React.createElement(_components.p, null, \"Here is a list of available Embla Carousel plugins that will \", React.createElement(_components.strong, null, \"extend your carousels\"), \" with additional features, that goes beyond the built-in Embla Carousel core features.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"choose-a-plugin\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#choose-a-plugin\",\n    \"aria-label\": \"choose a plugin permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Choose a plugin\"), \"\\n\", React.createElement(_components.p, null, \"Choose a plugin to start extending your carousels:\"), \"\\n\", React.createElement(PageChildLinks));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/Users/davidjerleke/Sites/embla-carousel/packages/embla-carousel-docs/src/content/pages/plugins/index.mdx\";\nimport React, {useMemo} from 'react';\nimport {Seo} from 'components/Seo/Seo';\nimport maskable from 'assets/images/maskable.png';\nimport {useSiteMetadata} from 'hooks/useSiteMetadata';\nimport {EditPage} from 'components/Page/EditPage';\nimport {Pagination} from 'components/Page/Pagination';\nimport {Breadcrumbs} from 'components/Page/Breadcrumbs';\nimport {SKIP_TO_CONTENT_ID} from 'components/TabAccess/SkipToContent';\nimport {removeProtocol} from 'utils/removeProtocol';\nimport {Mdx} from 'components/Mdx/Mdx';\nconst query = \"757618683\";\nexport const Head = props => {\n  const {data, pageContext} = props;\n  const {siteUrl, author} = useSiteMetadata();\n  const {title, description, date} = data.mdx.frontmatter;\n  const dateToISOString = useMemo(() => new Date(date + \" UTC\").toISOString(), [date]);\n  return React.createElement(Seo, {\n    title: title,\n    description: description,\n    url: \"\" + siteUrl + pageContext.slug\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, \"\\n      {\\n        \\\"@context\\\": \\\"https://schema.org\\\",\\n        \\\"@type\\\": \\\"TechArticle\\\",\\n        \\\"name\\\": \\\"\" + removeProtocol(siteUrl) + \"\\\",\\n        \\\"description\\\": \\\"\" + description + \"\\\",\\n        \\\"url\\\": \\\"\" + siteUrl + pageContext.slug + \"\\\",\\n        \\\"headline\\\": \\\"\" + title + \"\\\",\\n        \\\"image\\\": \\\"\" + siteUrl + \"/share-image.png\\\",\\n        \\\"datePublished\\\": \\\"\" + dateToISOString + \"\\\",\\n        \\\"dateModified\\\": \\\"\" + dateToISOString + \"\\\",\\n        \\\"author\\\": {\\n          \\\"@type\\\": \\\"Person\\\",\\n          \\\"name\\\": \\\"\" + author + \"\\\"\\n        },\\n        \\\"publisher\\\": {\\n          \\\"@type\\\": \\\"Organization\\\",\\n          \\\"name\\\": \\\"\" + author + \"\\\",\\n          \\\"logo\\\": {\\n            \\\"@type\\\": \\\"ImageObject\\\",\\n            \\\"width\\\": \\\"512\\\",\\n            \\\"height\\\": \\\"512\\\",\\n            \\\"url\\\": \\\"\" + siteUrl + maskable + \"\\\"\\n          }\\n        }\\n      }\\n    \"));\n};\nconst Page = props => {\n  const {pageContext, children} = props;\n  const {next, previous, filePath, id} = pageContext;\n  return React.createElement(React.Fragment, null, React.createElement(Breadcrumbs, {\n    id: id\n  }), React.createElement(\"article\", {\n    id: SKIP_TO_CONTENT_ID\n  }, React.createElement(Mdx, null, children)), React.createElement(EditPage, {\n    pageUrl: filePath\n  }), React.createElement(Pagination, {\n    previous: previous,\n    next: next\n  }));\n};\nPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Page, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { Fragment } from 'react'\nimport styled, { css } from 'styled-components'\nimport { PlainLink } from 'components/Link/PlainLink'\nimport { useRouteBreadcrumbs } from 'hooks/useRouteBreadcrumbs'\nimport { Icon } from 'components/Icon/Icon'\nimport { COLORS } from 'consts/themes'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { SPACINGS } from 'consts/spacings'\n\nconst Wrapper = styled.nav`\n  display: flex;\n  align-items: center;\n  font-size: ${FONT_SIZES.COMPLEMENTARY};\n  margin-bottom: ${SPACINGS.THREE};\n`\n\nconst itemStyles = css`\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  padding: ${SPACINGS.ONE} 0;\n`\n\nconst Link = styled(PlainLink)`\n  ${itemStyles};\n`\n\nconst ActiveTitle = styled.span`\n  ${itemStyles};\n`\n\nconst Separator = styled(Icon)`\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  margin: 0 ${SPACINGS.ONE};\n`\n\ntype PropType = { id: string }\n\nexport const Breadcrumbs = (props: PropType) => {\n  const { id } = props\n  const breadcrumbs = useRouteBreadcrumbs(id)\n\n  if (breadcrumbs.length === 0) return null\n\n  return (\n    <Wrapper aria-label=\"Breadcrumb Navigation\">\n      {breadcrumbs.map(({ id, slug, title }, index) =>\n        index !== breadcrumbs.length - 1 ? (\n          <Fragment key={id}>\n            <Link to={slug}>{title}</Link>\n            <Separator\n              size=\"0.6rem\"\n              svg=\"chevronRight\"\n              role=\"presentation\"\n              aria-hidden=\"false\"\n            />\n          </Fragment>\n        ) : (\n          <ActiveTitle key={id}>{title}</ActiveTitle>\n        ),\n      )}\n    </Wrapper>\n  )\n}\n","import { RouteType } from 'components/Routes/Context'\nimport { isRoutePartiallyActive } from 'utils/isRoutePartiallyActive'\nimport { useRoutes } from './useRoutes'\n\nexport const useRouteBreadcrumbs = (id: string): RouteType[] => {\n  const { flat: routes } = useRoutes()\n  const currentRoute = routes.find((route) => route.id === id)\n  return routes\n    .filter((route) => isRoutePartiallyActive(route, currentRoute?.slug || ''))\n    .sort((a, b) => a.level - b.level)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { PlainLink } from 'components/Link/PlainLink'\nimport { COLORS } from 'consts/themes'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { SPACINGS } from 'consts/spacings'\nimport { URLS } from 'consts/urls'\nimport { IconWithText } from 'components/Icon/IconWithText'\n\nconst Wrapper = styled(PlainLink)`\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n  font-size: ${FONT_SIZES.COMPLEMENTARY};\n  padding-top: ${SPACINGS.ONE};\n  padding-bottom: ${SPACINGS.ONE};\n  margin-top: ${SPACINGS.EIGHT};\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n`\n\ntype PropType = {\n  pageUrl: string\n}\n\nexport const EditPage = (props: PropType) => {\n  const { pageUrl } = props\n  const url = `${URLS.GITHUB_DOCUMENTATION}/${pageUrl}`\n\n  return (\n    <Wrapper to={url}>\n      <IconWithText iconSvg=\"pen\" iconSize=\"1.5rem\">\n        Edit this page on GitHub\n      </IconWithText>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { PropType as PageType } from 'templates/Page'\nimport { PlainLink } from 'components/Link/PlainLink'\nimport { gradientTextStyles } from 'utils/gradientTextStyles'\nimport { COLORS } from 'consts/themes'\nimport { SPACINGS } from 'consts/spacings'\nimport { IconWithText } from 'components/Icon/IconWithText'\n\nconst ITEM_SPACING = SPACINGS.FOUR\n\nconst Wrapper = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  margin-top: ${SPACINGS.EIGHT};\n  margin-left: -${ITEM_SPACING};\n`\n\nconst Item = styled.div`\n  padding-left: ${ITEM_SPACING};\n\n  > a {\n    color: ${COLORS.BRAND_PRIMARY};\n  }\n\n  &:nth-child(2) > a {\n    text-align: right;\n    color: ${COLORS.BRAND_SECONDARY};\n  }\n`\n\nconst ItemLabel = styled.div`\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  padding-bottom: ${SPACINGS.ONE};\n`\n\nconst ItemTitle = styled.div`\n  display: inline-flex;\n  align-items: center;\n  font-weight: 500;\n`\n\nconst GradientText = styled.span`\n  ${gradientTextStyles};\n`\n\ntype PropType = {\n  next: PageType['pageContext']['next']\n  previous: PageType['pageContext']['previous']\n}\n\nexport const Pagination = (props: PropType) => {\n  const { next, previous } = props\n\n  return (\n    <Wrapper aria-label=\"Pagination Navigation\">\n      <Item>\n        {previous && (\n          <PlainLink to={previous.slug}>\n            <ItemLabel>Previous</ItemLabel>\n            <ItemTitle>\n              <IconWithText iconSvg=\"arrowLeft\">\n                <GradientText>{previous.title}</GradientText>\n              </IconWithText>\n            </ItemTitle>\n          </PlainLink>\n        )}\n      </Item>\n      <Item>\n        {next && (\n          <PlainLink to={next.slug}>\n            <ItemLabel>Next</ItemLabel>\n            <ItemTitle>\n              <IconWithText iconSvg=\"arrowRight\" iconSide=\"right\">\n                <GradientText>{next.title}</GradientText>\n              </IconWithText>\n            </ItemTitle>\n          </PlainLink>\n        )}\n      </Item>\n    </Wrapper>\n  )\n}\n","import React, { PropsWithChildren } from 'react'\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\nimport { removeProtocol } from 'utils/removeProtocol'\n\ntype PropType = PropsWithChildren<{\n  title: string\n  description?: string\n  lang?: string\n  url: string\n}>\n\nexport const Seo = (props: PropType) => {\n  const { title, description, lang = 'en', url, children } = props\n  const siteMetadata = useSiteMetadata()\n  const metaDescription = description || siteMetadata.description\n\n  return (\n    <>\n      <html lang={lang} />\n      <title>{title} | Embla Carousel</title>\n      <link rel=\"canonical\" href={url} />\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"og:title\" content={title} />\n      <meta name=\"og:description\" content={metaDescription} />\n      <meta name=\"og:type\" content=\"article\" />\n      <meta name=\"og:locale\" content=\"en_EN\" />\n      <meta name=\"og:url\" content={url} />\n      <meta\n        name=\"og:site_name\"\n        content={removeProtocol(siteMetadata.siteUrl)}\n      />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={siteMetadata.author} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n\n      {children}\n    </>\n  )\n}\n","export const removeProtocol = (url: string): string =>\n  url.replace(/(^\\w+:|^)\\/\\//, '')\n","export default __webpack_public_path__ + \"static/maskable-36b9e327abc26d5d02e9350d184a058f.png\";"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","strong","hr","h2","a","div","_provideComponents","components","PageChildLinks","id","component","Error","_missingMdxReference","React","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","Head","data","pageContext","siteUrl","author","useSiteMetadata","title","description","date","mdx","frontmatter","dateToISOString","useMemo","Date","toISOString","Seo","url","slug","type","removeProtocol","maskable","Page","children","next","previous","filePath","Breadcrumbs","SKIP_TO_CONTENT_ID","Mdx","EditPage","pageUrl","Pagination","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Wrapper","styled","FONT_SIZES","SPACINGS","itemStyles","css","COLORS","Link","PlainLink","ActiveTitle","Separator","Icon","breadcrumbs","flat","routes","useRoutes","currentRoute","find","route","filter","isRoutePartiallyActive","sort","b","level","useRouteBreadcrumbs","length","map","index","Fragment","key","to","size","svg","role","URLS","IconWithText","iconSvg","iconSize","ITEM_SPACING","Item","ItemLabel","ItemTitle","GradientText","gradientTextStyles","iconSide","lang","siteMetadata","metaDescription","rel","name","content","replace"],"sourceRoot":""}
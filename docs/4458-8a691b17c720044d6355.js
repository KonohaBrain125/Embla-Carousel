"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[4458],{4458:function(e,n,s){s.r(n),n.default='import React, { useCallback, useEffect, useState } from \'react\'\nimport useEmblaCarousel, {\n  EmblaCarouselType,\n  EmblaOptionsType\n} from \'embla-carousel-react\'\nimport imageByIndex from \'../imageByIndex\'\n\ntype PropType = {\n  slides: number[]\n  options?: EmblaOptionsType\n}\n\nconst EmblaCarousel: React.FC<PropType> = (props) => {\n  const { slides, options } = props\n  const [emblaRef, emblaApi] = useEmblaCarousel(options)\n  const [scrollProgress, setScrollProgress] = useState(0)\n\n  const onScroll = useCallback((emblaApi: EmblaCarouselType) => {\n    const progress = Math.max(0, Math.min(1, emblaApi.scrollProgress()))\n    setScrollProgress(progress * 100)\n  }, [])\n\n  useEffect(() => {\n    if (!emblaApi) return\n\n    onScroll(emblaApi)\n    emblaApi.on(\'reInit\', onScroll)\n    emblaApi.on(\'scroll\', onScroll)\n  }, [emblaApi, onScroll])\n\n  return (\n    <div className="embla">\n      <div className="embla__viewport" ref={emblaRef}>\n        <div className="embla__container">\n          {slides.map((index) => (\n            <div className="embla__slide" key={index}>\n              <div className="embla__slide__number">\n                <span>{index + 1}</span>\n              </div>\n              <img\n                className="embla__slide__img"\n                src={imageByIndex(index)}\n                alt="Your alt text"\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className="embla__progress">\n        <div\n          className="embla__progress__bar"\n          style={{ transform: `translate3d(${scrollProgress}%,0px,0px)` }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EmblaCarousel\n'}}]);
//# sourceMappingURL=4458-8a691b17c720044d6355.js.map
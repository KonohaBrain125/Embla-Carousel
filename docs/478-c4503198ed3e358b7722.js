"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[478],{478:function(n,e,t){t.r(e),e.default="import React, { useCallback, useEffect, useState } from 'react';\n\nexport const useDotButton = (emblaApi, \n/*__NAV_AUTOPLAY_REPLACE_START__*/\nonButtonClick\n/*__NAV_AUTOPLAY_REPLACE_END__*/\n) => {\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const [scrollSnaps, setScrollSnaps] = useState([]);\n    \n    const onDotButtonClick = useCallback((index) => {\n        if (!emblaApi)\n            return;\n        emblaApi.scrollTo(index);\n        /*__NAV_AUTOPLAY_REPLACE_START__*/\n        if (onButtonClick)\n            onButtonClick(emblaApi);\n        /*__NAV_AUTOPLAY_REPLACE_END__*/\n    }, [\n        emblaApi,\n        /*__NAV_AUTOPLAY_REPLACE_START__*/ onButtonClick /*__NAV_AUTOPLAY_REPLACE_END__*/\n    ]);\n    \n    const onInit = useCallback((emblaApi) => {\n        setScrollSnaps(emblaApi.scrollSnapList());\n    }, []);\n    \n    const onSelect = useCallback((emblaApi) => {\n        setSelectedIndex(emblaApi.selectedScrollSnap());\n    }, []);\n    \n    useEffect(() => {\n        if (!emblaApi)\n            return;\n        \n        onInit(emblaApi);\n        onSelect(emblaApi);\n        emblaApi.on('reInit', onInit);\n        emblaApi.on('reInit', onSelect);\n        emblaApi.on('select', onSelect);\n    }, [emblaApi, onInit, onSelect]);\n    \n    return {\n        selectedIndex,\n        scrollSnaps,\n        onDotButtonClick\n    };\n};\n\nexport const DotButton = (props) => {\n    const { children, ...restProps } = props;\n    \n    return (<button type=\"button\" {...restProps}>\n      {children}\n    </button>);\n};\n"}}]);
//# sourceMappingURL=478-c4503198ed3e358b7722.js.map
"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[7585],{7585:function(_,n,e){e.r(n),n.default="import React, {\n  /*__NAV_AUTOPLAY_REPLACE_START__*/ useCallback /*__NAV_AUTOPLAY_REPLACE_END__*/\n} from 'react'\nimport {\n  EmblaOptionsType,\n  /*__NAV_AUTOPLAY_REPLACE_START__*/ EmblaCarouselType /*__NAV_AUTOPLAY_REPLACE_END__*/\n} from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\n/*__DOT_BUTTONS_REPLACE_START__*/\nimport { DotButton, useDotButton } from './EmblaCarouselDotButton'\n/*__DOT_BUTTONS_REPLACE_END__*/\n/*__PREV_NEXT_BUTTONS_REPLACE_START__*/\nimport {\n  PrevButton,\n  NextButton,\n  usePrevNextButtons\n} from './EmblaCarouselArrowButtons'\n/*__PREV_NEXT_BUTTONS_REPLACE_END__*/\n/*__AUTOPLAY_REPLACE_START__*/\nimport Autoplay from 'embla-carousel-autoplay'\n/*__AUTOPLAY_REPLACE_END__*/\nimport imageByIndex from '../imageByIndex'\n\ntype PropType = {\n  slides: number[]\n  options?: EmblaOptionsType\n}\n\nconst EmblaCarousel: React.FC<PropType> = (props) => {\n  const { slides, options } = props\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    options,\n    /*__PLUGINS_REPLACE_START__*/\n    [\n      /*__AUTOPLAY_REPLACE_START__*/\n      Autoplay()\n      /*__AUTOPLAY_REPLACE_END__*/\n    ]\n    /*__PLUGINS_REPLACE_END__*/\n  )\n\n  /*__NAV_AUTOPLAY_REPLACE_START__*/\n  const onButtonClick = useCallback((emblaApi: EmblaCarouselType) => {\n    const { autoplay } = emblaApi.plugins()\n    if (!autoplay) return\n    if (autoplay.options.stopOnInteraction !== false) autoplay.stop()\n  }, [])\n  /*__NAV_AUTOPLAY_REPLACE_END__*/\n\n  /*__DOT_BUTTONS_REPLACE_START__*/\n  const { selectedIndex, scrollSnaps, onDotButtonClick } = useDotButton(\n    emblaApi,\n    /*__NAV_AUTOPLAY_REPLACE_START__*/ onButtonClick /*__NAV_AUTOPLAY_REPLACE_END__*/\n  )\n  /*__DOT_BUTTONS_REPLACE_END__*/\n\n  /*__PREV_NEXT_BUTTONS_REPLACE_START__*/\n  const {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick\n  } = usePrevNextButtons(\n    emblaApi,\n    /*__NAV_AUTOPLAY_REPLACE_START__*/ onButtonClick /*__NAV_AUTOPLAY_REPLACE_END__*/\n  )\n  /*__PREV_NEXT_BUTTONS_REPLACE_END__*/\n\n  return (\n    <div\n      className=\"embla\"\n      /*__DIRECTION_RTL_REPLACE_START__*/ dir=\"rtl\" /*__DIRECTION_RTL_REPLACE_END__*/\n    >\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (\n            <div className=\"embla__slide\" key={index}>\n              <div className=\"embla__slide__number\">\n                <span>{index + 1}</span>\n              </div>\n              <img\n                className=\"embla__slide__img\"\n                src={imageByIndex(index)}\n                alt=\"Your alt text\"\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/*__PREV_NEXT_BUTTONS_REPLACE_START__*/}\n      <div className=\"embla__buttons\">\n        <PrevButton onClick={onPrevButtonClick} disabled={prevBtnDisabled} />\n        <NextButton onClick={onNextButtonClick} disabled={nextBtnDisabled} />\n      </div>\n      {/*__PREV_NEXT_BUTTONS_REPLACE_END__*/}\n\n      {/*__DOT_BUTTONS_REPLACE_START__*/}\n      <div className=\"embla__dots\">\n        {scrollSnaps.map((_, index) => (\n          <DotButton\n            key={index}\n            onClick={() => onDotButtonClick(index)}\n            className={'embla__dot'.concat(\n              index === selectedIndex ? ' embla__dot--selected' : ''\n            )}\n          />\n        ))}\n      </div>\n      {/*__DOT_BUTTONS_REPLACE_END__*/}\n    </div>\n  )\n}\n\nexport default EmblaCarousel\n"}}]);
//# sourceMappingURL=7585-6a3a106985d349665a59.js.map
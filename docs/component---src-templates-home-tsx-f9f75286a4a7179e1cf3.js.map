{"version":3,"file":"component---src-templates-home-tsx-f9f75286a4a7179e1cf3.js","mappings":"6TAMaA,GAAsBC,EAAAA,EAAAA,KAAH,iIAGnBC,EAAAA,EAAAA,QAAgB,qBAAGC,IAAgB,MAC1CD,EAAAA,EAAAA,QAAgB,qBAAGE,KAAkB,MAGhCC,EAAAA,GAAAA,gBACWA,EAAAA,GAAAA,cAClBC,EAAAA,G,IAGyBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAVC,WAAA,wDAAGF,CAAH,SACtBP,G,SCfSU,GAAoBH,EAAAA,EAAAA,SAAOI,EAAAA,GAAVF,WAAA,uEAAGF,CAAH,SAC1BP,GCUEY,EAAUL,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,8NAOTM,EAAAA,EAAAA,OACeX,EAAAA,EAAAA,IAGfW,EAAAA,EAAAA,OACeX,EAAAA,EAAAA,QAObY,GAAWP,EAAAA,EAAAA,SAAOQ,EAAAA,IAAVN,WAAA,2DAAGF,CAAH,0CAEVS,EAAAA,EAAAA,GAAuB,SAEvBH,EAAAA,EAAAA,QACEG,EAAAA,EAAAA,GAAuB,SAGzBH,EAAAA,EAAAA,QACEG,EAAAA,EAAAA,GAAuB,UAIvBC,EAAUV,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,+EAlCa,QAqCtBM,EAAAA,EAAAA,OACeX,EAAAA,EAAAA,IAIfW,EAAAA,EAAAA,OACeX,EAAAA,EAAAA,MAIbgB,EAAKX,EAAAA,QAAAA,GAAAA,WAAH,qDAAGA,CAAH,oKACGF,EAAAA,GAAAA,mBACQH,EAAAA,EAAAA,MACJiB,EAAAA,EAAAA,QAAkB,mBAAiB,EAAjB,EAAGC,MAS9BC,EAAAA,EAGFR,EAAAA,EAAAA,OACaM,EAAAA,EAAAA,QAAkB,qBAAGD,GAAc,OAGhDL,EAAAA,EAAAA,OACaM,EAAAA,EAAAA,QAAkB,qBAAGD,GAAc,MAI9CE,EAAKb,EAAAA,QAAAA,GAAAA,WAAH,qDAAGA,CAAH,gEACGF,EAAAA,GAAAA,qBACIc,EAAAA,EAAAA,GAGXN,EAAAA,EAAAA,OACaM,EAAAA,EAAAA,QAAkB,qBAAGG,GAAc,QAI9CC,EAAahB,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,0CACCL,EAAAA,EAAAA,KAEbW,EAAAA,EAAAA,OACeX,EAAAA,EAAAA,KAINsB,EAAQ,WACnB,OAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAEf,OACEC,EAAAA,cAAChB,EAAD,KACEgB,EAAAA,cAACd,EAAD,CAAUe,WAAW,SACrBD,EAAAA,cAACX,EAAD,KACEW,EAAAA,cAACV,EAAD,KACGQ,EAAMI,MAAM,KAAKC,KAAI,SAACC,EAAMC,GAAP,OACpBL,EAAAA,cAAAA,OAAAA,CAAMM,IAAQF,EAAL,IAAaC,GAAUD,OAGpCJ,EAAAA,cAACR,EAAD,KAAKO,GACLC,EAAAA,cAACL,EAAD,CAAYY,GAAIC,EAAAA,GACdR,EAAAA,cAAClB,EAAD,CAAmB2B,GAAG,qBAAtB,oB,oBC1GJC,EAAmBpC,EAAAA,EAAAA,QAAgB,qBAAGC,IAAgB,MAEtDS,EAAUL,EAAAA,QAAAA,GAAAA,WAAH,yDAAGA,CAAH,4LAIK+B,EACEA,EACHpC,EAAAA,EAAAA,MAEbW,EAAAA,EAAAA,OACeX,EAAAA,EAAAA,OACGA,EAAAA,EAAAA,MAGlBW,EAAAA,EAAAA,OACeX,EAAAA,EAAAA,QACGA,EAAAA,EAAAA,OAIhBqC,EAAMhC,EAAAA,QAAAA,GAAAA,WAAH,qDAAGA,CAAH,iHACS+B,EACEA,EAGhBzB,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,QAKE2B,EAAajC,EAAAA,QAAAA,QAAAA,WAAH,4DAAGA,CAAH,sIACHL,EAAAA,EAAAA,KACSG,EAAAA,GAAAA,iBAQhBoC,EAAYlC,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,sDACIL,EAAAA,EAAAA,QAAgB,qBAAGwC,IAAgB,MACvCvB,EAAAA,EAAAA,IAITwB,EAAUpC,EAAAA,QAAAA,EAAAA,WAAH,yDAAGA,CAAH,iCACML,EAAAA,EAAAA,MACRG,EAAAA,GAAAA,mBAGLuC,EAAUrC,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,4CAEIY,EAAAA,EAAAA,cACXE,EAAAA,EAIOhB,EAAAA,GAAAA,iBAIAwC,EAAO,WAClB,OACEjB,EAAAA,cAAChB,EAAD,KACEgB,EAAAA,cAACW,EAAD,KACEX,EAAAA,cAACY,EAAD,KACEZ,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACa,EAAD,0BACAb,EAAAA,cAACe,EAAD,qEAIFf,EAAAA,cAACgB,EAAD,KACEhB,EAAAA,cAACkB,EAAAA,EAAD,CAAaT,GAAG,SACdT,EAAAA,cAACmB,EAAAA,EAAD,CAAcC,QAAQ,aAAaC,SAAS,SAA5C,iBAORrB,EAAAA,cAACW,EAAD,KACEX,EAAAA,cAACY,EAAD,KACEZ,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACa,EAAD,sBACAb,EAAAA,cAACe,EAAD,mEAIFf,EAAAA,cAACgB,EAAD,KACEhB,EAAAA,cAACkB,EAAAA,EAAD,CAAaT,GAAG,aACdT,EAAAA,cAACmB,EAAAA,EAAD,CAAcC,QAAQ,aAAaC,SAAS,SAA5C,iBAORrB,EAAAA,cAACW,EAAD,KACEX,EAAAA,cAACY,EAAD,KACEZ,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACa,EAAD,oBACAb,EAAAA,cAACe,EAAD,6DAIFf,EAAAA,cAACgB,EAAD,KACEhB,EAAAA,cAACkB,EAAAA,EAAD,CAAaT,GAAG,4BACdT,EAAAA,cAACmB,EAAAA,EAAD,CAAcC,QAAQ,aAAaC,SAAS,SAA5C,mBCvHRrC,EAAUL,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,MAEA2C,EAAO,WAClB,OACEtB,EAAAA,cAAChB,EAAD,KACEgB,EAAAA,cAACJ,EAAD,MACAI,EAAAA,cAACiB,EAAD,Q,8BCCAM,EAAa5C,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,iCAFE,WAuDlB,EA7Ba,SAAC6C,GACZ,IAAQC,EAASD,EAAME,KAAKC,IAApBF,KACR,GAAiC5B,EAAAA,EAAAA,KAAzB+B,EAAR,EAAQA,QAAS7B,EAAjB,EAAiBA,YAEjB,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC6B,EAAAA,EAAD,CAAK/B,MAAOC,EAAaA,YAAaA,EAAa+B,IAAKF,GACtD5B,EAAAA,cAAAA,SAAAA,CAAQ+B,KAAK,uBAAb,qIAKiBC,EAAAA,EAAAA,GAAeJ,GALhC,qCAMwB7B,EANxB,6BAOgB6B,EAPhB,gCAQkBA,EARlB,8CASiBA,EAAUK,EAAAA,EAT3B,iCAcFjC,EAAAA,cAACsB,EAAD,MACAtB,EAAAA,cAACuB,EAAD,KACEvB,EAAAA,cAACkC,EAAAA,EAAD,CAAKT,KAAMA","sources":["webpack://embla-carousel-docs/./src/components/Button/PrimaryButton.tsx","webpack://embla-carousel-docs/./src/components/Link/ButtonLink.tsx","webpack://embla-carousel-docs/./src/components/Hero/Brand.tsx","webpack://embla-carousel-docs/./src/components/Hero/Usps.tsx","webpack://embla-carousel-docs/./src/components/Hero/Hero.tsx","webpack://embla-carousel-docs/./src/templates/Home.tsx"],"sourcesContent":["import styled, { css } from 'styled-components'\nimport { PlainButton } from './PlainButton'\nimport { COLORS } from 'consts/themes'\nimport { SPACINGS } from 'consts/spacings'\nimport { gradientBackgroundStyles } from 'utils/gradientBackgroundStyles'\n\nexport const primaryButtonStyles = css`\n  line-height: 1.15;\n  border-radius: 3rem;\n  padding: ${SPACINGS.CUSTOM(({ TWO }) => TWO + 0.2)}\n    ${SPACINGS.CUSTOM(({ FOUR }) => FOUR + 0.2)};\n  font-weight: bold;\n  display: inline-flex;\n  color: ${COLORS.BACKGROUND_SITE};\n  background-color: ${COLORS.BRAND_PRIMARY};\n  ${gradientBackgroundStyles};\n`\n\nexport const PrimaryButton = styled(PlainButton)`\n  ${primaryButtonStyles};\n`\n","import styled from 'styled-components'\nimport { primaryButtonStyles } from 'components/Button/PrimaryButton'\nimport { PlainLink } from './PlainLink'\n\nexport const PrimaryButtonLink = styled(PlainLink)`\n  ${primaryButtonStyles};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { MEDIA } from 'consts/breakpoints'\nimport { COLORS } from 'consts/themes'\nimport { SPACINGS } from 'consts/spacings'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { SiteLogo } from 'components/SiteLogo/SiteLogo'\nimport { createSquareSizeStyles } from 'utils/createSquareSizeStyles'\nimport { gradientTextStyles } from 'utils/gradientTextStyles'\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\nimport { SKIP_TO_CONTENT_ID } from 'components/TabAccess/SkipToContent'\nimport { PrimaryButtonLink } from 'components/Link/ButtonLink'\n\nconst MAX_CONTENT_WIDTH = '50rem'\n\nconst Wrapper = styled.div`\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  ${MEDIA.MIN_SM} {\n    padding-top: ${SPACINGS.SIX};\n  }\n\n  ${MEDIA.MIN_MD} {\n    padding-top: ${SPACINGS.TWELVE};\n    align-items: flex-start;\n    justify-content: space-between;\n    flex-direction: row-reverse;\n  }\n`\n\nconst HeroLogo = styled(SiteLogo)`\n  flex: 0 0 auto;\n  ${createSquareSizeStyles('15rem')};\n\n  ${MEDIA.MIN_SM} {\n    ${createSquareSizeStyles('22rem')};\n  }\n\n  ${MEDIA.MIN_MD} {\n    ${createSquareSizeStyles('28rem')};\n  }\n`\n\nconst Content = styled.div`\n  max-width: ${MAX_CONTENT_WIDTH};\n\n  ${MEDIA.MAX_MD} {\n    padding-top: ${SPACINGS.SIX};\n    text-align: center;\n  }\n\n  ${MEDIA.MAX_SM} {\n    padding-top: ${SPACINGS.FOUR};\n  }\n`\n\nconst H1 = styled.h1`\n  color: ${COLORS.TEXT_HIGH_CONTRAST};\n  margin-bottom: ${SPACINGS.THREE};\n  font-size: ${FONT_SIZES.CUSTOM(({ H2 }) => H2 * 2)};\n  line-height: 0.9;\n  font-weight: 900;\n\n  > span {\n    display: block;\n  }\n\n  > span:nth-child(2) {\n    ${gradientTextStyles};\n  }\n\n  ${MEDIA.MIN_XS} {\n    font-size: ${FONT_SIZES.CUSTOM(({ H1 }) => H1 + 2.4)};\n  }\n\n  ${MEDIA.MIN_SM} {\n    font-size: ${FONT_SIZES.CUSTOM(({ H1 }) => H1 + 3)};\n  }\n`\n\nconst H2 = styled.h2`\n  color: ${COLORS.TEXT_MEDIUM_CONTRAST};\n  font-size: ${FONT_SIZES.H4};\n  line-height: 1.5;\n\n  ${MEDIA.MIN_SM} {\n    font-size: ${FONT_SIZES.CUSTOM(({ H3 }) => H3 - 0.05)};\n  }\n`\n\nconst CtaWrapper = styled.div`\n  padding-top: ${SPACINGS.FOUR};\n\n  ${MEDIA.MIN_SM} {\n    padding-top: ${SPACINGS.SIX};\n  }\n`\n\nexport const Brand = () => {\n  const { title, description } = useSiteMetadata()\n\n  return (\n    <Wrapper>\n      <HeroLogo appearance=\"blur\" />\n      <Content>\n        <H1>\n          {title.split(' ').map((word, index) => (\n            <span key={`${word}-${index}`}>{word}</span>\n          ))}\n        </H1>\n        <H2>{description}</H2>\n        <CtaWrapper id={SKIP_TO_CONTENT_ID}>\n          <PrimaryButtonLink to=\"/examples/static/\">\n            Try Examples\n          </PrimaryButtonLink>\n        </CtaWrapper>\n      </Content>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IconWithText } from 'components/Icon/IconWithText'\nimport { ContentLink } from 'components/Link/ContentLink'\nimport { COLORS } from 'consts/themes'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { MEDIA } from 'consts/breakpoints'\nimport { SPACINGS } from 'consts/spacings'\nimport { gradientTextStyles } from 'utils/gradientTextStyles'\n\nconst USP_ITEM_SPACING = SPACINGS.CUSTOM(({ TWO }) => TWO + 0.2)\n\nconst Wrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-left: -${USP_ITEM_SPACING};\n  margin-bottom: -${USP_ITEM_SPACING};\n  padding-top: ${SPACINGS.EIGHT};\n\n  ${MEDIA.MIN_SM} {\n    padding-top: ${SPACINGS.ELEVEN};\n    padding-bottom: ${SPACINGS.THREE};\n  }\n\n  ${MEDIA.MIN_MD} {\n    padding-top: ${SPACINGS.SIXTEEN};\n    padding-bottom: ${SPACINGS.EIGHT};\n  }\n`\n\nconst Usp = styled.li`\n  padding-left: ${USP_ITEM_SPACING};\n  padding-bottom: ${USP_ITEM_SPACING};\n  flex: 0 0 100%;\n\n  ${MEDIA.MIN_XS} {\n    flex: 0 0 calc(100% / 2);\n  }\n\n  ${MEDIA.MIN_SM} {\n    flex: 0 0 calc(100% / 3);\n  }\n`\n\nconst UspContent = styled.article`\n  padding: ${SPACINGS.FOUR};\n  background-color: ${COLORS.BACKGROUND_CODE};\n  border-radius: 1rem;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst UspHeader = styled.h3`\n  margin-bottom: ${SPACINGS.CUSTOM(({ ONE }) => ONE + 0.2)};\n  font-size: ${FONT_SIZES.H4};\n  font-weight: bold;\n`\n\nconst UspText = styled.p`\n  margin-bottom: ${SPACINGS.THREE};\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n`\n\nconst UspLink = styled.div`\n  span {\n    font-size: ${FONT_SIZES.COMPLEMENTARY};\n    ${gradientTextStyles};\n  }\n\n  svg {\n    color: ${COLORS.BRAND_SECONDARY};\n  }\n`\n\nexport const Usps = () => {\n  return (\n    <Wrapper>\n      <Usp>\n        <UspContent>\n          <div>\n            <UspHeader>Highly Extensible</UspHeader>\n            <UspText>\n              An API designed with flexibility and extensibility in mind.\n            </UspText>\n          </div>\n          <UspLink>\n            <ContentLink to=\"/api/\">\n              <IconWithText iconSvg=\"arrowRight\" iconSide=\"right\">\n                Read more\n              </IconWithText>\n            </ContentLink>\n          </UspLink>\n        </UspContent>\n      </Usp>\n      <Usp>\n        <UspContent>\n          <div>\n            <UspHeader>Plugin System</UspHeader>\n            <UspText>\n              Add functionality and customize your carousels as you go.\n            </UspText>\n          </div>\n          <UspLink>\n            <ContentLink to=\"/plugins/\">\n              <IconWithText iconSvg=\"arrowRight\" iconSide=\"right\">\n                Read more\n              </IconWithText>\n            </ContentLink>\n          </UspLink>\n        </UspContent>\n      </Usp>\n      <Usp>\n        <UspContent>\n          <div>\n            <UspHeader>Fully Typed</UspHeader>\n            <UspText>\n              Built-in types because it is written in TypeScript.\n            </UspText>\n          </div>\n          <UspLink>\n            <ContentLink to=\"/get-started/typescript/\">\n              <IconWithText iconSvg=\"arrowRight\" iconSide=\"right\">\n                Read more\n              </IconWithText>\n            </ContentLink>\n          </UspLink>\n        </UspContent>\n      </Usp>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Brand } from './Brand'\nimport { Usps } from './Usps'\n\nconst Wrapper = styled.div``\n\nexport const Hero = () => {\n  return (\n    <Wrapper>\n      <Brand />\n      <Usps />\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport maskable from 'assets/images/maskable.png'\nimport { graphql } from 'gatsby'\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\nimport { Hero } from 'components/Hero/Hero'\nimport { Seo } from 'components/Seo/Seo'\nimport { Mdx } from 'components/Mdx/Mdx'\nimport { removeProtocol } from 'utils/removeProtocol'\n\nconst MAX_WIDTH = '68.2rem'\n\nconst MdxWrapper = styled.div`\n  max-width: ${MAX_WIDTH};\n  margin: 0 auto;\n`\n\nexport const query = graphql`\n  query HomeQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      body\n    }\n  }\n`\n\ntype PropType = {\n  data: {\n    mdx: {\n      body: string\n    }\n  }\n  pageContext: {\n    id: string\n  }\n}\n\nconst Home = (props: PropType) => {\n  const { body } = props.data.mdx\n  const { siteUrl, description } = useSiteMetadata()\n\n  return (\n    <>\n      <Seo title={description} description={description} url={siteUrl}>\n        <script type=\"application/ld+json\">\n          {`\n            {\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"Organization\",\n              \"name\": \"${removeProtocol(siteUrl)}\",\n              \"description\": \"${description}\",\n              \"url\": \"${siteUrl}/\",\n              \"image\": \"${siteUrl}/share-image.png\",\n              \"logo\": \"${siteUrl}${maskable}\"\n            }\n          `}\n        </script>\n      </Seo>\n      <Hero />\n      <MdxWrapper>\n        <Mdx body={body} />\n      </MdxWrapper>\n    </>\n  )\n}\n\nexport default Home\n"],"names":["primaryButtonStyles","css","SPACINGS","TWO","FOUR","COLORS","gradientBackgroundStyles","styled","PlainButton","withConfig","PrimaryButtonLink","PlainLink","Wrapper","MEDIA","HeroLogo","SiteLogo","createSquareSizeStyles","Content","H1","FONT_SIZES","H2","gradientTextStyles","H3","CtaWrapper","Brand","useSiteMetadata","title","description","React","appearance","split","map","word","index","key","id","SKIP_TO_CONTENT_ID","to","USP_ITEM_SPACING","Usp","UspContent","UspHeader","ONE","UspText","UspLink","Usps","ContentLink","IconWithText","iconSvg","iconSide","Hero","MdxWrapper","props","body","data","mdx","siteUrl","Seo","url","type","removeProtocol","maskable","Mdx"],"sourceRoot":""}
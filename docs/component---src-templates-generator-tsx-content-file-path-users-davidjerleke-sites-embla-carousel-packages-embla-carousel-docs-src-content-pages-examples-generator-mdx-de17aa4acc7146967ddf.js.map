{"version":3,"file":"component---src-templates-generator-tsx-content-file-path-users-davidjerleke-sites-embla-carousel-packages-embla-carousel-docs-src-content-pages-examples-generator-mdx-de17aa4acc7146967ddf.js","mappings":"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","sources":["webpack://embla-carousel-docs/./src/utils/numberWithinRange.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorContext.tsx","webpack://embla-carousel-docs/./src/hooks/useCarouselGenerator.ts","webpack://embla-carousel-docs/./src/consts/carouselGenerator.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/carouselGeneratorToggleFeatures.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/createCarouselGeneratorStyles.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/createCarouselGeneratorOptions.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/createCarouselGeneratorPlugins.ts","webpack://embla-carousel-docs/./src/components/Examples/CarouselGenerator/CarouselGeneratorSandboxes.ts","webpack://embla-carousel-docs/./src/utils/camelOrPascalToKebabCase.ts","webpack://embla-carousel-docs/./src/utils/carouselGenerator.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorFrameworkSettings.tsx","webpack://embla-carousel-docs/./src/components/Input/InputCheckbox.tsx","webpack://embla-carousel-docs/./src/components/Input/InputText.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorFormItems.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorBasicSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSlidesSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorAlignmentSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorNavigationSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorPlugins.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSubmit.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSupport.tsx","webpack://embla-carousel-docs/./src/content/pages/examples/generator.mdx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorForm.tsx","webpack://embla-carousel-docs/./src/templates/Default.tsx","webpack://embla-carousel-docs/./src/templates/Generator.tsx"],"sourcesContent":["export const numberWithinRange = (\n  number: number,\n  min: number,\n  max: number\n): number => Math.min(Math.max(number, min), max)\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { numberWithinRange } from 'utils/numberWithinRange'\n\nexport const CONTEXT_DEFAULT_VALUE: CarouselGeneratorContextType = {\n  formData: {\n    framework: '',\n    loop: false,\n    dragFree: false,\n    axis: 'x',\n    direction: 'ltr',\n    accessibility: false,\n    slideSize: '100',\n    slideGapSize: '10',\n    edgeGap: '0',\n    align: 'center',\n    containScroll: true,\n    navigationPrevNextButtons: false,\n    navigationDots: false,\n    autoplay: false,\n    wheelGestures: false\n  },\n  onChange: () => undefined,\n  onCheckboxChange: () => undefined,\n  onRadioChange: () => undefined,\n  onNumberChange: () => undefined,\n  onNumberBlur: () => undefined\n}\n\nexport type CarouselGeneratorContextType = {\n  formData: CarouselGeneratorFormDataType\n  onChange: <Key extends keyof CarouselGeneratorFormDataType>(\n    key: Key,\n    value: CarouselGeneratorFormDataType[Key]\n  ) => void\n  onCheckboxChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onRadioChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onNumberChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onNumberBlur: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const CarouselGeneratorContext =\n  createContext<CarouselGeneratorContextType>(CONTEXT_DEFAULT_VALUE)\n\ntype PropType = PropsWithChildren<{}>\n\nexport const CarouselGeneratorProvider = (props: PropType) => {\n  const { children } = props\n  const [formData, setFormData] = useState<CarouselGeneratorFormDataType>(\n    CONTEXT_DEFAULT_VALUE.formData\n  )\n\n  const onChange: CarouselGeneratorContextType['onChange'] = useCallback(\n    (key, value) => {\n      setFormData((currentFormValues) => ({\n        ...currentFormValues,\n        [key]: value\n      }))\n    },\n    []\n  )\n\n  const onCheckboxChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, checked } = event.currentTarget\n      const fieldName = name as keyof CarouselGeneratorFormDataType\n\n      onChange(fieldName, checked)\n    },\n    [onChange]\n  )\n\n  const onRadioChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget\n      const fieldName = name as keyof CarouselGeneratorFormDataType\n\n      onChange(fieldName, value)\n    },\n    [onChange]\n  )\n\n  const onNumberChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget\n      const fieldName = name as keyof CarouselGeneratorFormDataType\n\n      onChange(fieldName, value)\n    },\n    [onChange]\n  )\n\n  const onNumberBlur = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const input = event.currentTarget\n      const fieldName = input.name as keyof CarouselGeneratorFormDataType\n      const minValue = parseInt(input.getAttribute('min') || '', 10)\n      const maxValue = parseInt(input.getAttribute('max') || '', 10)\n      const value = numberWithinRange(\n        parseFloat(input.value || '0'),\n        minValue,\n        maxValue\n      )\n\n      onChange(fieldName, value.toString())\n    },\n    [onChange]\n  )\n\n  const value = useMemo(\n    () => ({\n      formData,\n      onChange,\n      onCheckboxChange,\n      onRadioChange,\n      onNumberChange,\n      onNumberBlur\n    }),\n    [\n      formData,\n      onChange,\n      onCheckboxChange,\n      onRadioChange,\n      onNumberChange,\n      onNumberBlur\n    ]\n  )\n\n  return (\n    <CarouselGeneratorContext.Provider value={value}>\n      {children}\n    </CarouselGeneratorContext.Provider>\n  )\n}\n","import { useContext } from 'react'\nimport {\n  CarouselGeneratorContext,\n  CarouselGeneratorContextType\n} from 'components/CarouselGenerator/CarouselGeneratorContext'\n\nexport const useCarouselGenerator = (): CarouselGeneratorContextType =>\n  useContext(CarouselGeneratorContext)\n","import { EmblaOptionsType } from 'embla-carousel'\nimport { SandboxLabelKeyType } from 'consts/sandbox'\n\nexport type CarouselGeneratorFormDataType = {\n  framework: SandboxLabelKeyType | ''\n  loop: boolean\n  dragFree: boolean\n  axis: Extract<EmblaOptionsType['axis'], 'x' | 'y'>\n  direction: Extract<EmblaOptionsType['direction'], 'ltr' | 'rtl'>\n  accessibility: boolean\n  slideSize: string\n  slideGapSize: string\n  edgeGap: string\n  align: Extract<EmblaOptionsType['align'], 'start' | 'center' | 'end'>\n  containScroll: boolean\n  navigationPrevNextButtons: boolean\n  navigationDots: boolean\n  autoplay: boolean\n  wheelGestures: boolean\n}\n\nexport const CAROUSEL_GENERATOR_FORM_FIELDS = <const>{\n  FRAMEWORK: 'framework',\n  LOOP: 'loop',\n  DRAG_FREE: 'dragFree',\n  AXIS: 'axis',\n  DIRECTION: 'direction',\n  ACCESSIBILITY: 'accessibility',\n  SLIDE_SIZE: 'slideSize',\n  SLIDE_GAP_SIZE: 'slideGapSize',\n  EDGE_GAP: 'edgeGap',\n  ALIGN: 'align',\n  CONTAIN_SCROLL: 'containScroll',\n  NAVIGATION_PREV_NEXT_BUTTONS: 'navigationPrevNextButtons',\n  NAVIGATION_DOTS: 'navigationDots',\n  AUTOPLAY: 'autoplay',\n  WHEEL_GESTURES: 'wheelGestures'\n}\n\nexport const CAROUSEL_GENERATOR_FORM_PREFIX = 'carousel-generator-form'\n","import { SandboxModuleType } from 'consts/sandbox'\nimport { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\n\nconst START = '{?\\\\/\\\\*'\nconst END = '\\\\*\\\\/}?'\nconst MIDDLE = `${END}([\\\\s\\\\S]*?)${START}`\n\nconst carouselGeneratorToggleFeature = (\n  featureLabel: string,\n  featureActive: boolean,\n  carouselScript: string\n): string => {\n  let regexString = ''\n\n  if (featureActive) {\n    regexString = `(${START}__${featureLabel}_REPLACE_START__${END}\\n?)|(${START}__${featureLabel}_REPLACE_END__${END}\\n?)`\n  } else {\n    regexString = `${START}__${featureLabel}_REPLACE_START__${MIDDLE}__${featureLabel}_REPLACE_END__${END}\\n?`\n  }\n\n  const regex = new RegExp(regexString, 'g')\n  return carouselScript.replace(regex, '')\n}\n\nexport const carouselGeneratorToggleFeatures = (\n  carouselScript: SandboxModuleType,\n  settings: CarouselGeneratorFormDataType\n): string => {\n  let carouselScriptWithFeatures = carouselScript.default\n  const {\n    axis,\n    navigationPrevNextButtons,\n    navigationDots,\n    autoplay,\n    direction\n  } = settings\n  const hasNavigation = navigationPrevNextButtons || navigationDots\n  const hasAutoplayAndNavigation = autoplay && hasNavigation\n  const isHorizontal = axis === 'x'\n  const isLeftToRight = direction === 'ltr'\n  const isRightToLeft = !isLeftToRight\n\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS',\n    navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'DOT_BUTTONS',\n    navigationDots,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PLUGINS',\n    autoplay,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'NAV_AUTOPLAY',\n    hasAutoplayAndNavigation,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'DIRECTION_RTL',\n    isRightToLeft,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'DIRECTION_LTR',\n    isLeftToRight,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS_LTR',\n    isHorizontal && isLeftToRight && navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS_RTL',\n    isHorizontal && isRightToLeft && navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS_VERTICAL',\n    !isHorizontal && navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'AUTOPLAY',\n    autoplay,\n    carouselScriptWithFeatures\n  )\n\n  return carouselScriptWithFeatures\n}\n","import { FlattenSimpleInterpolation } from 'styled-components'\nimport { styledComponentsStylesToString } from 'utils/styledComponentStylesToString'\nimport { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport {\n  ARROWS_STYLES,\n  createCarouselDefaultStyles,\n  DOTS_STYLES\n} from 'components/Examples/createCarouselStyles'\n\nexport const createCarouselGeneratorStyles = (\n  settings: CarouselGeneratorFormDataType\n): string => {\n  const {\n    navigationPrevNextButtons,\n    navigationDots,\n    slideSize,\n    slideGapSize,\n    axis\n  } = settings\n  const styleList: FlattenSimpleInterpolation[] = []\n\n  if (navigationPrevNextButtons) styleList.push(ARROWS_STYLES)\n  if (navigationDots) styleList.push(DOTS_STYLES)\n\n  return createCarouselDefaultStyles(\n    `${slideSize}%`,\n    `${parseFloat(slideGapSize) / 10}rem`,\n    axis,\n    styleList.map((styles) => styledComponentsStylesToString(styles)).join('')\n  )\n}\n","import { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { EmblaOptionsType } from 'embla-carousel'\n\nexport const createCarouselGeneratorOptions = (\n  settings: CarouselGeneratorFormDataType\n): EmblaOptionsType => {\n  const { axis, align, direction, containScroll, loop, dragFree } = settings\n\n  return {\n    ...(axis !== 'x' && { axis }),\n    ...(align !== 'center' && { align }),\n    ...(dragFree && { dragFree }),\n    ...(direction !== 'ltr' && axis === 'x' && { direction }),\n    ...(!loop && containScroll && { containScroll: 'trimSnaps' }),\n    ...(loop && { loop })\n  }\n}\n","import { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { addSandboxPlugins } from 'utils/sandbox'\nimport {\n  SandboxPluginNameType,\n  SandboxPluginsType,\n  SANDBOX_PLUGINS\n} from 'consts/sandbox'\n\nexport const createCarouselGeneratorPlugins = (\n  settings: CarouselGeneratorFormDataType\n): SandboxPluginsType | undefined => {\n  const pluginList: SandboxPluginNameType[] = []\n\n  if (settings.autoplay) pluginList.push(SANDBOX_PLUGINS.AUTOPLAY)\n\n  return addSandboxPlugins(pluginList).plugins\n}\n","import { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { carouselGeneratorToggleFeatures } from 'components/CarouselGenerator/carouselGeneratorToggleFeatures'\nimport { createCarouselGeneratorStyles } from 'components/CarouselGenerator/createCarouselGeneratorStyles'\nimport { createCarouselGeneratorOptions } from 'components/CarouselGenerator/createCarouselGeneratorOptions'\nimport { createCarouselGeneratorPlugins } from 'components/CarouselGenerator/createCarouselGeneratorPlugins'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { createSandboxReact } from 'components/Sandbox/React/createSandboxReact'\nimport { createSandboxVanilla } from 'components/Sandbox/Vanilla/createSandboxVanilla'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SANDBOX_REACT_FOLDERS } from 'components/Sandbox/React/sandboxReactFolders'\nimport { SANDBOX_VANILLA_FOLDERS } from 'components/Sandbox/Vanilla/sandboxVanillaFolders'\nimport {\n  SandboxLanguageType,\n  SandboxModuleType,\n  SandboxSelectionType,\n  SANDBOX_LANGUAGES\n} from 'consts/sandbox'\nimport {\n  createSandboxFunctionsWithLabels,\n  sandboxLanguageUtils\n} from 'utils/sandbox'\n\nconst ID = 'embla-carousel-generator'\nconst DEFAULT_SETTINGS = CONTEXT_DEFAULT_VALUE.formData\nconst SLIDES = arrayFromNumber(5)\n\nconst VANILLA_ARROW_BUTTONS_FILE_NAME = 'arrow-buttons'\nconst VANILLA_DOT_BUTTON_FILE_NAME = 'dot-buttons'\n\nconst REACT_ARROW_BUTTONS_FILE_NAME = 'EmblaCarouselArrowButtons'\nconst REACT_DOT_BUTTON_FILE_NAME = 'EmblaCarouselDotButton'\n\nconst sandboxVanilla = async (\n  settings: CarouselGeneratorFormDataType = DEFAULT_SETTINGS,\n  language: SandboxLanguageType\n): Promise<string> => {\n  const { isTypeScript, vanillaScriptExtension, formatScript } =\n    await sandboxLanguageUtils(language)\n  let carouselScript: SandboxModuleType\n  let arrowButtonsScript: SandboxModuleType\n  let dotButtonScript: SandboxModuleType\n\n  const carouselHtml = await import(\n    '!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/embla-carousel.html'\n  )\n\n  if (isTypeScript) {\n    carouselScript = await import(\n      '!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/EmblaCarousel.ts'\n    )\n    arrowButtonsScript = await import(\n      `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/arrow-buttons.ts`\n    )\n    dotButtonScript = await import(\n      `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/dot-buttons.ts`\n    )\n  } else {\n    carouselScript = await import(\n      '!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/EmblaCarousel.js'\n    )\n    arrowButtonsScript = await import(\n      `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/arrow-buttons.js`\n    )\n    dotButtonScript = await import(\n      `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/dot-buttons.js`\n    )\n  }\n\n  return createSandboxVanilla({\n    id: ID,\n    language,\n    options: createCarouselGeneratorOptions(settings),\n    styles: createCarouselGeneratorStyles(settings),\n    carouselScript: carouselGeneratorToggleFeatures(carouselScript, settings),\n    plugins: createCarouselGeneratorPlugins(settings),\n    carouselHtml: carouselGeneratorToggleFeatures(carouselHtml, settings),\n    sandboxOverrides: {\n      ...(settings.navigationPrevNextButtons && {\n        [`${SANDBOX_VANILLA_FOLDERS.JS}/${VANILLA_ARROW_BUTTONS_FILE_NAME}.${vanillaScriptExtension}`]:\n          {\n            isBinary: false,\n            content: formatScript(\n              carouselGeneratorToggleFeatures(arrowButtonsScript, settings)\n            )\n          }\n      }),\n      ...(settings.navigationDots && {\n        [`${SANDBOX_VANILLA_FOLDERS.JS}/${VANILLA_DOT_BUTTON_FILE_NAME}.${vanillaScriptExtension}`]:\n          {\n            isBinary: false,\n            content: formatScript(\n              carouselGeneratorToggleFeatures(dotButtonScript, settings)\n            )\n          }\n      })\n    }\n  })\n}\n\nconst sandboxReact = async (\n  settings: CarouselGeneratorFormDataType = DEFAULT_SETTINGS,\n  language: SandboxLanguageType\n): Promise<string> => {\n  const { isTypeScript, reactScriptExtension, formatScript } =\n    await sandboxLanguageUtils(language)\n  let carouselScript: SandboxModuleType\n  let arrowButtonsScript: SandboxModuleType\n  let dotButtonScript: SandboxModuleType\n\n  if (isTypeScript) {\n    carouselScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarousel.tsx`\n    )\n    arrowButtonsScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarouselArrowButtons.tsx`\n    )\n    dotButtonScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarouselDotButton.tsx`\n    )\n  } else {\n    carouselScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarousel.jsx`\n    )\n    arrowButtonsScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarouselArrowButtons.jsx`\n    )\n    dotButtonScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarouselDotButton.jsx`\n    )\n  }\n\n  return createSandboxReact({\n    id: ID,\n    language,\n    slides: SLIDES,\n    options: createCarouselGeneratorOptions(settings),\n    styles: createCarouselGeneratorStyles(settings),\n    carouselScript: carouselGeneratorToggleFeatures(carouselScript, settings),\n    plugins: createCarouselGeneratorPlugins(settings),\n    sandboxOverrides: {\n      ...(settings.navigationPrevNextButtons && {\n        [`${SANDBOX_REACT_FOLDERS.JS}/${REACT_ARROW_BUTTONS_FILE_NAME}.${reactScriptExtension}`]:\n          {\n            isBinary: false,\n            content: formatScript(\n              carouselGeneratorToggleFeatures(arrowButtonsScript, settings)\n            )\n          }\n      }),\n      ...(settings.navigationDots && {\n        [`${SANDBOX_REACT_FOLDERS.JS}/${REACT_DOT_BUTTON_FILE_NAME}.${reactScriptExtension}`]:\n          {\n            isBinary: false,\n            content: formatScript(\n              carouselGeneratorToggleFeatures(dotButtonScript, settings)\n            )\n          }\n      })\n    }\n  })\n}\n\nexport const SANDBOXES: SandboxSelectionType<CarouselGeneratorFormDataType>[] =\n  createSandboxFunctionsWithLabels({\n    VANILLA_JS: (settings?: CarouselGeneratorFormDataType) =>\n      sandboxVanilla(settings, SANDBOX_LANGUAGES.JAVASCRIPT),\n    VANILLA_TS: (settings?: CarouselGeneratorFormDataType) =>\n      sandboxVanilla(settings, SANDBOX_LANGUAGES.TYPESCRIPT),\n    REACT_JS: (settings?: CarouselGeneratorFormDataType) =>\n      sandboxReact(settings, SANDBOX_LANGUAGES.JAVASCRIPT),\n    REACT_TS: (settings?: CarouselGeneratorFormDataType) =>\n      sandboxReact(settings, SANDBOX_LANGUAGES.TYPESCRIPT)\n  })\n","export const camelOrPascalToKebabCase = (\n  string: string = '',\n  separator: string = ''\n): string => {\n  return string\n    .split('')\n    .map((letter, idx) => {\n      return letter.toUpperCase() === letter\n        ? `${idx !== 0 ? '-' : ''}${letter.toLowerCase()}`\n        : letter\n    })\n    .join(separator)\n}\n","import { camelOrPascalToKebabCase } from './camelOrPascalToKebabCase'\nimport {\n  CarouselGeneratorFormDataType,\n  CAROUSEL_GENERATOR_FORM_PREFIX\n} from 'consts/carouselGenerator'\n\ntype CarouselGeneratorInputIdType<\n  Key extends keyof CarouselGeneratorFormDataType\n> = {\n  ID: string\n  FIELD_NAME: Key\n}\n\nexport type CarouselGeneratorRadioType<\n  Key extends keyof CarouselGeneratorFormDataType\n> = CarouselGeneratorInputIdType<Key> & {\n  OPTIONS: {\n    LABEL: string\n    VALUE: CarouselGeneratorFormDataType[Key]\n  }[]\n}\n\nexport type CarouselGeneratorCheckboxType<\n  Key extends keyof CarouselGeneratorFormDataType\n> = CarouselGeneratorInputIdType<Key> & {\n  LABEL: string\n}\n\nexport type CarouselGeneratorInputTextType<\n  Key extends keyof CarouselGeneratorFormDataType\n> = CarouselGeneratorInputIdType<Key> & {\n  LABEL: string\n}\n\nexport const createCarouselGeneratorInputId = <\n  Key extends keyof CarouselGeneratorFormDataType\n>(\n  fieldName: Key\n): CarouselGeneratorInputIdType<Key> => {\n  return {\n    FIELD_NAME: fieldName,\n    ID: `${CAROUSEL_GENERATOR_FORM_PREFIX}-${camelOrPascalToKebabCase(\n      fieldName\n    )}`\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport { SANDBOXES } from 'components/Examples/CarouselGenerator/CarouselGeneratorSandboxes'\nimport { SandboxSelectionInput } from 'components/Sandbox/SandboxSelectionInput'\nimport { snakeCaseToKebabCase } from 'utils/snakeCaseToKebabCase'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { SANDBOX_SELECTION_SPACING } from 'consts/sandbox'\nimport {\n  CarouselGeneratorRadioType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_FRAMEWORK: CarouselGeneratorRadioType<'framework'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.FRAMEWORK),\n  OPTIONS: []\n}\n\nconst SandboxSelectionList = styled.ul`\n  ${createGapStyles(\n    SANDBOX_SELECTION_SPACING,\n    SANDBOX_SELECTION_SPACING,\n    'li'\n  )};\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(14rem, 1fr));\n`\n\nexport const CarouselGeneratorFrameworkSettings = () => {\n  const { formData, onRadioChange } = useCarouselGenerator()\n\n  return (\n    <div>\n      <SandboxSelectionList role=\"radiogroup\" aria-label={INPUT_FRAMEWORK.ID}>\n        {SANDBOXES.map((sandbox) => (\n          <li key={sandbox.key}>\n            <SandboxSelectionInput\n              framework={sandbox.key}\n              name={INPUT_FRAMEWORK.FIELD_NAME}\n              id={`${INPUT_FRAMEWORK.ID}-${snakeCaseToKebabCase(sandbox.key)}`}\n              value={sandbox.key}\n              onChange={onRadioChange}\n              checked={formData[INPUT_FRAMEWORK.FIELD_NAME] === sandbox.key}\n            >\n              {sandbox.label}\n            </SandboxSelectionInput>\n          </li>\n        ))}\n      </SandboxSelectionList>\n    </div>\n  )\n}\n","import { createRadioOrCheckboxDefault } from './createRadioOrCheckboxDefault'\nimport { createRadioOrCheckboxCard } from './createRadioOrCheckboxCard'\n\nexport const InputCheckboxDefault = createRadioOrCheckboxDefault('checkbox')\n\nexport const InputCheckboxCard = createRadioOrCheckboxCard('checkbox')\n","import React, { PropsWithRef } from 'react'\nimport styled, { css } from 'styled-components'\nimport { BORDER_RADIUSES, BORDER_SIZES } from 'consts/border'\nimport { COLORS } from 'consts/themes'\nimport { useKeyNavigating } from 'hooks/useKeyNavigating'\nimport { SPACINGS } from 'consts/spacings'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { LAYERS } from 'consts/layers'\nimport { BRAND_GRADIENT_BACKGROUND_STYLES } from 'consts/gradients'\nimport { TAP_HIGHLIGHT_STYLES } from 'consts/tapHighlight'\nimport { KEY_NAVIGATING_STYLES } from 'consts/keyNavigatingStyles'\n\nconst HEIGHT = SPACINGS.EIGHT\nconst SIDES_PADDING = SPACINGS.THREE\nconst INPUT_RADIUS = BORDER_RADIUSES.BOX\n\nconst InputTextWrapper = styled.span`\n  height: ${HEIGHT};\n  border-radius: ${INPUT_RADIUS};\n  border: ${BORDER_SIZES.DETAIL} solid ${COLORS.DETAIL_LOW_CONTRAST};\n  background-color: ${COLORS.BACKGROUND_CODE};\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst labelActiveStyles = css`\n  transform: translateY(calc(-100% / 2)) scale(0.8);\n`\n\nconst Label = styled.label`\n  z-index: ${LAYERS.STEP};\n  left: ${SIDES_PADDING};\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  position: absolute;\n  top: 0;\n  pointer-events: none;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  transition: transform 0.2s;\n  transform-origin: center left;\n`\n\nconst labelTextActiveStyles = css`\n  background-color: ${COLORS.BACKGROUND_CODE};\n  border: ${BORDER_SIZES.DETAIL} solid ${COLORS.DETAIL_LOW_CONTRAST};\n`\n\nconst LabelText = styled.span`\n  padding-left: ${SPACINGS.ONE};\n  padding-right: ${SPACINGS.ONE};\n  border-radius: ${INPUT_RADIUS};\n  z-index: ${LAYERS.STEP};\n  display: flex;\n  position: relative;\n  align-items: center;\n`\n\nconst Highlight = styled.span`\n  ${BRAND_GRADIENT_BACKGROUND_STYLES};\n  top: -${BORDER_SIZES.DETAIL};\n  left: -${BORDER_SIZES.DETAIL};\n  bottom: -${BORDER_SIZES.DETAIL};\n  right: -${BORDER_SIZES.DETAIL};\n  display: block;\n  position: absolute;\n  border-radius: inherit;\n  pointer-events: none;\n  visibility: hidden;\n\n  &:after {\n    background-color: ${COLORS.BACKGROUND_CODE};\n    border-radius: inherit;\n    position: absolute;\n    top: ${BORDER_SIZES.OUTLINE};\n    left: ${BORDER_SIZES.OUTLINE};\n    bottom: ${BORDER_SIZES.OUTLINE};\n    right: ${BORDER_SIZES.OUTLINE};\n    content: '';\n  }\n`\n\nconst Input = styled.input<{\n  $isKeyNavigating: boolean\n  $inputHasValue: boolean\n}>`\n  ${TAP_HIGHLIGHT_STYLES};\n  ${KEY_NAVIGATING_STYLES};\n  z-index: ${LAYERS.STEP};\n  height: calc(100% - ${BORDER_SIZES.DETAIL} * 2);\n  width: calc(100% - ${BORDER_SIZES.DETAIL} * 2);\n  color: ${COLORS.TEXT_BODY};\n  font-size: ${FONT_SIZES.BODY};\n  padding: 0 ${SIDES_PADDING};\n  background-color: transparent;\n  appearance: none;\n  -webkit-appearance: none;\n  border-radius: inherit;\n  border: 0;\n\n  &:focus + ${Highlight} + ${Label} {\n    ${labelActiveStyles};\n\n    > ${LabelText} {\n      ${labelTextActiveStyles};\n    }\n  }\n\n  &:focus + ${Highlight} {\n    visibility: visible;\n  }\n\n  ${({ $inputHasValue }) =>\n    $inputHasValue &&\n    css`\n      & + ${Highlight} + ${Label} {\n        ${labelActiveStyles};\n\n        > ${LabelText} {\n          ${labelTextActiveStyles};\n        }\n      }\n    `};\n`\n\ntype PropType = PropsWithRef<\n  React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >\n>\n\nexport const InputText = (props: PropType) => {\n  const { children, className, ...restProps } = props\n  const { isKeyNavigating } = useKeyNavigating()\n\n  return (\n    <InputTextWrapper className={className}>\n      <Input\n        $isKeyNavigating={isKeyNavigating}\n        $inputHasValue={!!restProps.value}\n        type=\"text\"\n        {...restProps}\n      />\n      <Highlight />\n      <Label>\n        <LabelText>{children}</LabelText>\n      </Label>\n    </InputTextWrapper>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { SPACINGS } from 'consts/spacings'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { MEDIA } from 'consts/breakpoints'\nimport { InputText } from 'components/Input/InputText'\n\nexport const FORM_INPUT_TEXT_MAX_SIZE = '26rem'\n\nexport const FORM_ITEM_SPACING_X = SPACINGS.FOUR\nexport const FORM_ITEM_SPACING_Y = SPACINGS.TWO\n\nexport const FORM_ITEMS_GAP_STYLES = createGapStyles(\n  FORM_ITEM_SPACING_X,\n  FORM_ITEM_SPACING_Y,\n  '*'\n)\n\nexport const FORM_ITEM_MAX_WIDTH_STYLES = css`\n  width: 100%;\n\n  ${MEDIA.MIN_XS} {\n    max-width: 100%;\n    width: ${FORM_INPUT_TEXT_MAX_SIZE};\n  }\n`\n\nexport const CarouselGeneratorFormItems = styled.div`\n  ${FORM_ITEMS_GAP_STYLES};\n  margin-bottom: calc(${FORM_ITEM_SPACING_X} - ${FORM_ITEM_SPACING_Y});\n  display: flex;\n  flex-wrap: wrap;\n`\n\nexport const CarouselGeneratorFormItem = styled.div`\n  margin-bottom: ${FORM_ITEM_SPACING_X};\n`\n\nexport const CarouselGeneratorInputText = styled(InputText)`\n  ${FORM_ITEM_MAX_WIDTH_STYLES};\n`\n","import React from 'react'\nimport { InputRadioDefault } from 'components/Input/InputRadio'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport {\n  CarouselGeneratorCheckboxType,\n  CarouselGeneratorRadioType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorFormItems\n} from './CarouselGeneratorFormItems'\n\nconst INPUT_AXIS: CarouselGeneratorRadioType<'axis'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.AXIS),\n  OPTIONS: [\n    { LABEL: 'Horizontal', VALUE: 'x' },\n    { LABEL: 'Vertical', VALUE: 'y' }\n  ]\n}\n\nconst INPUT_DIRECTION: CarouselGeneratorRadioType<'direction'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.DIRECTION),\n  OPTIONS: [\n    { LABEL: 'Left to right', VALUE: 'ltr' },\n    { LABEL: 'Right to left', VALUE: 'rtl' }\n  ]\n}\n\nconst INPUT_LOOP: CarouselGeneratorCheckboxType<'loop'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.LOOP),\n  LABEL: 'Loop'\n}\n\nconst INPUT_DRAG_FREE: CarouselGeneratorCheckboxType<'dragFree'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.DRAG_FREE),\n  LABEL: 'Drag free'\n}\n\nconst INPUT_ACCESSIBILITY: CarouselGeneratorCheckboxType<'accessibility'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.ACCESSIBILITY\n  ),\n  LABEL: 'Accessibility (under development)'\n}\n\nexport const CarouselGeneratorBasicSettings = () => {\n  const { formData, onCheckboxChange, onRadioChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItems role=\"radiogroup\" aria-label={INPUT_AXIS.ID}>\n        {INPUT_AXIS.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={VALUE}>\n            <InputRadioDefault\n              name={INPUT_AXIS.FIELD_NAME}\n              id={`${INPUT_AXIS.ID}-${VALUE}`}\n              value={VALUE}\n              checked={formData[INPUT_AXIS.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      <CarouselGeneratorFormItems\n        role=\"radiogroup\"\n        aria-label={INPUT_DIRECTION.ID}\n      >\n        {INPUT_DIRECTION.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={VALUE}>\n            <InputRadioDefault\n              name={INPUT_DIRECTION.FIELD_NAME}\n              id={`${INPUT_DIRECTION.ID}-${VALUE}`}\n              value={VALUE}\n              checked={formData[INPUT_DIRECTION.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_LOOP.FIELD_NAME}\n          id={INPUT_LOOP.ID}\n          checked={formData[INPUT_LOOP.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_LOOP.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_DRAG_FREE.FIELD_NAME}\n          id={INPUT_DRAG_FREE.ID}\n          checked={formData[INPUT_DRAG_FREE.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_DRAG_FREE.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_ACCESSIBILITY.FIELD_NAME}\n          id={INPUT_ACCESSIBILITY.ID}\n          checked={formData[INPUT_ACCESSIBILITY.FIELD_NAME]}\n          onChange={onCheckboxChange}\n          disabled\n        >\n          {INPUT_ACCESSIBILITY.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React from 'react'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorInputText\n} from './CarouselGeneratorFormItems'\nimport {\n  CarouselGeneratorInputTextType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_SLIDE_SIZE: CarouselGeneratorInputTextType<'slideSize'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.SLIDE_SIZE),\n  LABEL: 'Slide size (%)'\n}\n\nconst INPUT_SLIDE_GAP_SIZE: CarouselGeneratorInputTextType<'slideGapSize'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.SLIDE_GAP_SIZE\n  ),\n  LABEL: 'Slide gaps (px)'\n}\n\nexport const CarouselGeneratorSlidesSettings = () => {\n  const { formData, onNumberChange, onNumberBlur } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <CarouselGeneratorInputText\n          type=\"number\"\n          min=\"10\"\n          max=\"100\"\n          name={INPUT_SLIDE_SIZE.FIELD_NAME}\n          id={INPUT_SLIDE_SIZE.ID}\n          value={formData[INPUT_SLIDE_SIZE.FIELD_NAME]}\n          onChange={onNumberChange}\n          onBlur={onNumberBlur}\n        >\n          {INPUT_SLIDE_SIZE.LABEL}\n        </CarouselGeneratorInputText>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <CarouselGeneratorInputText\n          type=\"number\"\n          min=\"0\"\n          max=\"20\"\n          name={INPUT_SLIDE_GAP_SIZE.FIELD_NAME}\n          id={INPUT_SLIDE_GAP_SIZE.ID}\n          value={formData[INPUT_SLIDE_GAP_SIZE.FIELD_NAME]}\n          onChange={onNumberChange}\n          onBlur={onNumberBlur}\n        >\n          {INPUT_SLIDE_GAP_SIZE.LABEL}\n        </CarouselGeneratorInputText>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport CarouselDefault from 'components/Sandbox/React/SandboxFilesSrc/Default/EmblaCarousel'\nimport { InputRadioDefault } from 'components/Input/InputRadio'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport { createCarouselDefaultStyles } from 'components/Examples/createCarouselStyles'\nimport { Admonition } from 'components/Mdx/Components/Admonition'\nimport { BRAND_GRADIENT_BACKGROUND_STYLES } from 'consts/gradients'\nimport { BORDER_RADIUSES, BORDER_SIZES } from 'consts/border'\nimport { LAYERS } from 'consts/layers'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { useInView } from 'react-intersection-observer'\nimport { SPACINGS } from 'consts/spacings'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport {\n  carouselDefaultWrapperStyles,\n  CAROUSEL_SLIDES_SPACING,\n  CAROUSEL_WRAPPER_SPACING\n} from 'components/Examples/carouselWrapperStyles'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorFormItems\n} from './CarouselGeneratorFormItems'\nimport {\n  CarouselGeneratorCheckboxType,\n  CarouselGeneratorRadioType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_ALIGN: CarouselGeneratorRadioType<'align'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.ALIGN),\n  OPTIONS: [\n    { LABEL: 'Start', VALUE: 'start' },\n    { LABEL: 'Center', VALUE: 'center' },\n    { LABEL: 'End', VALUE: 'end' }\n  ]\n}\n\nconst INPUT_CONTAIN_SCROLL: CarouselGeneratorCheckboxType<'containScroll'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.CONTAIN_SCROLL\n  ),\n  LABEL: 'Clear leading and trailing space'\n}\n\nconst SLIDES = arrayFromNumber(5)\nconst CAROUSEL_ALIGN_ID = `${INPUT_ALIGN.ID}-demo`\n\nconst CAROUSEL_STYLES = createCarouselDefaultStyles('60%')\n\nconst CarouselWrapper = styled.div<{\n  $showContainScroll: boolean\n  $align: EmblaOptionsType['align']\n}>`\n  ${carouselDefaultWrapperStyles};\n\n  &.${CAROUSEL_ALIGN_ID} {\n    ${CAROUSEL_STYLES};\n    margin-bottom: ${SPACINGS.FOUR};\n    position: relative;\n\n      ${({ $showContainScroll, $align }) =>\n        $showContainScroll &&\n        css`\n          .embla__slide:first-child,\n          .embla__slide:last-child {\n            position: relative;\n\n            &:before {\n              top: 0;\n              bottom: 0;\n              position: absolute;\n              font-size: ${FONT_SIZES.CUSTOM(() => 1.3)};\n              text-align: center;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              width: calc(100% / 3);\n            }\n          }\n\n          .embla__slide:first-child {\n            &:before {\n              content: 'Leading space';\n              right: calc(100% - ${CAROUSEL_SLIDES_SPACING});\n              ${$align === 'start' &&\n              css`\n                display: none;\n              `}\n            }\n          }\n\n          .embla__slide:last-child {\n            &:before {\n              content: 'Trailing space';\n              left: 100%;\n              ${$align === 'end' &&\n              css`\n                display: none;\n              `}\n            }\n          }\n        `};\n    }\n  }\n`\n\nconst AlignmentMarker = styled.div<{\n  $align: EmblaOptionsType['align']\n}>`\n  &:before {\n    ${BRAND_GRADIENT_BACKGROUND_STYLES};\n    width: ${BORDER_SIZES.ACCENT_VERTICAL};\n    top: calc(${CAROUSEL_WRAPPER_SPACING} / 2);\n    bottom: calc(${CAROUSEL_WRAPPER_SPACING} / 2);\n    z-index: ${LAYERS.STEP};\n    opacity: 0.7;\n    position: absolute;\n    content: '';\n    display: block;\n    border-radius: ${BORDER_RADIUSES.LINE};\n\n    ${({ $align }) => {\n      if ($align === 'start') {\n        return css`\n          left: ${CAROUSEL_WRAPPER_SPACING};\n        `\n      }\n      if ($align === 'end') {\n        return css`\n          right: ${CAROUSEL_WRAPPER_SPACING};\n        `\n      }\n      return css`\n        left: 50%;\n        margin-left: calc(-${BORDER_SIZES.ACCENT_VERTICAL} / 2);\n      `\n    }};\n`\n\nexport const CarouselGeneratorAlignmentSettings = () => {\n  const { formData, onCheckboxChange, onRadioChange } = useCarouselGenerator()\n  const [inViewRef, inView] = useInView()\n  const slideSize = formData[CAROUSEL_GENERATOR_FORM_FIELDS.SLIDE_SIZE]\n  const loop = formData[CAROUSEL_GENERATOR_FORM_FIELDS.LOOP]\n  const dragFree = formData[CAROUSEL_GENERATOR_FORM_FIELDS.DRAG_FREE]\n  const align = formData[INPUT_ALIGN.FIELD_NAME]\n  const containScroll = formData[INPUT_CONTAIN_SCROLL.FIELD_NAME]\n    ? 'trimSnaps'\n    : false\n  const [options, setOptions] = useState<EmblaOptionsType>({\n    align,\n    containScroll,\n    loop,\n    dragFree\n  })\n\n  useEffect(() => {\n    setOptions({\n      align,\n      containScroll,\n      loop,\n      dragFree\n    })\n  }, [loop, dragFree, align, containScroll])\n\n  return (\n    <>\n      {slideSize === '100' && (\n        <Admonition type=\"note\">\n          Aligment settings will only <strong>work</strong> for carousels with{' '}\n          slide sizes <strong>less than 100%</strong>.\n        </Admonition>\n      )}\n      <CarouselWrapper\n        className={CAROUSEL_ALIGN_ID}\n        ref={inViewRef}\n        $showContainScroll={!containScroll && !loop}\n        $align={align}\n      >\n        {inView ? (\n          <>\n            <CarouselDefault slides={SLIDES} options={options} />\n            <AlignmentMarker $align={align} />\n          </>\n        ) : null}\n      </CarouselWrapper>\n\n      <CarouselGeneratorFormItems role=\"radiogroup\" aria-label={INPUT_ALIGN.ID}>\n        {INPUT_ALIGN.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={VALUE}>\n            <InputRadioDefault\n              name={INPUT_ALIGN.FIELD_NAME}\n              id={`${INPUT_ALIGN.ID}-${VALUE}`}\n              value={VALUE}\n              checked={formData[INPUT_ALIGN.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      {!loop && (\n        <CarouselGeneratorFormItem>\n          <InputCheckboxDefault\n            name={INPUT_CONTAIN_SCROLL.FIELD_NAME}\n            id={INPUT_CONTAIN_SCROLL.ID}\n            checked={formData[INPUT_CONTAIN_SCROLL.FIELD_NAME]}\n            onChange={onCheckboxChange}\n          >\n            {INPUT_CONTAIN_SCROLL.LABEL}\n          </InputCheckboxDefault>\n        </CarouselGeneratorFormItem>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport { CarouselGeneratorFormItem } from './CarouselGeneratorFormItems'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport {\n  CarouselGeneratorCheckboxType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_PREV_NEXT_BUTTONS: CarouselGeneratorCheckboxType<'navigationPrevNextButtons'> =\n  {\n    ...createCarouselGeneratorInputId(\n      CAROUSEL_GENERATOR_FORM_FIELDS.NAVIGATION_PREV_NEXT_BUTTONS\n    ),\n    LABEL: 'Previous and next buttons'\n  }\n\nconst INPUT_DOTS: CarouselGeneratorCheckboxType<'navigationDots'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.NAVIGATION_DOTS\n  ),\n  LABEL: 'Dot navigation'\n}\n\nexport const CarouselGeneratorNavigationSettings = () => {\n  const { formData, onCheckboxChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_PREV_NEXT_BUTTONS.FIELD_NAME}\n          id={INPUT_PREV_NEXT_BUTTONS.ID}\n          checked={formData[INPUT_PREV_NEXT_BUTTONS.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_PREV_NEXT_BUTTONS.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_DOTS.FIELD_NAME}\n          id={INPUT_DOTS.ID}\n          checked={formData[INPUT_DOTS.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_DOTS.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React from 'react'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CarouselGeneratorFormItem } from './CarouselGeneratorFormItems'\nimport {\n  CarouselGeneratorCheckboxType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_AUTOPLAY: CarouselGeneratorCheckboxType<'autoplay'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.AUTOPLAY),\n  LABEL: 'Autoplay'\n}\n\nconst INPUT_WHEEL_GESTURES: CarouselGeneratorCheckboxType<'wheelGestures'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.WHEEL_GESTURES\n  ),\n  LABEL: 'Wheel gestures (under development)'\n}\n\nexport const CarouselGeneratorPlugins = () => {\n  const { formData, onCheckboxChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_AUTOPLAY.FIELD_NAME}\n          id={INPUT_AUTOPLAY.ID}\n          checked={formData[INPUT_AUTOPLAY.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_AUTOPLAY.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_WHEEL_GESTURES.FIELD_NAME}\n          id={INPUT_WHEEL_GESTURES.ID}\n          checked={formData[INPUT_WHEEL_GESTURES.FIELD_NAME]}\n          onChange={onCheckboxChange}\n          disabled\n        >\n          {INPUT_WHEEL_GESTURES.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { SPACINGS } from 'consts/spacings'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { ButtonPrimaryFilledWithLoading } from 'components/Button/ButtonPrimaryFilled'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SandboxLabelKeyType } from 'consts/sandbox'\nimport { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { SANDBOXES } from 'components/Examples/CarouselGenerator/CarouselGeneratorSandboxes'\nimport {\n  FORM_ITEM_MAX_WIDTH_STYLES,\n  FORM_ITEM_SPACING_X\n} from './CarouselGeneratorFormItems'\n\nconst CarouselGeneratorSubmitWrapper = styled.div`\n  ${createGapStyles(FORM_ITEM_SPACING_X, SPACINGS.EIGHT)}\n  margin-top: ${SPACINGS.EIGHT};\n`\n\nconst CarouselGeneratorButtonWrapper = styled.div`\n  ${FORM_ITEM_MAX_WIDTH_STYLES};\n`\n\nexport const CarouselGeneratorSubmit = () => {\n  const { formData } = useCarouselGenerator()\n  const [sandbox, setSandbox] = useState('')\n  const sandboxKey = formData.framework\n  const isLoading = !!(sandboxKey && !sandbox)\n\n  const loadSandbox = useCallback(\n    async (\n      key: SandboxLabelKeyType,\n      settings: CarouselGeneratorFormDataType\n    ) => {\n      const sandbox = SANDBOXES.find((sandbox) => sandbox.key === key)\n      if (sandbox) setSandbox(await sandbox.createSandbox(settings))\n    },\n    []\n  )\n\n  useEffect(() => {\n    if (sandboxKey) {\n      setSandbox('')\n      loadSandbox(sandboxKey, formData)\n    }\n  }, [sandboxKey, formData])\n\n  return (\n    <div>\n      <input type=\"hidden\" name=\"parameters\" value={sandbox} />\n\n      <CarouselGeneratorSubmitWrapper>\n        <CarouselGeneratorButtonWrapper>\n          <ButtonPrimaryFilledWithLoading\n            isLoading={isLoading}\n            disabled={!sandbox}\n            type=\"submit\"\n          >\n            Create CodeSandbox\n          </ButtonPrimaryFilledWithLoading>\n        </CarouselGeneratorButtonWrapper>\n      </CarouselGeneratorSubmitWrapper>\n    </div>\n  )\n}\n","import React from 'react'\nimport { LinkContent } from 'components/Link/LinkContent'\nimport { URLS } from 'consts/urls'\n\nexport const CarouselGeneratorSupport = () => {\n  return (\n    <ul>\n      <li>\n        <LinkContent to={URLS.DONATE_PAYPAL}>PayPal</LinkContent>\n      </li>\n      <li>\n        <LinkContent to={URLS.DONATE_KO_FI}>Ko-fi</LinkContent>\n      </li>\n    </ul>\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {URLS} from 'consts/urls';\nimport {LinkContent} from 'components/Link/LinkContent';\nimport {CarouselGeneratorFrameworkSettings} from 'components/CarouselGenerator/CarouselGeneratorFrameworkSettings';\nimport {CarouselGeneratorBasicSettings} from 'components/CarouselGenerator/CarouselGeneratorBasicSettings';\nimport {CarouselGeneratorSlidesSettings} from 'components/CarouselGenerator/CarouselGeneratorSlidesSettings';\nimport {CarouselGeneratorAlignmentSettings} from 'components/CarouselGenerator/CarouselGeneratorAlignmentSettings';\nimport {CarouselGeneratorNavigationSettings} from 'components/CarouselGenerator/CarouselGeneratorNavigationSettings';\nimport {CarouselGeneratorPlugins} from 'components/CarouselGenerator/CarouselGeneratorPlugins';\nimport {CarouselGeneratorSubmit} from 'components/CarouselGenerator/CarouselGeneratorSubmit';\nimport {CarouselGeneratorSupport} from 'components/CarouselGenerator/CarouselGeneratorSupport';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\"\n  }, _provideComponents(), props.components), {Admonition} = _components;\n  if (!Admonition) _missingMdxReference(\"Admonition\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Carousel generator\"), \"\\n\", React.createElement(_components.p, null, \"Just follow the instructions and create your own customized carousel setup in no time!\"), \"\\n\", React.createElement(Admonition, {\n    type: \"warning\"\n  }, React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Caution:\"), \" The carousel generator is an experimental Embla Carousel feature\\nintroduced in v8.0.0. This generator is subject to change before it is marked\\nas stable.\"), React.createElement(\"br\"), React.createElement(_components.p, null, \"Join the \", React.createElement(LinkContent, {\n    to: `${URLS.GITHUB_DISCUSSIONS}/513`\n  }, \"discussion here\"), \"!\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"choose-framework\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#choose-framework\",\n    \"aria-label\": \"choose framework permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Choose framework\"), \"\\n\", React.createElement(CarouselGeneratorFrameworkSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"basic-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#basic-settings\",\n    \"aria-label\": \"basic settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Basic settings\"), \"\\n\", React.createElement(CarouselGeneratorBasicSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"slide-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#slide-settings\",\n    \"aria-label\": \"slide settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Slide settings\"), \"\\n\", React.createElement(CarouselGeneratorSlidesSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"alignment-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#alignment-settings\",\n    \"aria-label\": \"alignment settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Alignment settings\"), \"\\n\", React.createElement(CarouselGeneratorAlignmentSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"navigation-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#navigation-settings\",\n    \"aria-label\": \"navigation settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Navigation settings\"), \"\\n\", React.createElement(CarouselGeneratorNavigationSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"plugins\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#plugins\",\n    \"aria-label\": \"plugins permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Plugins\"), \"\\n\", React.createElement(CarouselGeneratorPlugins), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(CarouselGeneratorSubmit), \"\\n\", React.createElement(_components.h2, {\n    id: \"support\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#support\",\n    \"aria-label\": \"support permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Support\"), \"\\n\", React.createElement(_components.p, null, \"Did this save you time? Don't say thank you! \", React.createElement(_components.strong, null, \"Share\"), \" it, \", React.createElement(_components.strong, null, \"star\"), \" it or \", React.createElement(_components.strong, null, \"support\"), \" my work:\"), \"\\n\", React.createElement(CarouselGeneratorSupport));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React, { PropsWithRef } from 'react'\nimport { URLS } from 'consts/urls'\n\ntype PropType = PropsWithRef<\n  React.DetailedHTMLProps<\n    React.FormHTMLAttributes<HTMLFormElement>,\n    HTMLFormElement\n  >\n>\n\nexport const CarouselGeneratorForm = (props: PropType) => {\n  const { children, ...restProps } = props\n\n  return (\n    <form\n      action={URLS.CODESANDBOX_DEFINE}\n      method=\"POST\"\n      target=\"_blank\"\n      {...restProps}\n    >\n      {children}\n    </form>\n  )\n}\n","import React, { PropsWithChildren, useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport { Seo } from 'components/Seo/Seo'\nimport maskable from 'assets/images/maskable.png'\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\nimport { PageEditThisPage } from 'components/Page/PageEditThisPage'\nimport { PagePagination } from 'components/Page/PagePagination'\nimport { PageBreadcrumbs } from 'components/Page/PageBreadcrumbs'\nimport { MAIN_CONTENT_ID } from 'components/KeyNavigating/KeyNavigatingSkipToContent'\nimport { removeProtocol } from 'utils/removeProtocol'\nimport { Mdx } from 'components/Mdx/Mdx'\nimport {\n  PagePropType,\n  PageHeadPropType,\n  PageDefaultLayoutType,\n  PagePaginationType\n} from 'consts/page'\n\nexport const query = graphql`\n  query PageDefaultQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      tableOfContents\n      frontmatter {\n        title\n        description\n        date(formatString: \"DD MMMM YYYY\")\n      }\n    }\n  }\n`\n\nexport const Head = (props: PageHeadPropType) => {\n  const { data, pageContext } = props\n  const { siteUrl, author } = useSiteMetadata()\n  const { title = '', description, date } = data.mdx.frontmatter\n  const dateToISOString = useMemo(\n    () => new Date(`${date} UTC`).toISOString(),\n    [date]\n  )\n\n  return (\n    <Seo\n      title={title}\n      description={description}\n      url={`${siteUrl}${pageContext.slug}`}\n    >\n      <script type=\"application/ld+json\">\n        {`\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"TechArticle\",\n        \"name\": \"${removeProtocol(siteUrl)}\",\n        \"description\": \"${description}\",\n        \"url\": \"${siteUrl}${pageContext.slug}\",\n        \"headline\": \"${title}\",\n        \"image\": \"${siteUrl}/share-image.png\",\n        \"datePublished\": \"${dateToISOString}\",\n        \"dateModified\": \"${dateToISOString}\",\n        \"author\": {\n          \"@type\": \"Person\",\n          \"name\": \"${author}\"\n        },\n        \"publisher\": {\n          \"@type\": \"Organization\",\n          \"name\": \"${author}\",\n          \"logo\": {\n            \"@type\": \"ImageObject\",\n            \"width\": \"512\",\n            \"height\": \"512\",\n            \"url\": \"${siteUrl}${maskable}\"\n          }\n        }\n      }\n    `}\n      </script>\n    </Seo>\n  )\n}\n\nexport type PropType = PropsWithChildren<\n  PagePropType<PageDefaultLayoutType, PagePaginationType>\n>\n\nconst PageDefault = (props: PropType) => {\n  const { pageContext, children } = props\n  const { next, previous, filePath, id } = pageContext\n\n  return (\n    <>\n      <PageBreadcrumbs id={id} />\n      <article id={MAIN_CONTENT_ID}>\n        <Mdx>{children}</Mdx>\n      </article>\n      <PageEditThisPage pageUrl={filePath} />\n      <PagePagination previous={previous} next={next} />\n    </>\n  )\n}\n\nexport default PageDefault\n","import GATSBY_COMPILED_MDX from \"/Users/davidjerleke/Sites/embla-carousel/packages/embla-carousel-docs/src/content/pages/examples/generator.mdx\";\nimport React from 'react';\nimport {PageEditThisPage} from 'components/Page/PageEditThisPage';\nimport {PagePagination} from 'components/Page/PagePagination';\nimport {PageBreadcrumbs} from 'components/Page/PageBreadcrumbs';\nimport {MAIN_CONTENT_ID} from 'components/KeyNavigating/KeyNavigatingSkipToContent';\nimport {CarouselGeneratorForm} from 'components/CarouselGenerator/CarouselGeneratorForm';\nimport {CarouselGeneratorProvider} from 'components/CarouselGenerator/CarouselGeneratorContext';\nimport {Mdx} from 'components/Mdx/Mdx';\nimport {Head} from './Default';\nconst query = \"1476602449\";\nexport {Head};\nconst PageGenerator = props => {\n  const {pageContext, children} = props;\n  const {next, previous, filePath, id} = pageContext;\n  return React.createElement(React.Fragment, null, React.createElement(PageBreadcrumbs, {\n    id: id\n  }), React.createElement(CarouselGeneratorProvider, null, React.createElement(CarouselGeneratorForm, {\n    id: MAIN_CONTENT_ID\n  }, React.createElement(Mdx, null, children))), React.createElement(PageEditThisPage, {\n    pageUrl: filePath\n  }), React.createElement(PagePagination, {\n    previous: previous,\n    next: next\n  }));\n};\nPageGenerator\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageGenerator, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["CONTEXT_DEFAULT_VALUE","formData","framework","loop","dragFree","axis","direction","accessibility","slideSize","slideGapSize","edgeGap","align","containScroll","navigationPrevNextButtons","navigationDots","autoplay","wheelGestures","onChange","onCheckboxChange","onRadioChange","onNumberChange","onNumberBlur","CarouselGeneratorContext","createContext","CarouselGeneratorProvider","props","children","setFormData","useState","useCallback","key","value","currentFormValues","event","name","checked","currentTarget","input","fieldName","minValue","parseInt","getAttribute","maxValue","number","parseFloat","min","max","Math","toString","useMemo","React","Provider","useCarouselGenerator","useContext","CAROUSEL_GENERATOR_FORM_FIELDS","START","END","MIDDLE","carouselGeneratorToggleFeature","featureLabel","featureActive","carouselScript","regexString","regex","RegExp","replace","carouselGeneratorToggleFeatures","settings","carouselScriptWithFeatures","default","hasAutoplayAndNavigation","isHorizontal","isLeftToRight","isRightToLeft","createCarouselGeneratorStyles","styleList","push","ARROWS_STYLES","DOTS_STYLES","createCarouselDefaultStyles","map","styles","styledComponentsStylesToString","join","createCarouselGeneratorOptions","createCarouselGeneratorPlugins","pluginList","SANDBOX_PLUGINS","addSandboxPlugins","plugins","ID","DEFAULT_SETTINGS","SLIDES","arrayFromNumber","sandboxVanilla","async","language","isTypeScript","vanillaScriptExtension","formatScript","sandboxLanguageUtils","arrowButtonsScript","dotButtonScript","carouselHtml","createSandboxVanilla","id","options","sandboxOverrides","SANDBOX_VANILLA_FOLDERS","isBinary","content","sandboxReact","reactScriptExtension","createSandboxReact","slides","SANDBOX_REACT_FOLDERS","SANDBOXES","createSandboxFunctionsWithLabels","VANILLA_JS","SANDBOX_LANGUAGES","VANILLA_TS","REACT_JS","REACT_TS","createCarouselGeneratorInputId","FIELD_NAME","CAROUSEL_GENERATOR_FORM_PREFIX","string","separator","split","letter","idx","toUpperCase","toLowerCase","INPUT_FRAMEWORK","OPTIONS","SandboxSelectionList","styled","createGapStyles","SANDBOX_SELECTION_SPACING","CarouselGeneratorFrameworkSettings","role","sandbox","SandboxSelectionInput","snakeCaseToKebabCase","label","InputCheckboxDefault","createRadioOrCheckboxDefault","createRadioOrCheckboxCard","HEIGHT","SPACINGS","SIDES_PADDING","INPUT_RADIUS","BORDER_RADIUSES","InputTextWrapper","BORDER_SIZES","COLORS","labelActiveStyles","css","Label","LAYERS","labelTextActiveStyles","LabelText","Highlight","BRAND_GRADIENT_BACKGROUND_STYLES","Input","TAP_HIGHLIGHT_STYLES","KEY_NAVIGATING_STYLES","FONT_SIZES","_ref","$inputHasValue","FORM_ITEM_SPACING_X","FORM_ITEM_SPACING_Y","FORM_ITEMS_GAP_STYLES","FORM_ITEM_MAX_WIDTH_STYLES","MEDIA","CarouselGeneratorFormItems","CarouselGeneratorFormItem","CarouselGeneratorInputText","className","restProps","isKeyNavigating","useKeyNavigating","$isKeyNavigating","type","INPUT_AXIS","LABEL","VALUE","INPUT_DIRECTION","INPUT_LOOP","INPUT_DRAG_FREE","INPUT_ACCESSIBILITY","CarouselGeneratorBasicSettings","InputRadioDefault","_ref2","disabled","INPUT_SLIDE_SIZE","INPUT_SLIDE_GAP_SIZE","CarouselGeneratorSlidesSettings","onBlur","INPUT_ALIGN","INPUT_CONTAIN_SCROLL","CAROUSEL_ALIGN_ID","CAROUSEL_STYLES","CarouselWrapper","carouselDefaultWrapperStyles","$showContainScroll","$align","CAROUSEL_SLIDES_SPACING","AlignmentMarker","CAROUSEL_WRAPPER_SPACING","CarouselGeneratorAlignmentSettings","inViewRef","inView","useInView","setOptions","useEffect","Admonition","ref","CarouselDefault","_ref3","INPUT_PREV_NEXT_BUTTONS","INPUT_DOTS","CarouselGeneratorNavigationSettings","INPUT_AUTOPLAY","INPUT_WHEEL_GESTURES","CarouselGeneratorPlugins","CarouselGeneratorSubmitWrapper","CarouselGeneratorButtonWrapper","CarouselGeneratorSubmit","setSandbox","sandboxKey","isLoading","loadSandbox","find","createSandbox","ButtonPrimaryFilledWithLoading","CarouselGeneratorSupport","LinkContent","to","URLS","_createMdxContent","_components","Object","assign","h1","p","strong","hr","h2","a","div","_provideComponents","components","component","Error","_missingMdxReference","style","position","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","CarouselGeneratorForm","action","method","target","Head","data","pageContext","siteUrl","author","useSiteMetadata","title","description","date","mdx","frontmatter","dateToISOString","Date","toISOString","Seo","url","slug","removeProtocol","maskable","PageGenerator","next","previous","filePath","PageBreadcrumbs","MAIN_CONTENT_ID","Mdx","PageEditThisPage","pageUrl","PagePagination","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}
{"version":3,"file":"2382-fd3ca14b07dafa84a568.js","mappings":"uIAAA","sources":["webpack://embla-carousel-docs/./src/components/CodeSandbox/React/SandboxFilesDist/LazyLoad/EmblaCarousel.tsx"],"sourcesContent":["export default \"import React, { useCallback, useEffect, useState } from 'react'\\nimport useEmblaCarousel, { EmblaOptionsType } from 'embla-carousel-react'\\nimport { LazyLoadImage } from './EmblaCarouselLazyLoadImage'\\nimport imageByIndex from '../imageByIndex'\\n \\ntype PropType = {\\n  slides: number[]\\n  options?: EmblaOptionsType\\n}\\n \\nconst EmblaCarousel: React.FC<PropType> = (props) => {\\n  const { slides, options } = props\\n  const [emblaRed, emblaApi] = useEmblaCarousel(options)\\n  const [slidesInView, setSlidesInView] = useState<number[]>([])\\n \\n  const findSlidesInView = useCallback(() => {\\n    if (!emblaApi) return\\n \\n    setSlidesInView((slidesInView) => {\\n      if (slidesInView.length === emblaApi.slideNodes().length) {\\n        emblaApi.off('select', findSlidesInView)\\n      }\\n      const inView = emblaApi\\n        .slidesInView(true)\\n        .filter((index) => slidesInView.indexOf(index) === -1)\\n      return slidesInView.concat(inView)\\n    })\\n  }, [emblaApi, setSlidesInView])\\n \\n  useEffect(() => {\\n    if (!emblaApi) return\\n    findSlidesInView()\\n    emblaApi.on('select', findSlidesInView)\\n    emblaApi.on('reInit', findSlidesInView)\\n  }, [emblaApi, findSlidesInView])\\n \\n  return (\\n    <div className=\\\"embla\\\">\\n      <div className=\\\"embla__viewport\\\" ref={emblaRed}>\\n        <div className=\\\"embla__container\\\">\\n          {slides.map((index) => (\\n            <LazyLoadImage\\n              key={index}\\n              index={index}\\n              imgSrc={imageByIndex(index)}\\n              inView={slidesInView.indexOf(index) > -1}\\n            />\\n          ))}\\n        </div>\\n      </div>\\n    </div>\\n  )\\n}\\n \\nexport default EmblaCarousel\\n\";"],"names":[],"sourceRoot":""}
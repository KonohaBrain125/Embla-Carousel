"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[7402],{7402:function(e,s,n){n.r(s),s.default="\nexport const addThumbBtnsClickHandlers = (emblaApiMain, emblaApiThumb) => {\n    const slidesThumbs = emblaApiThumb.slideNodes();\n    \n    const scrollToIndex = slidesThumbs.map((_, index) => () => emblaApiMain.scrollTo(index));\n    \n    slidesThumbs.forEach((slideNode, index) => {\n        slideNode.addEventListener('click', scrollToIndex[index], false);\n    });\n    \n    return () => {\n        slidesThumbs.forEach((slideNode, index) => {\n            slideNode.removeEventListener('click', scrollToIndex[index], false);\n        });\n    };\n};\n\nexport const addToggleThumbBtnsActive = (emblaApiMain, emblaApiThumb) => {\n    const slidesThumbs = emblaApiThumb.slideNodes();\n    \n    const toggleThumbBtnsState = () => {\n        emblaApiThumb.scrollTo(emblaApiMain.selectedScrollSnap());\n        const previous = emblaApiMain.previousScrollSnap();\n        const selected = emblaApiMain.selectedScrollSnap();\n        slidesThumbs[previous].classList.remove('embla-thumbs__slide--selected');\n        slidesThumbs[selected].classList.add('embla-thumbs__slide--selected');\n    };\n    \n    emblaApiMain.on('select', toggleThumbBtnsState);\n    emblaApiThumb.on('init', toggleThumbBtnsState);\n    \n    return () => {\n        const selected = emblaApiMain.selectedScrollSnap();\n        slidesThumbs[selected].classList.remove('embla-thumbs__slide--selected');\n    };\n};\n"}}]);
//# sourceMappingURL=7402-59dacaea6b9c6951aedd.js.map
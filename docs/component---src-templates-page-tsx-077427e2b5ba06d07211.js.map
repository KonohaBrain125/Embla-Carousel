{"version":3,"file":"component---src-templates-page-tsx-077427e2b5ba06d07211.js","mappings":"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","sources":["webpack://embla-carousel-docs/./src/components/Page/EditPage.tsx","webpack://embla-carousel-docs/./src/components/Page/Pagination.tsx","webpack://embla-carousel-docs/./src/components/Page/Breadcrumbs.tsx","webpack://embla-carousel-docs/./src/hooks/useRouteBreadcrumbs.ts","webpack://embla-carousel-docs/./src/templates/Page.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { PlainLink } from 'components/Link/PlainLink'\nimport { COLORS } from 'consts/themes'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { SPACINGS } from 'consts/spacings'\nimport { URLS } from 'consts/urls'\nimport { IconWithText } from 'components/Icon/IconWithText'\n\nconst Wrapper = styled(PlainLink)`\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n  font-size: ${FONT_SIZES.COMPLEMENTARY};\n  padding-top: ${SPACINGS.ONE};\n  padding-bottom: ${SPACINGS.ONE};\n  margin-top: ${SPACINGS.EIGHT};\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n`\n\ntype PropType = { pageUrl: string }\n\nexport const EditPage = (props: PropType) => {\n  const { pageUrl } = props\n  const url = `${URLS.GITHUB_DOCUMENTATION}/${pageUrl}`\n\n  return (\n    <Wrapper to={url}>\n      <IconWithText iconSvg=\"pen\" iconSize=\"1.5rem\">\n        Edit this page on GitHub\n      </IconWithText>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { PropType as PageType } from 'templates/Page'\nimport { PlainLink } from 'components/Link/PlainLink'\nimport { gradientTextStyles } from 'utils/gradientTextStyles'\nimport { COLORS } from 'consts/themes'\nimport { SPACINGS } from 'consts/spacings'\nimport { supportsStyles } from 'consts/supportsStyles'\nimport { IconWithText } from 'components/Icon/IconWithText'\n\nconst ITEM_SPACING = SPACINGS.FOUR\n\nconst Wrapper = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  margin-top: ${SPACINGS.EIGHT};\n  margin-left: -${ITEM_SPACING};\n`\n\nconst Item = styled.div`\n  padding-left: ${ITEM_SPACING};\n\n  > a {\n    color: ${COLORS.BRAND_PRIMARY};\n  }\n\n  &:nth-child(2) > a {\n    text-align: right;\n    ${supportsStyles.gradientText} {\n      color: ${COLORS.BRAND_SECONDARY};\n    }\n  }\n`\n\nconst ItemLabel = styled.div`\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  padding-bottom: ${SPACINGS.ONE};\n`\n\nconst ItemTitle = styled.div`\n  display: inline-flex;\n  align-items: center;\n  font-weight: 500;\n`\n\nconst GradientText = styled.span`\n  ${gradientTextStyles};\n`\n\ntype PropType = {\n  next: PageType['pageContext']['next']\n  previous: PageType['pageContext']['previous']\n}\n\nexport const Pagination = (props: PropType) => {\n  const { next, previous } = props\n\n  return (\n    <Wrapper aria-label=\"Pagination Navigation\">\n      <Item>\n        {previous && (\n          <PlainLink to={previous.slug}>\n            <ItemLabel>Previous</ItemLabel>\n            <ItemTitle>\n              <IconWithText iconSvg=\"arrowLeft\">\n                <GradientText>{previous.title}</GradientText>\n              </IconWithText>\n            </ItemTitle>\n          </PlainLink>\n        )}\n      </Item>\n      <Item>\n        {next && (\n          <PlainLink to={next.slug}>\n            <ItemLabel>Next</ItemLabel>\n            <ItemTitle>\n              <IconWithText iconSvg=\"arrowRight\" iconSide=\"right\">\n                <GradientText>{next.title}</GradientText>\n              </IconWithText>\n            </ItemTitle>\n          </PlainLink>\n        )}\n      </Item>\n    </Wrapper>\n  )\n}\n","import React, { Fragment } from 'react'\nimport styled, { css } from 'styled-components'\nimport { PlainLink } from 'components/Link/PlainLink'\nimport { useRouteBreadcrumbs } from 'hooks/useRouteBreadcrumbs'\nimport { Icon } from 'components/Icon/Icon'\nimport { COLORS } from 'consts/themes'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { SPACINGS } from 'consts/spacings'\n\nconst Wrapper = styled.nav`\n  display: flex;\n  align-items: center;\n  font-size: ${FONT_SIZES.COMPLEMENTARY};\n  margin-bottom: ${SPACINGS.THREE};\n`\n\nconst itemStyles = css`\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  padding: ${SPACINGS.ONE} 0;\n`\n\nconst Link = styled(PlainLink)`\n  ${itemStyles};\n`\n\nconst ActiveTitle = styled.span`\n  ${itemStyles};\n`\n\nconst Separator = styled(Icon)`\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  margin: 0 ${SPACINGS.ONE};\n`\n\ntype PropType = { id: string }\n\nexport const Breadcrumbs = (props: PropType) => {\n  const { id } = props\n  const breadcrumbs = useRouteBreadcrumbs(id)\n\n  if (breadcrumbs.length === 0) return null\n\n  return (\n    <Wrapper aria-label=\"Breadcrumb Navigation\">\n      {breadcrumbs.map(({ id, slug, title }, index) =>\n        index !== breadcrumbs.length - 1 ? (\n          <Fragment key={id}>\n            <Link to={slug}>{title}</Link>\n            <Separator\n              size=\"0.6rem\"\n              svg=\"chevronRight\"\n              role=\"presentation\"\n              aria-hidden=\"false\"\n            />\n          </Fragment>\n        ) : (\n          <ActiveTitle key={id}>{title}</ActiveTitle>\n        ),\n      )}\n    </Wrapper>\n  )\n}\n","import { RouteType } from 'components/Routes/Context'\nimport { isRoutePartiallyActive } from 'utils/isRoutePartiallyActive'\nimport { useRoutes } from './useRoutes'\n\nexport const useRouteBreadcrumbs = (id: string): RouteType[] => {\n  const { flat: routes } = useRoutes()\n  const currentRoute = routes.find((route) => route.id === id)\n  return routes\n    .filter((route) => isRoutePartiallyActive(route, currentRoute?.slug || ''))\n    .sort((a, b) => a.level - b.level)\n}\n","import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport { Seo } from 'components/Seo/Seo'\nimport maskable from 'assets/images/maskable.png'\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\nimport { EditPage } from 'components/Page/EditPage'\nimport { Pagination } from 'components/Page/Pagination'\nimport { Breadcrumbs } from 'components/Page/Breadcrumbs'\nimport { SKIP_TO_CONTENT_ID } from 'components/TabAccess/SkipToContent'\nimport { RouteType } from 'components/Routes/Context'\nimport { removeProtocol } from 'utils/removeProtocol'\nimport { Mdx } from 'components/Mdx/Mdx'\n\nexport const query = graphql`\n  query PageQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      body\n      frontmatter {\n        title\n        description\n        date(formatString: \"DD MMMM YYYY\")\n      }\n    }\n  }\n`\n\nexport type PropType = {\n  data: {\n    mdx: {\n      body: string\n      frontmatter: {\n        title: string\n        date: string\n        description: string\n      }\n    }\n  }\n  pageContext: {\n    id: string\n    filePath: string\n    next?: RouteType\n    previous?: RouteType\n    slug: string\n  }\n}\n\nconst Page = (props: PropType) => {\n  const { siteUrl, author } = useSiteMetadata()\n  const { data, pageContext } = props\n  const { next, previous, filePath, id } = pageContext\n  const { frontmatter, body } = data.mdx\n  const { title, description, date } = frontmatter\n  const dateToISOString = useMemo(\n    () => new Date(`${date} UTC`).toISOString(),\n    [date],\n  )\n\n  return (\n    <>\n      <Seo\n        title={title}\n        description={description}\n        url={`${siteUrl}${pageContext.slug}`}\n      >\n        <script type=\"application/ld+json\">\n          {`\n            {\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"TechArticle\",\n              \"name\": \"${removeProtocol(siteUrl)}\",\n              \"description\": \"${description}\",\n              \"url\": \"${siteUrl}${pageContext.slug}\",\n              \"headline\": \"${title}\",\n              \"image\": \"${siteUrl}/share-image.png\",\n              \"datePublished\": \"${dateToISOString}\",\n              \"dateModified\": \"${dateToISOString}\",\n              \"author\": {\n                \"@type\": \"Person\",\n                \"name\": \"${author}\"\n              },\n              \"publisher\": {\n                \"@type\": \"Organization\",\n                \"name\": \"${author}\",\n                \"logo\": {\n                  \"@type\": \"ImageObject\",\n                  \"width\": \"512\",\n                  \"height\": \"512\",\n                  \"url\": \"${siteUrl}${maskable}\"\n                }\n              }\n            }\n          `}\n        </script>\n      </Seo>\n      <Breadcrumbs id={id} />\n      <article id={SKIP_TO_CONTENT_ID}>\n        <Mdx body={body} />\n      </article>\n      <EditPage pageUrl={filePath} />\n      <Pagination previous={previous} next={next} />\n    </>\n  )\n}\n\nexport default Page\n"],"names":["Wrapper","styled","PlainLink","withConfig","FONT_SIZES","SPACINGS","COLORS","EditPage","props","pageUrl","url","URLS","React","to","IconWithText","iconSvg","iconSize","ITEM_SPACING","Item","supportsStyles","ItemLabel","ItemTitle","GradientText","gradientTextStyles","Pagination","next","previous","slug","title","iconSide","itemStyles","css","Link","ActiveTitle","Separator","Icon","Breadcrumbs","breadcrumbs","id","routes","useRoutes","flat","currentRoute","find","route","filter","isRoutePartiallyActive","sort","a","b","level","useRouteBreadcrumbs","length","map","index","Fragment","key","size","svg","role","useSiteMetadata","siteUrl","author","data","pageContext","filePath","mdx","frontmatter","body","description","date","dateToISOString","useMemo","Date","toISOString","Seo","type","removeProtocol","maskable","SKIP_TO_CONTENT_ID","Mdx"],"sourceRoot":""}
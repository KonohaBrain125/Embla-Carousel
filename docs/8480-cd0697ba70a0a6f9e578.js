"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[8480],{8480:function(e,t,n){n.r(t),t.default="\nconst addTogglePrevNextBtnsActive = (emblaApi, prevBtn, nextBtn) => {\n    const togglePrevNextBtnsState = () => {\n        if (emblaApi.canScrollPrev())\n            prevBtn.removeAttribute('disabled');\n        else\n            prevBtn.setAttribute('disabled', 'disabled');\n        \n        if (emblaApi.canScrollNext())\n            nextBtn.removeAttribute('disabled');\n        else\n            nextBtn.setAttribute('disabled', 'disabled');\n    };\n    \n    emblaApi\n        .on('select', togglePrevNextBtnsState)\n        .on('init', togglePrevNextBtnsState)\n        .on('reInit', togglePrevNextBtnsState);\n    \n    return () => {\n        prevBtn.removeAttribute('disabled');\n        nextBtn.removeAttribute('disabled');\n    };\n};\n\nexport const addPrevNextBtnsClickHandlers = (emblaApi, prevBtn, nextBtn) => {\n    const scrollPrev = () => emblaApi.scrollPrev();\n    const scrollNext = () => emblaApi.scrollNext();\n    prevBtn.addEventListener('click', scrollPrev, false);\n    nextBtn.addEventListener('click', scrollNext, false);\n    \n    const removeTogglePrevNextBtnsActive = addTogglePrevNextBtnsActive(emblaApi, prevBtn, nextBtn);\n    \n    return () => {\n        removeTogglePrevNextBtnsActive();\n        prevBtn.removeEventListener('click', scrollPrev, false);\n        nextBtn.removeEventListener('click', scrollNext, false);\n    };\n};\n\nexport const addDotBtnsAndClickHandlers = (emblaApi, dotsNode) => {\n    let dotNodes = [];\n    \n    const addDotBtnsWithClickHandlers = () => {\n        dotsNode.innerHTML = emblaApi\n            .scrollSnapList()\n            .map(() => '<button class=\"embla__dot\" type=\"button\"></button>')\n            .join('');\n        \n        dotNodes = Array.from(dotsNode.querySelectorAll('.embla__dot'));\n        dotNodes.forEach((dotNode, index) => {\n            dotNode.addEventListener('click', () => emblaApi.scrollTo(index), false);\n        });\n    };\n    \n    const toggleDotBtnsActive = () => {\n        const previous = emblaApi.previousScrollSnap();\n        const selected = emblaApi.selectedScrollSnap();\n        dotNodes[previous].classList.remove('embla__dot--selected');\n        dotNodes[selected].classList.add('embla__dot--selected');\n    };\n    \n    emblaApi\n        .on('init', addDotBtnsWithClickHandlers)\n        .on('reInit', addDotBtnsWithClickHandlers)\n        .on('init', toggleDotBtnsActive)\n        .on('reInit', toggleDotBtnsActive)\n        .on('select', toggleDotBtnsActive);\n    \n    return () => {\n        dotsNode.innerHTML = '';\n    };\n};\n"}}]);
//# sourceMappingURL=8480-cd0697ba70a0a6f9e578.js.map
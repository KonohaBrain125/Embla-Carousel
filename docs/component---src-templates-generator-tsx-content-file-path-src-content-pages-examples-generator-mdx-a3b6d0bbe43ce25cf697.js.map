{"version":3,"file":"component---src-templates-generator-tsx-content-file-path-src-content-pages-examples-generator-mdx-a3b6d0bbe43ce25cf697.js","mappings":"+PAAO,MCUMA,EAAsD,CACjEC,SAAU,CACRC,UAAW,GACXC,MAAM,EACNC,UAAU,EACVC,KAAM,IACNC,UAAW,MACXC,eAAe,EACfC,UAAW,MACXC,aAAc,KACdC,QAAS,IACTC,MAAO,SACPC,eAAe,EACfC,2BAA2B,EAC3BC,gBAAgB,EAChBC,UAAU,EACVC,eAAe,GAEjBC,SAAUA,KAAe,EACzBC,iBAAkBA,KAAe,EACjCC,cAAeA,KAAe,EAC9BC,eAAgBA,KAAe,EAC/BC,aAAcA,KAChB,GAcaC,GACXC,EAAAA,EAAAA,eAA4CvB,GAIjCwB,EAA6BC,IACxC,MAAM,SAAEC,GAAaD,GACf,EAACxB,EAAS,EAAC0B,IAAeC,EAAAA,EAAAA,UAC9B5B,EAAsBC,UAGlBgB,GAAqDY,EAAAA,EAAAA,cACzD,CAACC,EAAKC,KACJJ,GAAaK,IAAiB,IACzBA,EACH,CAACF,GAAMC,KACN,GAEL,IAGIb,GAAmBW,EAAAA,EAAAA,cACtBI,IACC,MAAM,KAAEC,EAAI,QAAEC,GAAYF,EAAMG,cAGhCnB,EAFkBiB,EAEEC,EAAQ,GAE9B,CAAClB,IAGGE,GAAgBU,EAAAA,EAAAA,cACnBI,IACC,MAAM,KAAEC,EAAI,MAAEH,GAAUE,EAAMG,cAG9BnB,EAFkBiB,EAEEH,EAAM,GAE5B,CAACd,IAGGG,GAAiBS,EAAAA,EAAAA,cACpBI,IACC,MAAM,KAAEC,EAAI,MAAEH,GAAUE,EAAMG,cAG9BnB,EAFkBiB,EAEEH,EAAM,GAE5B,CAACd,IAGGI,GAAeQ,EAAAA,EAAAA,cAClBI,IACC,MAAMI,EAAQJ,EAAMG,cACdE,EAAYD,EAAMH,KAClBK,EAAWC,SAASH,EAAMI,aAAa,QAAU,GAAI,IACrDC,EAAWF,SAASH,EAAMI,aAAa,QAAU,GAAI,IACrDV,GDvGVY,ECwGMC,WAAWP,EAAMN,OAAS,KDvGhCc,ECwGMN,EDvGNO,ECwGMJ,EDvGKK,KAAKF,IAAIE,KAAKD,IAAIH,EAAQE,GAAMC,IAJZE,IAC/BL,EACAE,EACAC,EC2GI7B,EAASqB,EAAWP,EAAMkB,WAAW,GAEvC,CAAChC,IAGGc,GAAQmB,EAAAA,EAAAA,UACZ,MACEjD,WACAgB,WACAC,mBACAC,gBACAC,iBACAC,kBAEF,CACEpB,EACAgB,EACAC,EACAC,EACAC,EACAC,IAIJ,OACE8B,EAAAA,cAAC7B,EAAyB8B,SAAQ,CAACrB,MAAOA,GACvCL,EACiC,ECnI3B2B,EAAuBA,KAClCC,EAAAA,EAAAA,YAAWhC,GCcAiC,EACA,YADAA,EAEL,OAFKA,EAGA,WAHAA,EAIL,OAJKA,EAKA,YALAA,EAMI,gBANJA,EAOC,YAPDA,EAQK,eARLA,EAUJ,QAVIA,EAWK,gBAXLA,EAYmB,4BAZnBA,EAaM,iBAbNA,EAcD,WAdCA,EAeK,gBCjCZC,EAAQ,WACRC,EAAM,WACNC,EAAYD,EAAG,eAAeD,EAE9BG,EAAiCA,CACrCC,EACAC,EACAC,KAEA,IAAIC,EAAc,GAGhBA,EADEF,EACS,IAAOL,EAAK,KAAKI,EAAY,mBAAmBH,EAAG,SAASD,EAAK,KAAKI,EAAY,iBAAiBH,EAAG,OAEhGD,EAAK,KAAKI,EAAY,mBAAmBF,EAAM,KAAKE,EAAY,iBAAiBH,EAAG,MAGvG,MAAMO,EAAQ,IAAIC,OAAOF,EAAa,KACtC,OAAOD,EAAeI,QAAQF,EAAO,GAAG,EAG7BG,EAAkCA,CAC7CL,EACAM,KAEA,IAAIC,EAA6BP,EAAeQ,QAChD,MAAM,KACJjE,EAAI,0BACJQ,EAAyB,eACzBC,EAAc,SACdC,EAAQ,UACRT,GACE8D,EAEEG,EAA2BxD,IADXF,GAA6BC,GAE7C0D,EAAwB,MAATnE,EACfoE,EAA8B,QAAdnE,EAChBoE,GAAiBD,EAqDvB,OAnDAJ,EAA6BV,EAC3B,oBACA9C,EACAwD,GAEFA,EAA6BV,EAC3B,cACA7C,EACAuD,GAEFA,EAA6BV,EAC3B,UACA5C,EACAsD,GAEFA,EAA6BV,EAC3B,eACAY,EACAF,GAEFA,EAA6BV,EAC3B,gBACAe,EACAL,GAEFA,EAA6BV,EAC3B,gBACAc,EACAJ,GAEFA,EAA6BV,EAC3B,wBACAa,GAAgBC,GAAiB5D,EACjCwD,GAEFA,EAA6BV,EAC3B,wBACAa,GAAgBE,GAAiB7D,EACjCwD,GAEFA,EAA6BV,EAC3B,8BACCa,GAAgB3D,EACjBwD,GAEFA,EAA6BV,EAC3B,WACA5C,EACAsD,GAGKA,CAA0B,E,uBCpF5B,MAAMM,EACXP,IAEA,MAAM,0BACJvD,EAAyB,eACzBC,EAAc,UACdN,EAAS,aACTC,EAAY,KACZJ,GACE+D,EACEQ,EAA0C,GAKhD,OAHI/D,GAA2B+D,EAAUC,KAAKC,EAAAA,IAC1ChE,GAAgB8D,EAAUC,KAAKE,EAAAA,KAE5BC,EAAAA,EAAAA,IACFxE,EAAS,IACToC,WAAWnC,GAAgB,GAAE,MAChCJ,EACAuE,EAAUK,KAAKC,IAAWC,EAAAA,EAAAA,GAA+BD,KAASE,KAAK,IACxE,EC1BUC,EACXjB,IAEA,MAAM,KAAE/D,EAAI,MAAEM,EAAK,UAAEL,EAAS,cAAEM,EAAa,KAAET,EAAI,SAAEC,GAAagE,EAElE,MAAO,IACQ,MAAT/D,GAAgB,CAAEA,WACR,WAAVM,GAAsB,CAAEA,YACxBP,GAAY,CAAEA,eACA,QAAdE,GAAgC,MAATD,GAAgB,CAAEC,iBACxCH,GAAQS,GAAiB,CAAEA,cAAe,gBAC3CT,GAAQ,CAAEA,QACf,E,wBCPI,MAAMmF,EACXlB,IAEA,MAAMmB,EAAsC,GAI5C,OAFInB,EAASrD,UAAUwE,EAAWV,KAAKW,EAAAA,GAAgBC,WAEhDC,EAAAA,EAAAA,IAAkBH,GAAYI,OAAO,E,sDCO9C,MAAMC,EAAK,2BACLC,EAAmB7F,EAAsBC,SACzC6F,GAASC,EAAAA,EAAAA,GAAgB,GAQzBC,EAAiBC,eACrB7B,EACA8B,QADuC,IAAvC9B,IAAAA,EAA0CyB,GAG1C,MAAM,aAAEM,EAAY,uBAAEC,EAAsB,aAAEC,SACtCC,EAAAA,EAAAA,IAAqBJ,GAC7B,IAAIpC,EACAyC,EACAC,EAEJ,MAAMC,QAAqB,+BA0B3B,OAtBIN,GACFrC,QAAuB,+BAGvByC,QAA2B,+BAG3BC,QAAwB,iCAIxB1C,QAAuB,2BAGvByC,QAA2B,+BAG3BC,QAAwB,iCAKnBE,EAAAA,EAAAA,GAAqB,CAC1BC,GAAIf,EACJM,WACAU,QAASvB,EAA+BjB,GACxCc,OAAQP,EAA8BP,GACtCN,eAAgBK,EAAgCL,EAAgBM,GAChEuB,QAASL,EAA+BlB,GACxCqC,aAActC,EAAgCsC,EAAcrC,GAC5DyC,iBAAkB,IACZzC,EAASvD,2BAA6B,CACxC,CAAIiG,EAAAA,EAAwBC,GAAxBD,kBAAiEV,GACnE,CACEY,UAAU,EACVC,QAASZ,EACPlC,EAAgCoC,EAAoBnC,SAIxDA,EAAStD,gBAAkB,CAC7B,CAAIgG,EAAAA,EAAwBC,GAAxBD,gBAA8DV,GAChE,CACEY,UAAU,EACVC,QAASZ,EACPlC,EAAgCqC,EAAiBpC,QAM/D,EAEM8C,EAAejB,eACnB7B,EACA8B,QADuC,IAAvC9B,IAAAA,EAA0CyB,GAG1C,MAAM,aAAEM,EAAY,qBAAEgB,EAAoB,aAAEd,SACpCC,EAAAA,EAAAA,IAAqBJ,GAC7B,IAAIpC,EACAyC,EACAC,EAwBJ,OAtBIL,GACFrC,QAAuB,+BAGvByC,QAA2B,+BAG3BC,QAAwB,iCAIxB1C,QAAuB,+BAGvByC,QAA2B,+BAG3BC,QAAwB,+BAKnBY,EAAAA,EAAAA,GAAmB,CACxBT,GAAIf,EACJM,WACAmB,OAAQvB,EACRc,QAASvB,EAA+BjB,GACxCc,OAAQP,EAA8BP,GACtCN,eAAgBK,EAAgCL,EAAgBM,GAChEuB,QAASL,EAA+BlB,GACxCyC,iBAAkB,IACZzC,EAASvD,2BAA6B,CACxC,CAAIyG,EAAAA,EAAsBP,GAAtBO,8BAA6DH,GAC/D,CACEH,UAAU,EACVC,QAASZ,EACPlC,EAAgCoC,EAAoBnC,SAIxDA,EAAStD,gBAAkB,CAC7B,CAAIwG,EAAAA,EAAsBP,GAAtBO,2BAA0DH,GAC5D,CACEH,UAAU,EACVC,QAASZ,EACPlC,EAAgCqC,EAAiBpC,QAM/D,EAEamD,GACXC,EAAAA,EAAAA,IAAiC,CAC/BC,WAAarD,GACX4B,EAAe5B,EAAUsD,EAAAA,GAAkBC,YAC7CC,WAAaxD,GACX4B,EAAe5B,EAAUsD,EAAAA,GAAkBG,YAC7CC,SAAW1D,GACT8C,EAAa9C,EAAUsD,EAAAA,GAAkBC,YAC3CI,SAAW3D,GACT8C,EAAa9C,EAAUsD,EAAAA,GAAkBG,c,kCC3KxC,MCkCMG,EAGX1F,IAEA,MAAO,CACL2F,WAAY3F,EACZsD,GAAOsC,4BDxCTC,ECyCI7F,ODzCU,IAAd6F,IAAAA,EAAiB,SACA,IAAjBC,IAAAA,EAAoB,IAEbD,EACJE,MAAM,IACNpD,KAAI,CAACqD,EAAQC,IACLD,EAAOE,gBAAkBF,GACjB,IAARC,EAAY,IAAM,IAAKD,EAAOG,cACjCH,IAELlD,KAAKgD,KAX8B,IACtCD,EACAC,CC0CC,EC9BGM,EAA2D,IAC5DV,EAA+BzE,GAClCoF,QAAS,IAGLC,GAAuBC,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,2DAAAC,YAAA,gBAATJ,CAAS,iFAClCK,EAAAA,EAAAA,GACAC,EAAAA,GACAA,EAAAA,GACA,OAMSC,GAAqCA,KAChD,MAAM,SAAEnJ,EAAQ,cAAEkB,GAAkBkC,IAEpC,OACEF,EAAAA,cAAA,WACEA,EAAAA,cAACyF,GAAoB,CAACS,KAAK,aAAa,aAAYX,EAAgB9C,IACjE2B,EAAUtC,KAAKqE,GACdnG,EAAAA,cAAA,MAAIrB,IAAKwH,EAAQxH,KACfqB,EAAAA,cAACoG,EAAAA,EAAqB,CACpBrJ,UAAWoJ,EAAQxH,IACnBI,KAAMwG,EAAgBT,WACtBtB,GAAO+B,EAAgB9C,GAAE,KAAI4D,EAAAA,EAAAA,GAAqBF,EAAQxH,KAC1DC,MAAOuH,EAAQxH,IACfb,SAAUE,EACVgB,QAASlC,EAASyI,EAAgBT,cAAgBqB,EAAQxH,KAEzDwH,EAAQG,WAKb,E,qCC/CH,MAAMC,IAAuBC,EAAAA,GAAAA,GAA6B,aAEhCC,EAAAA,GAAAA,GAA0B,Y,gHCO3D,MAAMC,GAASC,GAAAA,EAASC,MAClBC,GAAgBF,GAAAA,EAASG,MACzBC,GAAeC,GAAAA,EAAgBC,IAE/BC,GAAmBxB,EAAAA,QAAOyB,KAAIvB,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAXJ,CAAW,4JACxBgB,GACOK,GACPK,GAAAA,EAAaC,OAAgBC,GAAAA,GAAOC,oBAC1BD,GAAAA,GAAOE,iBAOvBC,IAAoBC,EAAAA,EAAAA,KAAG,uDAIvBC,GAAQjC,EAAAA,QAAOY,MAAKV,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAZJ,CAAY,mLACbkC,GAAAA,EAAOC,KACVhB,GACCS,GAAAA,GAAOQ,mBAWZC,IAAwBL,EAAAA,EAAAA,KAAG,+CACXJ,GAAAA,GAAOE,gBACjBJ,GAAAA,EAAaC,OAAgBC,GAAAA,GAAOC,qBAG1CS,GAAYtC,EAAAA,QAAOyB,KAAIvB,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAXJ,CAAW,wHACXiB,GAAAA,EAASsB,IACRtB,GAAAA,EAASsB,IACTlB,GACNa,GAAAA,EAAOC,MAMdK,GAAYxC,EAAAA,QAAOyB,KAAIvB,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAXJ,CAAW,sQACzByC,GAAAA,EACMf,GAAAA,EAAaC,OACZD,GAAAA,EAAaC,OACXD,GAAAA,EAAaC,OACdD,GAAAA,EAAaC,OAQDC,GAAAA,GAAOE,gBAGpBJ,GAAAA,EAAagB,QACZhB,GAAAA,EAAagB,QACXhB,GAAAA,EAAagB,QACdhB,GAAAA,EAAagB,SAKpBC,GAAQ3C,EAAAA,QAAOxG,MAAK0G,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAZJ,CAAY,oSAItB4C,GAAAA,EACAC,GAAAA,EACSX,GAAAA,EAAOC,KACIT,GAAAA,EAAaC,OACdD,GAAAA,EAAaC,OACzBC,GAAAA,GAAOkB,UACHC,GAAAA,EAAWC,KACX7B,GAODqB,GAAeP,GACvBF,GAEEO,GACAD,GAIMG,IAIVS,IAAA,IAAC,eAAEC,GAAgBD,EAAA,OACnBC,IACAlB,EAAAA,EAAAA,KAAG,mCACKQ,GAAeP,GACjBF,GAEEO,GACAD,GAGP,ICpHQc,GAAsBlC,GAAAA,EAASmC,KAC/BC,GAAsBpC,GAAAA,EAASqC,IAE/BC,IAAwBlD,EAAAA,EAAAA,GACnC8C,GACAE,GACA,KAGWG,IAA6BxB,EAAAA,EAAAA,KAAG,8CAGzCyB,GAAAA,GAAMC,OAd8B,SAoB3BC,GAA6B3D,EAAAA,QAAO4D,IAAG1D,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAVJ,CAAU,mEAChDuD,GACoBJ,GAAyBE,IAKpCQ,GAA4B7D,EAAAA,QAAO4D,IAAG1D,WAAA,CAAAC,YAAA,wDAAAC,YAAA,eAAVJ,CAAU,uBAChCmD,IAGNW,IAA6B9D,EAAAA,EAAAA,UDiGhBpH,IACxB,MAAM,SAAEC,EAAQ,UAAEkL,KAAcC,GAAcpL,GACxC,gBAAEqL,IAAoBC,EAAAA,GAAAA,KAE5B,OACE5J,EAAAA,cAACkH,GAAgB,CAACuC,UAAWA,GAC3BzJ,EAAAA,cAACqI,GAAKwB,OAAAC,OAAA,CACJC,iBAAkBJ,EAClBf,iBAAkBc,EAAU9K,MAC5BoL,KAAK,QACDN,IAEN1J,EAAAA,cAACkI,GAAS,MACVlI,EAAAA,cAAC2H,GAAK,KACJ3H,EAAAA,cAACgI,GAAS,KAAEzJ,IAEG,ICjHoCqH,WAAA,CAAAC,YAAA,yDAAAC,YAAA,eAAjBJ,CAAiB,SACvDwD,ICvBEe,GAAiD,IAClDpF,EAA+BzE,GAClCoF,QAAS,CACP,CAAE0E,MAAO,aAAcC,MAAO,KAC9B,CAAED,MAAO,WAAYC,MAAO,OAI1BC,GAA2D,IAC5DvF,EAA+BzE,GAClCoF,QAAS,CACP,CAAE0E,MAAO,gBAAiBC,MAAO,OACjC,CAAED,MAAO,gBAAiBC,MAAO,SAI/BE,GAAoD,IACrDxF,EAA+BzE,GAClC8J,MAAO,QAGHI,GAA6D,IAC9DzF,EAA+BzE,GAClC8J,MAAO,aAGHK,GAAsE,IACvE1F,EACDzE,GAEF8J,MAAO,qCAGIM,GAAiCA,KAC5C,MAAM,SAAE1N,EAAQ,iBAAEiB,EAAgB,cAAEC,GAAkBkC,IAEtD,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACqJ,GAA0B,CAACnD,KAAK,aAAa,aAAY+D,GAAWxH,IAClEwH,GAAWzE,QAAQ1D,KAAI6G,IAAA,IAAC,MAAEwB,EAAK,MAAED,GAAOvB,EAAA,OACvC3I,EAAAA,cAAA,OAAKrB,IAAKwL,GACRnK,EAAAA,cAACyK,GAAAA,EAAiB,CAChB1L,KAAMkL,GAAWnF,WACjBtB,GAAOyG,GAAWxH,GAAE,IAAI0H,EACxBvL,MAAOuL,EACPnL,QAASlC,EAASmN,GAAWnF,cAAgBqF,EAC7CrM,SAAUE,GAETkM,GAEC,KAIVlK,EAAAA,cAACqJ,GAA0B,CACzBnD,KAAK,aACL,aAAYkE,GAAgB3H,IAE3B2H,GAAgB5E,QAAQ1D,KAAI4I,IAAA,IAAC,MAAEP,EAAK,MAAED,GAAOQ,EAAA,OAC5C1K,EAAAA,cAAA,OAAKrB,IAAKwL,GACRnK,EAAAA,cAACyK,GAAAA,EAAiB,CAChB1L,KAAMqL,GAAgBtF,WACtBtB,GAAO4G,GAAgB3H,GAAE,IAAI0H,EAC7BvL,MAAOuL,EACPnL,QAASlC,EAASsN,GAAgBtF,cAAgBqF,EAClDrM,SAAUE,GAETkM,GAEC,KAIVlK,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACuG,GAAoB,CACnBxH,KAAMsL,GAAWvF,WACjBtB,GAAI6G,GAAW5H,GACfzD,QAASlC,EAASuN,GAAWvF,YAC7BhH,SAAUC,GAETsM,GAAWH,QAIhBlK,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACuG,GAAoB,CACnBxH,KAAMuL,GAAgBxF,WACtBtB,GAAI8G,GAAgB7H,GACpBzD,QAASlC,EAASwN,GAAgBxF,YAClChH,SAAUC,GAETuM,GAAgBJ,QAIrBlK,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACuG,GAAoB,CACnBxH,KAAMwL,GAAoBzF,WAC1BtB,GAAI+G,GAAoB9H,GACxBzD,QAASlC,EAASyN,GAAoBzF,YACtChH,SAAUC,EACV4M,UAAQ,GAEPJ,GAAoBL,QAGxB,EC7GDU,GAAgE,IACjE/F,EAA+BzE,GAClC8J,MAAO,kBAGHW,GAAuE,IACxEhG,EACDzE,GAEF8J,MAAO,mBAGIY,GAAkCA,KAC7C,MAAM,SAAEhO,EAAQ,eAAEmB,EAAc,aAAEC,GAAiBgC,IAEnD,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACwJ,GAA0B,CACzBQ,KAAK,SACLtK,IAAI,KACJC,IAAI,MACJZ,KAAM6L,GAAiB9F,WACvBtB,GAAIoH,GAAiBnI,GACrB7D,MAAO9B,EAAS8N,GAAiB9F,YACjChH,SAAUG,EACV8M,OAAQ7M,GAEP0M,GAAiBV,QAItBlK,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACwJ,GAA0B,CACzBQ,KAAK,SACLtK,IAAI,IACJC,IAAI,KACJZ,KAAM8L,GAAqB/F,WAC3BtB,GAAIqH,GAAqBpI,GACzB7D,MAAO9B,EAAS+N,GAAqB/F,YACrChH,SAAUG,EACV8M,OAAQ7M,GAEP2M,GAAqBX,QAGzB,E,gDC1BP,MAAMc,GAAmD,IACpDnG,EAA+BzE,GAClCoF,QAAS,CACP,CAAE0E,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,MAAOC,MAAO,SAIrBc,GAAuE,IACxEpG,EACDzE,GAEF8J,MAAO,oCAGHvH,IAASC,EAAAA,EAAAA,GAAgB,GACzBsI,GAAuBF,GAAYvI,GAAE,QAErC0I,IAAkBtJ,EAAAA,EAAAA,IAA4B,OAE9CuJ,GAAkB1F,EAAAA,QAAO4D,IAAG1D,WAAA,CAAAC,YAAA,sDAAAC,YAAA,gBAAVJ,CAAU,6DAI9B2F,GAAAA,GAEEH,GACAC,GACexE,GAAAA,EAASmC,MAGtBH,IAAA,IAAC,mBAAE2C,EAAkB,OAAEC,GAAQ5C,EAAA,OAC/B2C,IACA5D,EAAAA,EAAAA,KAAG,mYASgBe,GAAAA,EAAW+C,QAAO,IAAM,MAYhBC,GAAAA,GACR,UAAXF,IACF7D,EAAAA,EAAAA,KAAG,mBAUU,QAAX6D,IACF7D,EAAAA,EAAAA,KAAG,mBAKR,IAKHgE,GAAkBhG,EAAAA,QAAO4D,IAAG1D,WAAA,CAAAC,YAAA,sDAAAC,YAAA,gBAAVJ,CAAU,4JAI5ByC,GAAAA,EACOf,GAAAA,EAAauE,gBACVC,GAAAA,GACGA,GAAAA,GACJhE,GAAAA,EAAOC,KAKDb,GAAAA,EAAgB6E,MAE/BnB,IAAiB,IAAhB,OAAEa,GAAQb,EACX,MAAe,UAAXa,GACK7D,EAAAA,EAAAA,KAAG,cACAkE,GAAAA,IAGG,QAAXL,GACK7D,EAAAA,EAAAA,KAAG,eACCkE,GAAAA,KAGNlE,EAAAA,EAAAA,KAAG,yCAEaN,GAAAA,EAAauE,gBAAe,IAK5CG,GAAqCA,KAChD,MAAM,SAAEhP,EAAQ,iBAAEiB,EAAgB,cAAEC,GAAkBkC,KAC/C6L,EAAWC,IAAUC,EAAAA,GAAAA,MACtB5O,EAAYP,EAASsD,GACrBpD,EAAOF,EAASsD,GAChBnD,EAAWH,EAASsD,GACpB5C,EAAQV,EAASkO,GAAYlG,YAC7BrH,IAAgBX,EAASmO,GAAqBnG,aAChD,aAEE,EAACrB,EAAQ,EAACyI,IAAczN,EAAAA,EAAAA,UAA2B,CACvDjB,QACAC,gBACAT,OACAC,aAYF,OATAkP,EAAAA,EAAAA,YAAU,KACRD,EAAW,CACT1O,QACAC,gBACAT,OACAC,YACA,GACD,CAACD,EAAMC,EAAUO,EAAOC,IAGzBuC,EAAAA,cAAAA,EAAAA,SAAA,KACiB,QAAd3C,GACC2C,EAAAA,cAACoM,GAAAA,GAAU,CAACpC,KAAK,QAAO,+BACMhK,EAAAA,cAAA,cAAQ,QAAa,sBAAoB,IAAI,eAC7DA,EAAAA,cAAA,cAAQ,kBAAuB,KAG/CA,EAAAA,cAACoL,GAAe,CACd3B,UAAWyB,GACXmB,IAAKN,EACLT,oBAAqB7N,IAAkBT,EACvCuO,OAAQ/N,GAEPwO,EACChM,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACsM,GAAAA,EAAe,CAACpI,OAAQvB,GAAQc,QAASA,IAC1CzD,EAAAA,cAAC0L,GAAe,CAACH,OAAQ/N,KAEzB,MAGNwC,EAAAA,cAACqJ,GAA0B,CAACnD,KAAK,aAAa,aAAY8E,GAAYvI,IACnEuI,GAAYxF,QAAQ1D,KAAIyK,IAAA,IAAC,MAAEpC,EAAK,MAAED,GAAOqC,EAAA,OACxCvM,EAAAA,cAAA,OAAKrB,IAAKwL,GACRnK,EAAAA,cAACyK,GAAAA,EAAiB,CAChB1L,KAAMiM,GAAYlG,WAClBtB,GAAOwH,GAAYvI,GAAE,IAAI0H,EACzBvL,MAAOuL,EACPnL,QAASlC,EAASkO,GAAYlG,cAAgBqF,EAC9CrM,SAAUE,GAETkM,GAEC,MAIRlN,GACAgD,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACuG,GAAoB,CACnBxH,KAAMkM,GAAqBnG,WAC3BtB,GAAIyH,GAAqBxI,GACzBzD,QAASlC,EAASmO,GAAqBnG,YACvChH,SAAUC,GAETkN,GAAqBf,QAI3B,ECjNDsC,GACJ,IACK3H,EACDzE,GAEF8J,MAAO,6BAGLuC,GAA8D,IAC/D5H,EACDzE,GAEF8J,MAAO,kBAGIwC,GAAsCA,KACjD,MAAM,SAAE5P,EAAQ,iBAAEiB,GAAqBmC,IAEvC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACuG,GAAoB,CACnBxH,KAAMyN,GAAwB1H,WAC9BtB,GAAIgJ,GAAwB/J,GAC5BzD,QAASlC,EAAS0P,GAAwB1H,YAC1ChH,SAAUC,GAETyO,GAAwBtC,QAI7BlK,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACuG,GAAoB,CACnBxH,KAAM0N,GAAW3H,WACjBtB,GAAIiJ,GAAWhK,GACfzD,QAASlC,EAAS2P,GAAW3H,YAC7BhH,SAAUC,GAET0O,GAAWvC,QAGf,ECzCDyC,GAA4D,IAC7D9H,EAA+BzE,GAClC8J,MAAO,YAGH0C,GAAuE,IACxE/H,EACDzE,GAEF8J,MAAO,sCAGI2C,GAA2BA,KACtC,MAAM,SAAE/P,EAAQ,iBAAEiB,GAAqBmC,IAEvC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACuG,GAAoB,CACnBxH,KAAM4N,GAAe7H,WACrBtB,GAAImJ,GAAelK,GACnBzD,QAASlC,EAAS6P,GAAe7H,YACjChH,SAAUC,GAET4O,GAAezC,QAIpBlK,EAAAA,cAACuJ,GAAyB,KACxBvJ,EAAAA,cAACuG,GAAoB,CACnBxH,KAAM6N,GAAqB9H,WAC3BtB,GAAIoJ,GAAqBnK,GACzBzD,QAASlC,EAAS8P,GAAqB9H,YACvChH,SAAUC,EACV4M,UAAQ,GAEPiC,GAAqB1C,QAGzB,E,cCnCP,MAAM4C,GAAiCpH,EAAAA,QAAO4D,IAAG1D,WAAA,CAAAC,YAAA,0DAAAC,YAAA,gBAAVJ,CAAU,yBAC7CK,EAAAA,EAAAA,GAAgB8C,GAAqBlC,GAAAA,EAASC,OAClCD,GAAAA,EAASC,OAGnBmG,GAAiCrH,EAAAA,QAAO4D,IAAG1D,WAAA,CAAAC,YAAA,0DAAAC,YAAA,gBAAVJ,CAAU,SAC7CwD,IAGS8D,GAA0BA,KACrC,MAAM,SAAElQ,GAAaoD,KACf,EAACiG,EAAQ,EAAC8G,IAAcxO,EAAAA,EAAAA,UAAS,IACjCyO,EAAapQ,EAASC,UACtBoQ,KAAeD,GAAe/G,GAE9BiH,GAAc1O,EAAAA,EAAAA,cAClBoE,MACEnE,EACAsC,KAEA,MAAMkF,EAAU/B,EAAUiJ,MAAMlH,GAAYA,EAAQxH,MAAQA,IACxDwH,GAAS8G,QAAiB9G,EAAQmH,cAAcrM,GAAU,GAEhE,IAUF,OAPAkL,EAAAA,EAAAA,YAAU,KACJe,IACFD,EAAW,IACXG,EAAYF,EAAYpQ,GAC1B,GACC,CAACoQ,EAAYpQ,IAGdkD,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAOgK,KAAK,SAASjL,KAAK,aAAaH,MAAOuH,IAE9CnG,EAAAA,cAAC8M,GAA8B,KAC7B9M,EAAAA,cAAC+M,GAA8B,KAC7B/M,EAAAA,cAACuN,GAAAA,GAA8B,CAC7BJ,UAAWA,EACXxC,UAAWxE,EACX6D,KAAK,UACN,wBAKD,EC1DGwD,GAA2BA,IAEpCxN,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAACyN,EAAAA,EAAW,CAACC,GAAIC,EAAAA,EAAKC,eAAe,WAEvC5N,EAAAA,cAAA,UACEA,EAAAA,cAACyN,EAAAA,EAAW,CAACC,GAAIC,EAAAA,EAAKE,cAAc,WCE5C,SAASC,GAAkBxP,GACzB,MAAMyP,EAAclE,OAAOC,OAAO,CAChCkE,GAAI,KACJC,EAAG,IACHC,OAAQ,SACRC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHlH,KAAM,SACLmH,EAAAA,EAAAA,MAAsBhQ,EAAMiQ,aAAa,WAACnC,GAAc2B,EAE3D,OADK3B,GAuGP,SAA8B5I,EAAIgL,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOhL,EAAK,qEACnF,CAzGmBkL,CAAqB,cAAc,GAC7C1O,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB+N,EAAYC,GAAI,KAAM,sBAAuB,KAAMhO,EAAAA,cAAoB+N,EAAYE,EAAG,KAAM,0FAA2F,KAAMjO,EAAAA,cAAoBoM,EAAY,CAChSpC,KAAM,WACLhK,EAAAA,cAAoB+N,EAAYE,EAAG,KAAMjO,EAAAA,cAAoB+N,EAAYG,OAAQ,KAAM,YAAa,gKAAiKlO,EAAAA,cAAoB,MAAOA,EAAAA,cAAoB+N,EAAYE,EAAG,KAAM,YAAajO,EAAAA,cAAoByN,EAAAA,EAAa,CACxXC,GAAOC,EAAAA,EAAKgB,mBAAkB,QAC7B,mBAAoB,MAAO,KAAM3O,EAAAA,cAAoB+N,EAAYI,IAAK,KAAMnO,EAAAA,cAAoB+N,EAAYK,GAAI,CACjH5K,GAAI,mBACJoL,MAAO,CACLC,SAAU,aAEX7O,EAAAA,cAAoB+N,EAAYM,EAAG,CACpCS,KAAM,oBACN,aAAc,6BACdrF,UAAW,iBACVzJ,EAAAA,cAAoB+N,EAAY5G,KAAM,CACvC4H,wBAAyB,CACvBC,OAAQ,uaAEP,oBAAqB,KAAMhP,EAAAA,cAAoBiG,IAAqC,KAAMjG,EAAAA,cAAoB+N,EAAYK,GAAI,CACjI5K,GAAI,iBACJoL,MAAO,CACLC,SAAU,aAEX7O,EAAAA,cAAoB+N,EAAYM,EAAG,CACpCS,KAAM,kBACN,aAAc,2BACdrF,UAAW,iBACVzJ,EAAAA,cAAoB+N,EAAY5G,KAAM,CACvC4H,wBAAyB,CACvBC,OAAQ,uaAEP,kBAAmB,KAAMhP,EAAAA,cAAoBwK,IAAiC,KAAMxK,EAAAA,cAAoB+N,EAAYK,GAAI,CAC3H5K,GAAI,iBACJoL,MAAO,CACLC,SAAU,aAEX7O,EAAAA,cAAoB+N,EAAYM,EAAG,CACpCS,KAAM,kBACN,aAAc,2BACdrF,UAAW,iBACVzJ,EAAAA,cAAoB+N,EAAY5G,KAAM,CACvC4H,wBAAyB,CACvBC,OAAQ,uaAEP,kBAAmB,KAAMhP,EAAAA,cAAoB8K,IAAkC,KAAM9K,EAAAA,cAAoB+N,EAAYK,GAAI,CAC5H5K,GAAI,qBACJoL,MAAO,CACLC,SAAU,aAEX7O,EAAAA,cAAoB+N,EAAYM,EAAG,CACpCS,KAAM,sBACN,aAAc,+BACdrF,UAAW,iBACVzJ,EAAAA,cAAoB+N,EAAY5G,KAAM,CACvC4H,wBAAyB,CACvBC,OAAQ,uaAEP,sBAAuB,KAAMhP,EAAAA,cAAoB8L,IAAqC,KAAM9L,EAAAA,cAAoB+N,EAAYK,GAAI,CACnI5K,GAAI,sBACJoL,MAAO,CACLC,SAAU,aAEX7O,EAAAA,cAAoB+N,EAAYM,EAAG,CACpCS,KAAM,uBACN,aAAc,gCACdrF,UAAW,iBACVzJ,EAAAA,cAAoB+N,EAAY5G,KAAM,CACvC4H,wBAAyB,CACvBC,OAAQ,uaAEP,uBAAwB,KAAMhP,EAAAA,cAAoB0M,IAAsC,KAAM1M,EAAAA,cAAoB+N,EAAYK,GAAI,CACrI5K,GAAI,UACJoL,MAAO,CACLC,SAAU,aAEX7O,EAAAA,cAAoB+N,EAAYM,EAAG,CACpCS,KAAM,WACN,aAAc,oBACdrF,UAAW,iBACVzJ,EAAAA,cAAoB+N,EAAY5G,KAAM,CACvC4H,wBAAyB,CACvBC,OAAQ,uaAEP,WAAY,KAAMhP,EAAAA,cAAoB6M,IAA2B,KAAM7M,EAAAA,cAAoB+N,EAAYI,IAAK,KAAMnO,EAAAA,cAAoBgN,IAA0B,KAAMhN,EAAAA,cAAoB+N,EAAYK,GAAI,CAC7M5K,GAAI,UACJoL,MAAO,CACLC,SAAU,aAEX7O,EAAAA,cAAoB+N,EAAYM,EAAG,CACpCS,KAAM,WACN,aAAc,oBACdrF,UAAW,iBACVzJ,EAAAA,cAAoB+N,EAAY5G,KAAM,CACvC4H,wBAAyB,CACvBC,OAAQ,uaAEP,WAAY,KAAMhP,EAAAA,cAAoB+N,EAAYE,EAAG,KAAM,gDAAiDjO,EAAAA,cAAoB+N,EAAYG,OAAQ,KAAM,SAAU,QAASlO,EAAAA,cAAoB+N,EAAYG,OAAQ,KAAM,QAAS,UAAWlO,EAAAA,cAAoB+N,EAAYG,OAAQ,KAAM,WAAY,aAAc,KAAMlO,EAAAA,cAAoBwN,IACxV,CAKA,OAJA,SAAoBlP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAO2Q,QAASC,GAAarF,OAAOC,OAAO,CAAC,GAAGwE,EAAAA,EAAAA,MAAsBhQ,EAAMiQ,YAC3E,OAAOW,EAAYlP,EAAAA,cAAoBkP,EAAW5Q,EAAO0B,EAAAA,cAAoB8N,GAAmBxP,IAAUwP,GAAkBxP,EAC9H,E,+CClHO,MAAM6Q,GAAyB7Q,IACpC,MAAM,SAAEC,KAAamL,GAAcpL,EAEnC,OACE0B,EAAAA,cAAA,OAAA6J,OAAAC,OAAA,CACEsF,OAAQzB,EAAAA,EAAK0B,mBACbC,OAAO,OACPC,OAAO,UACH7F,GAEHnL,EACI,E,2DCHJ,MAaMiR,GAAQlR,IACnB,MAAM,KAAEmR,EAAI,YAAEC,GAAgBpR,GACxB,QAAEqR,EAAO,OAAEC,IAAWC,EAAAA,GAAAA,MACtB,MAAEC,EAAQ,GAAE,YAAEC,EAAW,KAAEC,GAASP,EAAKQ,IAAIC,YAC7CC,GAAkBpQ,EAAAA,EAAAA,UACtB,IAAM,IAAIqQ,KAAQJ,EAAI,QAAQK,eAC9B,CAACL,IAGH,OACEhQ,EAAAA,cAACsQ,GAAAA,EAAG,CACFR,MAAOA,EACPC,YAAaA,EACbQ,IAAG,GAAKZ,EAAUD,EAAYc,MAE9BxQ,EAAAA,cAAA,UAAQgK,KAAK,uBAAqB,4GAKrByG,EAAAA,GAAAA,GAAed,GAAQ,+BAChBI,EAAW,uBACnBJ,EAAUD,EAAYc,KAAI,4BACrBV,EAAK,yBACRH,EAAO,iDACCQ,EAAe,gCAChBA,EAAe,6EAGrBP,EAAM,iGAINA,EAAM,gJAKLD,EAAUe,GAAAA,EAAQ,4CAM9B,ECjEV,MAEMC,GAAgBrS,IACpB,MAAM,YAACoR,EAAW,SAAEnR,GAAYD,GAC1B,KAACsS,EAAI,SAAEC,EAAQ,SAAEC,EAAQ,GAAEtN,GAAMkM,EACvC,OAAO1P,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB+Q,GAAAA,EAAiB,CACpFvN,GAAIA,IACFxD,EAAAA,cAAoB3B,EAA2B,KAAM2B,EAAAA,cAAoBmP,GAAuB,CAClG3L,GAAIwN,GAAAA,GACHhR,EAAAA,cAAoBiR,GAAAA,EAAK,KAAM1S,KAAayB,EAAAA,cAAoBkR,GAAAA,EAAkB,CACnFC,QAASL,IACP9Q,EAAAA,cAAoBoR,GAAAA,EAAgB,CACtCP,SAAUA,EACVD,KAAMA,IACL,EAGU,SAASS,GAAiB/S,GACvC,OAAO0B,EAAAA,cAAoB2Q,GAAerS,EAAO0B,EAAAA,cAAoBsR,GAAqBhT,GAC5F,C","sources":["webpack://embla-carousel-docs/./src/utils/numberWithinRange.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorContext.tsx","webpack://embla-carousel-docs/./src/hooks/useCarouselGenerator.ts","webpack://embla-carousel-docs/./src/consts/carouselGenerator.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/carouselGeneratorToggleFeatures.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/createCarouselGeneratorStyles.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/createCarouselGeneratorOptions.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/createCarouselGeneratorPlugins.ts","webpack://embla-carousel-docs/./src/components/Examples/CarouselGenerator/CarouselGeneratorSandboxes.ts","webpack://embla-carousel-docs/./src/utils/camelOrPascalToKebabCase.ts","webpack://embla-carousel-docs/./src/utils/carouselGenerator.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorFrameworkSettings.tsx","webpack://embla-carousel-docs/./src/components/Input/InputCheckbox.tsx","webpack://embla-carousel-docs/./src/components/Input/InputText.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorFormItems.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorBasicSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSlidesSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorAlignmentSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorNavigationSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorPlugins.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSubmit.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSupport.tsx","webpack://embla-carousel-docs/./src/content/pages/examples/generator.mdx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorForm.tsx","webpack://embla-carousel-docs/./src/templates/Default.tsx","webpack://embla-carousel-docs/./src/templates/Generator.tsx"],"sourcesContent":["export const numberWithinRange = (\n  number: number,\n  min: number,\n  max: number\n): number => Math.min(Math.max(number, min), max)\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { numberWithinRange } from 'utils/numberWithinRange'\n\nexport const CONTEXT_DEFAULT_VALUE: CarouselGeneratorContextType = {\n  formData: {\n    framework: '',\n    loop: false,\n    dragFree: false,\n    axis: 'x',\n    direction: 'ltr',\n    accessibility: false,\n    slideSize: '100',\n    slideGapSize: '10',\n    edgeGap: '0',\n    align: 'center',\n    containScroll: true,\n    navigationPrevNextButtons: false,\n    navigationDots: false,\n    autoplay: false,\n    wheelGestures: false\n  },\n  onChange: () => undefined,\n  onCheckboxChange: () => undefined,\n  onRadioChange: () => undefined,\n  onNumberChange: () => undefined,\n  onNumberBlur: () => undefined\n}\n\nexport type CarouselGeneratorContextType = {\n  formData: CarouselGeneratorFormDataType\n  onChange: <Key extends keyof CarouselGeneratorFormDataType>(\n    key: Key,\n    value: CarouselGeneratorFormDataType[Key]\n  ) => void\n  onCheckboxChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onRadioChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onNumberChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onNumberBlur: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const CarouselGeneratorContext =\n  createContext<CarouselGeneratorContextType>(CONTEXT_DEFAULT_VALUE)\n\ntype PropType = PropsWithChildren<{}>\n\nexport const CarouselGeneratorProvider = (props: PropType) => {\n  const { children } = props\n  const [formData, setFormData] = useState<CarouselGeneratorFormDataType>(\n    CONTEXT_DEFAULT_VALUE.formData\n  )\n\n  const onChange: CarouselGeneratorContextType['onChange'] = useCallback(\n    (key, value) => {\n      setFormData((currentFormValues) => ({\n        ...currentFormValues,\n        [key]: value\n      }))\n    },\n    []\n  )\n\n  const onCheckboxChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, checked } = event.currentTarget\n      const fieldName = name as keyof CarouselGeneratorFormDataType\n\n      onChange(fieldName, checked)\n    },\n    [onChange]\n  )\n\n  const onRadioChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget\n      const fieldName = name as keyof CarouselGeneratorFormDataType\n\n      onChange(fieldName, value)\n    },\n    [onChange]\n  )\n\n  const onNumberChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget\n      const fieldName = name as keyof CarouselGeneratorFormDataType\n\n      onChange(fieldName, value)\n    },\n    [onChange]\n  )\n\n  const onNumberBlur = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const input = event.currentTarget\n      const fieldName = input.name as keyof CarouselGeneratorFormDataType\n      const minValue = parseInt(input.getAttribute('min') || '', 10)\n      const maxValue = parseInt(input.getAttribute('max') || '', 10)\n      const value = numberWithinRange(\n        parseFloat(input.value || '0'),\n        minValue,\n        maxValue\n      )\n\n      onChange(fieldName, value.toString())\n    },\n    [onChange]\n  )\n\n  const value = useMemo(\n    () => ({\n      formData,\n      onChange,\n      onCheckboxChange,\n      onRadioChange,\n      onNumberChange,\n      onNumberBlur\n    }),\n    [\n      formData,\n      onChange,\n      onCheckboxChange,\n      onRadioChange,\n      onNumberChange,\n      onNumberBlur\n    ]\n  )\n\n  return (\n    <CarouselGeneratorContext.Provider value={value}>\n      {children}\n    </CarouselGeneratorContext.Provider>\n  )\n}\n","import { useContext } from 'react'\nimport {\n  CarouselGeneratorContext,\n  CarouselGeneratorContextType\n} from 'components/CarouselGenerator/CarouselGeneratorContext'\n\nexport const useCarouselGenerator = (): CarouselGeneratorContextType =>\n  useContext(CarouselGeneratorContext)\n","import { EmblaOptionsType } from 'embla-carousel'\nimport { SandboxLabelKeyType } from 'consts/sandbox'\n\nexport type CarouselGeneratorFormDataType = {\n  framework: SandboxLabelKeyType | ''\n  loop: boolean\n  dragFree: boolean\n  axis: Extract<EmblaOptionsType['axis'], 'x' | 'y'>\n  direction: Extract<EmblaOptionsType['direction'], 'ltr' | 'rtl'>\n  accessibility: boolean\n  slideSize: string\n  slideGapSize: string\n  edgeGap: string\n  align: Extract<EmblaOptionsType['align'], 'start' | 'center' | 'end'>\n  containScroll: boolean\n  navigationPrevNextButtons: boolean\n  navigationDots: boolean\n  autoplay: boolean\n  wheelGestures: boolean\n}\n\nexport const CAROUSEL_GENERATOR_FORM_FIELDS = <const>{\n  FRAMEWORK: 'framework',\n  LOOP: 'loop',\n  DRAG_FREE: 'dragFree',\n  AXIS: 'axis',\n  DIRECTION: 'direction',\n  ACCESSIBILITY: 'accessibility',\n  SLIDE_SIZE: 'slideSize',\n  SLIDE_GAP_SIZE: 'slideGapSize',\n  EDGE_GAP: 'edgeGap',\n  ALIGN: 'align',\n  CONTAIN_SCROLL: 'containScroll',\n  NAVIGATION_PREV_NEXT_BUTTONS: 'navigationPrevNextButtons',\n  NAVIGATION_DOTS: 'navigationDots',\n  AUTOPLAY: 'autoplay',\n  WHEEL_GESTURES: 'wheelGestures'\n}\n\nexport const CAROUSEL_GENERATOR_FORM_PREFIX = 'carousel-generator-form'\n","import { SandboxModuleType } from 'consts/sandbox'\nimport { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\n\nconst START = '{?\\\\/\\\\*'\nconst END = '\\\\*\\\\/}?'\nconst MIDDLE = `${END}([\\\\s\\\\S]*?)${START}`\n\nconst carouselGeneratorToggleFeature = (\n  featureLabel: string,\n  featureActive: boolean,\n  carouselScript: string\n): string => {\n  let regexString = ''\n\n  if (featureActive) {\n    regexString = `(${START}__${featureLabel}_REPLACE_START__${END}\\n?)|(${START}__${featureLabel}_REPLACE_END__${END}\\n?)`\n  } else {\n    regexString = `${START}__${featureLabel}_REPLACE_START__${MIDDLE}__${featureLabel}_REPLACE_END__${END}\\n?`\n  }\n\n  const regex = new RegExp(regexString, 'g')\n  return carouselScript.replace(regex, '')\n}\n\nexport const carouselGeneratorToggleFeatures = (\n  carouselScript: SandboxModuleType,\n  settings: CarouselGeneratorFormDataType\n): string => {\n  let carouselScriptWithFeatures = carouselScript.default\n  const {\n    axis,\n    navigationPrevNextButtons,\n    navigationDots,\n    autoplay,\n    direction\n  } = settings\n  const hasNavigation = navigationPrevNextButtons || navigationDots\n  const hasAutoplayAndNavigation = autoplay && hasNavigation\n  const isHorizontal = axis === 'x'\n  const isLeftToRight = direction === 'ltr'\n  const isRightToLeft = !isLeftToRight\n\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS',\n    navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'DOT_BUTTONS',\n    navigationDots,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PLUGINS',\n    autoplay,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'NAV_AUTOPLAY',\n    hasAutoplayAndNavigation,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'DIRECTION_RTL',\n    isRightToLeft,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'DIRECTION_LTR',\n    isLeftToRight,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS_LTR',\n    isHorizontal && isLeftToRight && navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS_RTL',\n    isHorizontal && isRightToLeft && navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS_VERTICAL',\n    !isHorizontal && navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = carouselGeneratorToggleFeature(\n    'AUTOPLAY',\n    autoplay,\n    carouselScriptWithFeatures\n  )\n\n  return carouselScriptWithFeatures\n}\n","import { FlattenSimpleInterpolation } from 'styled-components'\nimport { styledComponentsStylesToString } from 'utils/styledComponentStylesToString'\nimport { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport {\n  ARROWS_STYLES,\n  createCarouselDefaultStyles,\n  DOTS_STYLES\n} from 'components/Examples/createCarouselStyles'\n\nexport const createCarouselGeneratorStyles = (\n  settings: CarouselGeneratorFormDataType\n): string => {\n  const {\n    navigationPrevNextButtons,\n    navigationDots,\n    slideSize,\n    slideGapSize,\n    axis\n  } = settings\n  const styleList: FlattenSimpleInterpolation[] = []\n\n  if (navigationPrevNextButtons) styleList.push(ARROWS_STYLES)\n  if (navigationDots) styleList.push(DOTS_STYLES)\n\n  return createCarouselDefaultStyles(\n    `${slideSize}%`,\n    `${parseFloat(slideGapSize) / 10}rem`,\n    axis,\n    styleList.map((styles) => styledComponentsStylesToString(styles)).join('')\n  )\n}\n","import { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { EmblaOptionsType } from 'embla-carousel'\n\nexport const createCarouselGeneratorOptions = (\n  settings: CarouselGeneratorFormDataType\n): EmblaOptionsType => {\n  const { axis, align, direction, containScroll, loop, dragFree } = settings\n\n  return {\n    ...(axis !== 'x' && { axis }),\n    ...(align !== 'center' && { align }),\n    ...(dragFree && { dragFree }),\n    ...(direction !== 'ltr' && axis === 'x' && { direction }),\n    ...(!loop && containScroll && { containScroll: 'trimSnaps' }),\n    ...(loop && { loop })\n  }\n}\n","import { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { addSandboxPlugins } from 'utils/sandbox'\nimport {\n  SandboxPluginNameType,\n  SandboxPluginsType,\n  SANDBOX_PLUGINS\n} from 'consts/sandbox'\n\nexport const createCarouselGeneratorPlugins = (\n  settings: CarouselGeneratorFormDataType\n): SandboxPluginsType | undefined => {\n  const pluginList: SandboxPluginNameType[] = []\n\n  if (settings.autoplay) pluginList.push(SANDBOX_PLUGINS.AUTOPLAY)\n\n  return addSandboxPlugins(pluginList).plugins\n}\n","import { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { carouselGeneratorToggleFeatures } from 'components/CarouselGenerator/carouselGeneratorToggleFeatures'\nimport { createCarouselGeneratorStyles } from 'components/CarouselGenerator/createCarouselGeneratorStyles'\nimport { createCarouselGeneratorOptions } from 'components/CarouselGenerator/createCarouselGeneratorOptions'\nimport { createCarouselGeneratorPlugins } from 'components/CarouselGenerator/createCarouselGeneratorPlugins'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { createSandboxReact } from 'components/Sandbox/React/createSandboxReact'\nimport { createSandboxVanilla } from 'components/Sandbox/Vanilla/createSandboxVanilla'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SANDBOX_REACT_FOLDERS } from 'components/Sandbox/React/sandboxReactFolders'\nimport { SANDBOX_VANILLA_FOLDERS } from 'components/Sandbox/Vanilla/sandboxVanillaFolders'\nimport {\n  SandboxLanguageType,\n  SandboxModuleType,\n  SandboxSelectionType,\n  SANDBOX_LANGUAGES\n} from 'consts/sandbox'\nimport {\n  createSandboxFunctionsWithLabels,\n  sandboxLanguageUtils\n} from 'utils/sandbox'\n\nconst ID = 'embla-carousel-generator'\nconst DEFAULT_SETTINGS = CONTEXT_DEFAULT_VALUE.formData\nconst SLIDES = arrayFromNumber(5)\n\nconst VANILLA_ARROW_BUTTONS_FILE_NAME = 'arrow-buttons'\nconst VANILLA_DOT_BUTTON_FILE_NAME = 'dot-buttons'\n\nconst REACT_ARROW_BUTTONS_FILE_NAME = 'EmblaCarouselArrowButtons'\nconst REACT_DOT_BUTTON_FILE_NAME = 'EmblaCarouselDotButton'\n\nconst sandboxVanilla = async (\n  settings: CarouselGeneratorFormDataType = DEFAULT_SETTINGS,\n  language: SandboxLanguageType\n): Promise<string> => {\n  const { isTypeScript, vanillaScriptExtension, formatScript } =\n    await sandboxLanguageUtils(language)\n  let carouselScript: SandboxModuleType\n  let arrowButtonsScript: SandboxModuleType\n  let dotButtonScript: SandboxModuleType\n\n  const carouselHtml = await import(\n    '!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/embla-carousel.html'\n  )\n\n  if (isTypeScript) {\n    carouselScript = await import(\n      '!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/EmblaCarousel.ts'\n    )\n    arrowButtonsScript = await import(\n      `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/arrow-buttons.ts`\n    )\n    dotButtonScript = await import(\n      `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/dot-buttons.ts`\n    )\n  } else {\n    carouselScript = await import(\n      '!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/EmblaCarousel.js'\n    )\n    arrowButtonsScript = await import(\n      `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/arrow-buttons.js`\n    )\n    dotButtonScript = await import(\n      `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/CarouselGenerator/dot-buttons.js`\n    )\n  }\n\n  return createSandboxVanilla({\n    id: ID,\n    language,\n    options: createCarouselGeneratorOptions(settings),\n    styles: createCarouselGeneratorStyles(settings),\n    carouselScript: carouselGeneratorToggleFeatures(carouselScript, settings),\n    plugins: createCarouselGeneratorPlugins(settings),\n    carouselHtml: carouselGeneratorToggleFeatures(carouselHtml, settings),\n    sandboxOverrides: {\n      ...(settings.navigationPrevNextButtons && {\n        [`${SANDBOX_VANILLA_FOLDERS.JS}/${VANILLA_ARROW_BUTTONS_FILE_NAME}.${vanillaScriptExtension}`]:\n          {\n            isBinary: false,\n            content: formatScript(\n              carouselGeneratorToggleFeatures(arrowButtonsScript, settings)\n            )\n          }\n      }),\n      ...(settings.navigationDots && {\n        [`${SANDBOX_VANILLA_FOLDERS.JS}/${VANILLA_DOT_BUTTON_FILE_NAME}.${vanillaScriptExtension}`]:\n          {\n            isBinary: false,\n            content: formatScript(\n              carouselGeneratorToggleFeatures(dotButtonScript, settings)\n            )\n          }\n      })\n    }\n  })\n}\n\nconst sandboxReact = async (\n  settings: CarouselGeneratorFormDataType = DEFAULT_SETTINGS,\n  language: SandboxLanguageType\n): Promise<string> => {\n  const { isTypeScript, reactScriptExtension, formatScript } =\n    await sandboxLanguageUtils(language)\n  let carouselScript: SandboxModuleType\n  let arrowButtonsScript: SandboxModuleType\n  let dotButtonScript: SandboxModuleType\n\n  if (isTypeScript) {\n    carouselScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarousel.tsx`\n    )\n    arrowButtonsScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarouselArrowButtons.tsx`\n    )\n    dotButtonScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarouselDotButton.tsx`\n    )\n  } else {\n    carouselScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarousel.jsx`\n    )\n    arrowButtonsScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarouselArrowButtons.jsx`\n    )\n    dotButtonScript = await import(\n      `!!raw-loader!components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarouselDotButton.jsx`\n    )\n  }\n\n  return createSandboxReact({\n    id: ID,\n    language,\n    slides: SLIDES,\n    options: createCarouselGeneratorOptions(settings),\n    styles: createCarouselGeneratorStyles(settings),\n    carouselScript: carouselGeneratorToggleFeatures(carouselScript, settings),\n    plugins: createCarouselGeneratorPlugins(settings),\n    sandboxOverrides: {\n      ...(settings.navigationPrevNextButtons && {\n        [`${SANDBOX_REACT_FOLDERS.JS}/${REACT_ARROW_BUTTONS_FILE_NAME}.${reactScriptExtension}`]:\n          {\n            isBinary: false,\n            content: formatScript(\n              carouselGeneratorToggleFeatures(arrowButtonsScript, settings)\n            )\n          }\n      }),\n      ...(settings.navigationDots && {\n        [`${SANDBOX_REACT_FOLDERS.JS}/${REACT_DOT_BUTTON_FILE_NAME}.${reactScriptExtension}`]:\n          {\n            isBinary: false,\n            content: formatScript(\n              carouselGeneratorToggleFeatures(dotButtonScript, settings)\n            )\n          }\n      })\n    }\n  })\n}\n\nexport const SANDBOXES: SandboxSelectionType<CarouselGeneratorFormDataType>[] =\n  createSandboxFunctionsWithLabels({\n    VANILLA_JS: (settings?: CarouselGeneratorFormDataType) =>\n      sandboxVanilla(settings, SANDBOX_LANGUAGES.JAVASCRIPT),\n    VANILLA_TS: (settings?: CarouselGeneratorFormDataType) =>\n      sandboxVanilla(settings, SANDBOX_LANGUAGES.TYPESCRIPT),\n    REACT_JS: (settings?: CarouselGeneratorFormDataType) =>\n      sandboxReact(settings, SANDBOX_LANGUAGES.JAVASCRIPT),\n    REACT_TS: (settings?: CarouselGeneratorFormDataType) =>\n      sandboxReact(settings, SANDBOX_LANGUAGES.TYPESCRIPT)\n  })\n","export const camelOrPascalToKebabCase = (\n  string: string = '',\n  separator: string = ''\n): string => {\n  return string\n    .split('')\n    .map((letter, idx) => {\n      return letter.toUpperCase() === letter\n        ? `${idx !== 0 ? '-' : ''}${letter.toLowerCase()}`\n        : letter\n    })\n    .join(separator)\n}\n","import { camelOrPascalToKebabCase } from './camelOrPascalToKebabCase'\nimport {\n  CarouselGeneratorFormDataType,\n  CAROUSEL_GENERATOR_FORM_PREFIX\n} from 'consts/carouselGenerator'\n\ntype CarouselGeneratorInputIdType<\n  Key extends keyof CarouselGeneratorFormDataType\n> = {\n  ID: string\n  FIELD_NAME: Key\n}\n\nexport type CarouselGeneratorRadioType<\n  Key extends keyof CarouselGeneratorFormDataType\n> = CarouselGeneratorInputIdType<Key> & {\n  OPTIONS: {\n    LABEL: string\n    VALUE: CarouselGeneratorFormDataType[Key]\n  }[]\n}\n\nexport type CarouselGeneratorCheckboxType<\n  Key extends keyof CarouselGeneratorFormDataType\n> = CarouselGeneratorInputIdType<Key> & {\n  LABEL: string\n}\n\nexport type CarouselGeneratorInputTextType<\n  Key extends keyof CarouselGeneratorFormDataType\n> = CarouselGeneratorInputIdType<Key> & {\n  LABEL: string\n}\n\nexport const createCarouselGeneratorInputId = <\n  Key extends keyof CarouselGeneratorFormDataType\n>(\n  fieldName: Key\n): CarouselGeneratorInputIdType<Key> => {\n  return {\n    FIELD_NAME: fieldName,\n    ID: `${CAROUSEL_GENERATOR_FORM_PREFIX}-${camelOrPascalToKebabCase(\n      fieldName\n    )}`\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport { SANDBOXES } from 'components/Examples/CarouselGenerator/CarouselGeneratorSandboxes'\nimport { SandboxSelectionInput } from 'components/Sandbox/SandboxSelectionInput'\nimport { snakeCaseToKebabCase } from 'utils/snakeCaseToKebabCase'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { SANDBOX_SELECTION_SPACING } from 'consts/sandbox'\nimport {\n  CarouselGeneratorRadioType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_FRAMEWORK: CarouselGeneratorRadioType<'framework'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.FRAMEWORK),\n  OPTIONS: []\n}\n\nconst SandboxSelectionList = styled.ul`\n  ${createGapStyles(\n    SANDBOX_SELECTION_SPACING,\n    SANDBOX_SELECTION_SPACING,\n    'li'\n  )};\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(14rem, 1fr));\n`\n\nexport const CarouselGeneratorFrameworkSettings = () => {\n  const { formData, onRadioChange } = useCarouselGenerator()\n\n  return (\n    <div>\n      <SandboxSelectionList role=\"radiogroup\" aria-label={INPUT_FRAMEWORK.ID}>\n        {SANDBOXES.map((sandbox) => (\n          <li key={sandbox.key}>\n            <SandboxSelectionInput\n              framework={sandbox.key}\n              name={INPUT_FRAMEWORK.FIELD_NAME}\n              id={`${INPUT_FRAMEWORK.ID}-${snakeCaseToKebabCase(sandbox.key)}`}\n              value={sandbox.key}\n              onChange={onRadioChange}\n              checked={formData[INPUT_FRAMEWORK.FIELD_NAME] === sandbox.key}\n            >\n              {sandbox.label}\n            </SandboxSelectionInput>\n          </li>\n        ))}\n      </SandboxSelectionList>\n    </div>\n  )\n}\n","import { createRadioOrCheckboxDefault } from './createRadioOrCheckboxDefault'\nimport { createRadioOrCheckboxCard } from './createRadioOrCheckboxCard'\n\nexport const InputCheckboxDefault = createRadioOrCheckboxDefault('checkbox')\n\nexport const InputCheckboxCard = createRadioOrCheckboxCard('checkbox')\n","import React, { PropsWithRef } from 'react'\nimport styled, { css } from 'styled-components'\nimport { BORDER_RADIUSES, BORDER_SIZES } from 'consts/border'\nimport { COLORS } from 'consts/themes'\nimport { useKeyNavigating } from 'hooks/useKeyNavigating'\nimport { SPACINGS } from 'consts/spacings'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { LAYERS } from 'consts/layers'\nimport { BRAND_GRADIENT_BACKGROUND_STYLES } from 'consts/gradients'\nimport { TAP_HIGHLIGHT_STYLES } from 'consts/tapHighlight'\nimport { KEY_NAVIGATING_STYLES } from 'consts/keyNavigatingStyles'\n\nconst HEIGHT = SPACINGS.EIGHT\nconst SIDES_PADDING = SPACINGS.THREE\nconst INPUT_RADIUS = BORDER_RADIUSES.BOX\n\nconst InputTextWrapper = styled.span`\n  height: ${HEIGHT};\n  border-radius: ${INPUT_RADIUS};\n  border: ${BORDER_SIZES.DETAIL} solid ${COLORS.DETAIL_LOW_CONTRAST};\n  background-color: ${COLORS.BACKGROUND_CODE};\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst labelActiveStyles = css`\n  transform: translateY(calc(-100% / 2)) scale(0.8);\n`\n\nconst Label = styled.label`\n  z-index: ${LAYERS.STEP};\n  left: ${SIDES_PADDING};\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  position: absolute;\n  top: 0;\n  pointer-events: none;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  transition: transform 0.2s;\n  transform-origin: center left;\n`\n\nconst labelTextActiveStyles = css`\n  background-color: ${COLORS.BACKGROUND_CODE};\n  border: ${BORDER_SIZES.DETAIL} solid ${COLORS.DETAIL_LOW_CONTRAST};\n`\n\nconst LabelText = styled.span`\n  padding-left: ${SPACINGS.ONE};\n  padding-right: ${SPACINGS.ONE};\n  border-radius: ${INPUT_RADIUS};\n  z-index: ${LAYERS.STEP};\n  display: flex;\n  position: relative;\n  align-items: center;\n`\n\nconst Highlight = styled.span`\n  ${BRAND_GRADIENT_BACKGROUND_STYLES};\n  top: -${BORDER_SIZES.DETAIL};\n  left: -${BORDER_SIZES.DETAIL};\n  bottom: -${BORDER_SIZES.DETAIL};\n  right: -${BORDER_SIZES.DETAIL};\n  display: block;\n  position: absolute;\n  border-radius: inherit;\n  pointer-events: none;\n  visibility: hidden;\n\n  &:after {\n    background-color: ${COLORS.BACKGROUND_CODE};\n    border-radius: inherit;\n    position: absolute;\n    top: ${BORDER_SIZES.OUTLINE};\n    left: ${BORDER_SIZES.OUTLINE};\n    bottom: ${BORDER_SIZES.OUTLINE};\n    right: ${BORDER_SIZES.OUTLINE};\n    content: '';\n  }\n`\n\nconst Input = styled.input<{\n  $isKeyNavigating: boolean\n  $inputHasValue: boolean\n}>`\n  ${TAP_HIGHLIGHT_STYLES};\n  ${KEY_NAVIGATING_STYLES};\n  z-index: ${LAYERS.STEP};\n  height: calc(100% - ${BORDER_SIZES.DETAIL} * 2);\n  width: calc(100% - ${BORDER_SIZES.DETAIL} * 2);\n  color: ${COLORS.TEXT_BODY};\n  font-size: ${FONT_SIZES.BODY};\n  padding: 0 ${SIDES_PADDING};\n  background-color: transparent;\n  appearance: none;\n  -webkit-appearance: none;\n  border-radius: inherit;\n  border: 0;\n\n  &:focus + ${Highlight} + ${Label} {\n    ${labelActiveStyles};\n\n    > ${LabelText} {\n      ${labelTextActiveStyles};\n    }\n  }\n\n  &:focus + ${Highlight} {\n    visibility: visible;\n  }\n\n  ${({ $inputHasValue }) =>\n    $inputHasValue &&\n    css`\n      & + ${Highlight} + ${Label} {\n        ${labelActiveStyles};\n\n        > ${LabelText} {\n          ${labelTextActiveStyles};\n        }\n      }\n    `};\n`\n\ntype PropType = PropsWithRef<\n  React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >\n>\n\nexport const InputText = (props: PropType) => {\n  const { children, className, ...restProps } = props\n  const { isKeyNavigating } = useKeyNavigating()\n\n  return (\n    <InputTextWrapper className={className}>\n      <Input\n        $isKeyNavigating={isKeyNavigating}\n        $inputHasValue={!!restProps.value}\n        type=\"text\"\n        {...restProps}\n      />\n      <Highlight />\n      <Label>\n        <LabelText>{children}</LabelText>\n      </Label>\n    </InputTextWrapper>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { SPACINGS } from 'consts/spacings'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { MEDIA } from 'consts/breakpoints'\nimport { InputText } from 'components/Input/InputText'\n\nexport const FORM_INPUT_TEXT_MAX_SIZE = '26rem'\n\nexport const FORM_ITEM_SPACING_X = SPACINGS.FOUR\nexport const FORM_ITEM_SPACING_Y = SPACINGS.TWO\n\nexport const FORM_ITEMS_GAP_STYLES = createGapStyles(\n  FORM_ITEM_SPACING_X,\n  FORM_ITEM_SPACING_Y,\n  '*'\n)\n\nexport const FORM_ITEM_MAX_WIDTH_STYLES = css`\n  width: 100%;\n\n  ${MEDIA.MIN_XS} {\n    max-width: 100%;\n    width: ${FORM_INPUT_TEXT_MAX_SIZE};\n  }\n`\n\nexport const CarouselGeneratorFormItems = styled.div`\n  ${FORM_ITEMS_GAP_STYLES};\n  margin-bottom: calc(${FORM_ITEM_SPACING_X} - ${FORM_ITEM_SPACING_Y});\n  display: flex;\n  flex-wrap: wrap;\n`\n\nexport const CarouselGeneratorFormItem = styled.div`\n  margin-bottom: ${FORM_ITEM_SPACING_X};\n`\n\nexport const CarouselGeneratorInputText = styled(InputText)`\n  ${FORM_ITEM_MAX_WIDTH_STYLES};\n`\n","import React from 'react'\nimport { InputRadioDefault } from 'components/Input/InputRadio'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport {\n  CarouselGeneratorCheckboxType,\n  CarouselGeneratorRadioType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorFormItems\n} from './CarouselGeneratorFormItems'\n\nconst INPUT_AXIS: CarouselGeneratorRadioType<'axis'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.AXIS),\n  OPTIONS: [\n    { LABEL: 'Horizontal', VALUE: 'x' },\n    { LABEL: 'Vertical', VALUE: 'y' }\n  ]\n}\n\nconst INPUT_DIRECTION: CarouselGeneratorRadioType<'direction'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.DIRECTION),\n  OPTIONS: [\n    { LABEL: 'Left to right', VALUE: 'ltr' },\n    { LABEL: 'Right to left', VALUE: 'rtl' }\n  ]\n}\n\nconst INPUT_LOOP: CarouselGeneratorCheckboxType<'loop'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.LOOP),\n  LABEL: 'Loop'\n}\n\nconst INPUT_DRAG_FREE: CarouselGeneratorCheckboxType<'dragFree'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.DRAG_FREE),\n  LABEL: 'Drag free'\n}\n\nconst INPUT_ACCESSIBILITY: CarouselGeneratorCheckboxType<'accessibility'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.ACCESSIBILITY\n  ),\n  LABEL: 'Accessibility (under development)'\n}\n\nexport const CarouselGeneratorBasicSettings = () => {\n  const { formData, onCheckboxChange, onRadioChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItems role=\"radiogroup\" aria-label={INPUT_AXIS.ID}>\n        {INPUT_AXIS.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={VALUE}>\n            <InputRadioDefault\n              name={INPUT_AXIS.FIELD_NAME}\n              id={`${INPUT_AXIS.ID}-${VALUE}`}\n              value={VALUE}\n              checked={formData[INPUT_AXIS.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      <CarouselGeneratorFormItems\n        role=\"radiogroup\"\n        aria-label={INPUT_DIRECTION.ID}\n      >\n        {INPUT_DIRECTION.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={VALUE}>\n            <InputRadioDefault\n              name={INPUT_DIRECTION.FIELD_NAME}\n              id={`${INPUT_DIRECTION.ID}-${VALUE}`}\n              value={VALUE}\n              checked={formData[INPUT_DIRECTION.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_LOOP.FIELD_NAME}\n          id={INPUT_LOOP.ID}\n          checked={formData[INPUT_LOOP.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_LOOP.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_DRAG_FREE.FIELD_NAME}\n          id={INPUT_DRAG_FREE.ID}\n          checked={formData[INPUT_DRAG_FREE.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_DRAG_FREE.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_ACCESSIBILITY.FIELD_NAME}\n          id={INPUT_ACCESSIBILITY.ID}\n          checked={formData[INPUT_ACCESSIBILITY.FIELD_NAME]}\n          onChange={onCheckboxChange}\n          disabled\n        >\n          {INPUT_ACCESSIBILITY.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React from 'react'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorInputText\n} from './CarouselGeneratorFormItems'\nimport {\n  CarouselGeneratorInputTextType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_SLIDE_SIZE: CarouselGeneratorInputTextType<'slideSize'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.SLIDE_SIZE),\n  LABEL: 'Slide size (%)'\n}\n\nconst INPUT_SLIDE_GAP_SIZE: CarouselGeneratorInputTextType<'slideGapSize'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.SLIDE_GAP_SIZE\n  ),\n  LABEL: 'Slide gaps (px)'\n}\n\nexport const CarouselGeneratorSlidesSettings = () => {\n  const { formData, onNumberChange, onNumberBlur } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <CarouselGeneratorInputText\n          type=\"number\"\n          min=\"10\"\n          max=\"100\"\n          name={INPUT_SLIDE_SIZE.FIELD_NAME}\n          id={INPUT_SLIDE_SIZE.ID}\n          value={formData[INPUT_SLIDE_SIZE.FIELD_NAME]}\n          onChange={onNumberChange}\n          onBlur={onNumberBlur}\n        >\n          {INPUT_SLIDE_SIZE.LABEL}\n        </CarouselGeneratorInputText>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <CarouselGeneratorInputText\n          type=\"number\"\n          min=\"0\"\n          max=\"20\"\n          name={INPUT_SLIDE_GAP_SIZE.FIELD_NAME}\n          id={INPUT_SLIDE_GAP_SIZE.ID}\n          value={formData[INPUT_SLIDE_GAP_SIZE.FIELD_NAME]}\n          onChange={onNumberChange}\n          onBlur={onNumberBlur}\n        >\n          {INPUT_SLIDE_GAP_SIZE.LABEL}\n        </CarouselGeneratorInputText>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport CarouselDefault from 'components/Sandbox/React/SandboxFilesSrc/Default/EmblaCarousel'\nimport { InputRadioDefault } from 'components/Input/InputRadio'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport { createCarouselDefaultStyles } from 'components/Examples/createCarouselStyles'\nimport { Admonition } from 'components/Mdx/Components/Admonition'\nimport { BRAND_GRADIENT_BACKGROUND_STYLES } from 'consts/gradients'\nimport { BORDER_RADIUSES, BORDER_SIZES } from 'consts/border'\nimport { LAYERS } from 'consts/layers'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { useInView } from 'react-intersection-observer'\nimport { SPACINGS } from 'consts/spacings'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport {\n  carouselDefaultWrapperStyles,\n  CAROUSEL_SLIDES_SPACING,\n  CAROUSEL_WRAPPER_SPACING\n} from 'components/Examples/carouselWrapperStyles'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorFormItems\n} from './CarouselGeneratorFormItems'\nimport {\n  CarouselGeneratorCheckboxType,\n  CarouselGeneratorRadioType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_ALIGN: CarouselGeneratorRadioType<'align'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.ALIGN),\n  OPTIONS: [\n    { LABEL: 'Start', VALUE: 'start' },\n    { LABEL: 'Center', VALUE: 'center' },\n    { LABEL: 'End', VALUE: 'end' }\n  ]\n}\n\nconst INPUT_CONTAIN_SCROLL: CarouselGeneratorCheckboxType<'containScroll'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.CONTAIN_SCROLL\n  ),\n  LABEL: 'Clear leading and trailing space'\n}\n\nconst SLIDES = arrayFromNumber(5)\nconst CAROUSEL_ALIGN_ID = `${INPUT_ALIGN.ID}-demo`\n\nconst CAROUSEL_STYLES = createCarouselDefaultStyles('60%')\n\nconst CarouselWrapper = styled.div<{\n  $showContainScroll: boolean\n  $align: EmblaOptionsType['align']\n}>`\n  ${carouselDefaultWrapperStyles};\n\n  &.${CAROUSEL_ALIGN_ID} {\n    ${CAROUSEL_STYLES};\n    margin-bottom: ${SPACINGS.FOUR};\n    position: relative;\n\n      ${({ $showContainScroll, $align }) =>\n        $showContainScroll &&\n        css`\n          .embla__slide:first-child,\n          .embla__slide:last-child {\n            position: relative;\n\n            &:before {\n              top: 0;\n              bottom: 0;\n              position: absolute;\n              font-size: ${FONT_SIZES.CUSTOM(() => 1.3)};\n              text-align: center;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              width: calc(100% / 3);\n            }\n          }\n\n          .embla__slide:first-child {\n            &:before {\n              content: 'Leading space';\n              right: calc(100% - ${CAROUSEL_SLIDES_SPACING});\n              ${$align === 'start' &&\n              css`\n                display: none;\n              `}\n            }\n          }\n\n          .embla__slide:last-child {\n            &:before {\n              content: 'Trailing space';\n              left: 100%;\n              ${$align === 'end' &&\n              css`\n                display: none;\n              `}\n            }\n          }\n        `};\n    }\n  }\n`\n\nconst AlignmentMarker = styled.div<{\n  $align: EmblaOptionsType['align']\n}>`\n  &:before {\n    ${BRAND_GRADIENT_BACKGROUND_STYLES};\n    width: ${BORDER_SIZES.ACCENT_VERTICAL};\n    top: calc(${CAROUSEL_WRAPPER_SPACING} / 2);\n    bottom: calc(${CAROUSEL_WRAPPER_SPACING} / 2);\n    z-index: ${LAYERS.STEP};\n    opacity: 0.7;\n    position: absolute;\n    content: '';\n    display: block;\n    border-radius: ${BORDER_RADIUSES.LINE};\n\n    ${({ $align }) => {\n      if ($align === 'start') {\n        return css`\n          left: ${CAROUSEL_WRAPPER_SPACING};\n        `\n      }\n      if ($align === 'end') {\n        return css`\n          right: ${CAROUSEL_WRAPPER_SPACING};\n        `\n      }\n      return css`\n        left: 50%;\n        margin-left: calc(-${BORDER_SIZES.ACCENT_VERTICAL} / 2);\n      `\n    }};\n`\n\nexport const CarouselGeneratorAlignmentSettings = () => {\n  const { formData, onCheckboxChange, onRadioChange } = useCarouselGenerator()\n  const [inViewRef, inView] = useInView()\n  const slideSize = formData[CAROUSEL_GENERATOR_FORM_FIELDS.SLIDE_SIZE]\n  const loop = formData[CAROUSEL_GENERATOR_FORM_FIELDS.LOOP]\n  const dragFree = formData[CAROUSEL_GENERATOR_FORM_FIELDS.DRAG_FREE]\n  const align = formData[INPUT_ALIGN.FIELD_NAME]\n  const containScroll = formData[INPUT_CONTAIN_SCROLL.FIELD_NAME]\n    ? 'trimSnaps'\n    : false\n  const [options, setOptions] = useState<EmblaOptionsType>({\n    align,\n    containScroll,\n    loop,\n    dragFree\n  })\n\n  useEffect(() => {\n    setOptions({\n      align,\n      containScroll,\n      loop,\n      dragFree\n    })\n  }, [loop, dragFree, align, containScroll])\n\n  return (\n    <>\n      {slideSize === '100' && (\n        <Admonition type=\"note\">\n          Aligment settings will only <strong>work</strong> for carousels with{' '}\n          slide sizes <strong>less than 100%</strong>.\n        </Admonition>\n      )}\n      <CarouselWrapper\n        className={CAROUSEL_ALIGN_ID}\n        ref={inViewRef}\n        $showContainScroll={!containScroll && !loop}\n        $align={align}\n      >\n        {inView ? (\n          <>\n            <CarouselDefault slides={SLIDES} options={options} />\n            <AlignmentMarker $align={align} />\n          </>\n        ) : null}\n      </CarouselWrapper>\n\n      <CarouselGeneratorFormItems role=\"radiogroup\" aria-label={INPUT_ALIGN.ID}>\n        {INPUT_ALIGN.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={VALUE}>\n            <InputRadioDefault\n              name={INPUT_ALIGN.FIELD_NAME}\n              id={`${INPUT_ALIGN.ID}-${VALUE}`}\n              value={VALUE}\n              checked={formData[INPUT_ALIGN.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      {!loop && (\n        <CarouselGeneratorFormItem>\n          <InputCheckboxDefault\n            name={INPUT_CONTAIN_SCROLL.FIELD_NAME}\n            id={INPUT_CONTAIN_SCROLL.ID}\n            checked={formData[INPUT_CONTAIN_SCROLL.FIELD_NAME]}\n            onChange={onCheckboxChange}\n          >\n            {INPUT_CONTAIN_SCROLL.LABEL}\n          </InputCheckboxDefault>\n        </CarouselGeneratorFormItem>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport { CarouselGeneratorFormItem } from './CarouselGeneratorFormItems'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport {\n  CarouselGeneratorCheckboxType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_PREV_NEXT_BUTTONS: CarouselGeneratorCheckboxType<'navigationPrevNextButtons'> =\n  {\n    ...createCarouselGeneratorInputId(\n      CAROUSEL_GENERATOR_FORM_FIELDS.NAVIGATION_PREV_NEXT_BUTTONS\n    ),\n    LABEL: 'Previous and next buttons'\n  }\n\nconst INPUT_DOTS: CarouselGeneratorCheckboxType<'navigationDots'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.NAVIGATION_DOTS\n  ),\n  LABEL: 'Dot navigation'\n}\n\nexport const CarouselGeneratorNavigationSettings = () => {\n  const { formData, onCheckboxChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_PREV_NEXT_BUTTONS.FIELD_NAME}\n          id={INPUT_PREV_NEXT_BUTTONS.ID}\n          checked={formData[INPUT_PREV_NEXT_BUTTONS.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_PREV_NEXT_BUTTONS.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_DOTS.FIELD_NAME}\n          id={INPUT_DOTS.ID}\n          checked={formData[INPUT_DOTS.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_DOTS.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React from 'react'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { CAROUSEL_GENERATOR_FORM_FIELDS } from 'consts/carouselGenerator'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CarouselGeneratorFormItem } from './CarouselGeneratorFormItems'\nimport {\n  CarouselGeneratorCheckboxType,\n  createCarouselGeneratorInputId\n} from 'utils/carouselGenerator'\n\nconst INPUT_AUTOPLAY: CarouselGeneratorCheckboxType<'autoplay'> = {\n  ...createCarouselGeneratorInputId(CAROUSEL_GENERATOR_FORM_FIELDS.AUTOPLAY),\n  LABEL: 'Autoplay'\n}\n\nconst INPUT_WHEEL_GESTURES: CarouselGeneratorCheckboxType<'wheelGestures'> = {\n  ...createCarouselGeneratorInputId(\n    CAROUSEL_GENERATOR_FORM_FIELDS.WHEEL_GESTURES\n  ),\n  LABEL: 'Wheel gestures (under development)'\n}\n\nexport const CarouselGeneratorPlugins = () => {\n  const { formData, onCheckboxChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_AUTOPLAY.FIELD_NAME}\n          id={INPUT_AUTOPLAY.ID}\n          checked={formData[INPUT_AUTOPLAY.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_AUTOPLAY.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_WHEEL_GESTURES.FIELD_NAME}\n          id={INPUT_WHEEL_GESTURES.ID}\n          checked={formData[INPUT_WHEEL_GESTURES.FIELD_NAME]}\n          onChange={onCheckboxChange}\n          disabled\n        >\n          {INPUT_WHEEL_GESTURES.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { SPACINGS } from 'consts/spacings'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { ButtonPrimaryFilledWithLoading } from 'components/Button/ButtonPrimaryFilled'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SandboxLabelKeyType } from 'consts/sandbox'\nimport { CarouselGeneratorFormDataType } from 'consts/carouselGenerator'\nimport { SANDBOXES } from 'components/Examples/CarouselGenerator/CarouselGeneratorSandboxes'\nimport {\n  FORM_ITEM_MAX_WIDTH_STYLES,\n  FORM_ITEM_SPACING_X\n} from './CarouselGeneratorFormItems'\n\nconst CarouselGeneratorSubmitWrapper = styled.div`\n  ${createGapStyles(FORM_ITEM_SPACING_X, SPACINGS.EIGHT)}\n  margin-top: ${SPACINGS.EIGHT};\n`\n\nconst CarouselGeneratorButtonWrapper = styled.div`\n  ${FORM_ITEM_MAX_WIDTH_STYLES};\n`\n\nexport const CarouselGeneratorSubmit = () => {\n  const { formData } = useCarouselGenerator()\n  const [sandbox, setSandbox] = useState('')\n  const sandboxKey = formData.framework\n  const isLoading = !!(sandboxKey && !sandbox)\n\n  const loadSandbox = useCallback(\n    async (\n      key: SandboxLabelKeyType,\n      settings: CarouselGeneratorFormDataType\n    ) => {\n      const sandbox = SANDBOXES.find((sandbox) => sandbox.key === key)\n      if (sandbox) setSandbox(await sandbox.createSandbox(settings))\n    },\n    []\n  )\n\n  useEffect(() => {\n    if (sandboxKey) {\n      setSandbox('')\n      loadSandbox(sandboxKey, formData)\n    }\n  }, [sandboxKey, formData])\n\n  return (\n    <div>\n      <input type=\"hidden\" name=\"parameters\" value={sandbox} />\n\n      <CarouselGeneratorSubmitWrapper>\n        <CarouselGeneratorButtonWrapper>\n          <ButtonPrimaryFilledWithLoading\n            isLoading={isLoading}\n            disabled={!sandbox}\n            type=\"submit\"\n          >\n            Create CodeSandbox\n          </ButtonPrimaryFilledWithLoading>\n        </CarouselGeneratorButtonWrapper>\n      </CarouselGeneratorSubmitWrapper>\n    </div>\n  )\n}\n","import React from 'react'\nimport { LinkContent } from 'components/Link/LinkContent'\nimport { URLS } from 'consts/urls'\n\nexport const CarouselGeneratorSupport = () => {\n  return (\n    <ul>\n      <li>\n        <LinkContent to={URLS.DONATE_PAYPAL}>PayPal</LinkContent>\n      </li>\n      <li>\n        <LinkContent to={URLS.DONATE_KO_FI}>Ko-fi</LinkContent>\n      </li>\n    </ul>\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {URLS} from 'consts/urls';\nimport {LinkContent} from 'components/Link/LinkContent';\nimport {CarouselGeneratorFrameworkSettings} from 'components/CarouselGenerator/CarouselGeneratorFrameworkSettings';\nimport {CarouselGeneratorBasicSettings} from 'components/CarouselGenerator/CarouselGeneratorBasicSettings';\nimport {CarouselGeneratorSlidesSettings} from 'components/CarouselGenerator/CarouselGeneratorSlidesSettings';\nimport {CarouselGeneratorAlignmentSettings} from 'components/CarouselGenerator/CarouselGeneratorAlignmentSettings';\nimport {CarouselGeneratorNavigationSettings} from 'components/CarouselGenerator/CarouselGeneratorNavigationSettings';\nimport {CarouselGeneratorPlugins} from 'components/CarouselGenerator/CarouselGeneratorPlugins';\nimport {CarouselGeneratorSubmit} from 'components/CarouselGenerator/CarouselGeneratorSubmit';\nimport {CarouselGeneratorSupport} from 'components/CarouselGenerator/CarouselGeneratorSupport';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components), {Admonition} = _components;\n  if (!Admonition) _missingMdxReference(\"Admonition\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Carousel generator\"), \"\\n\", React.createElement(_components.p, null, \"Just follow the instructions and create your own customized carousel setup in no time!\"), \"\\n\", React.createElement(Admonition, {\n    type: \"warning\"\n  }, React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Caution:\"), \" The carousel generator is an experimental Embla Carousel feature\\nintroduced in v8.0.0. This generator is subject to change before it is marked\\nas stable.\"), React.createElement(\"br\"), React.createElement(_components.p, null, \"Join the \", React.createElement(LinkContent, {\n    to: `${URLS.GITHUB_DISCUSSIONS}/513`\n  }, \"discussion here\"), \"!\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"choose-framework\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#choose-framework\",\n    \"aria-label\": \"choose framework permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Choose framework\"), \"\\n\", React.createElement(CarouselGeneratorFrameworkSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"basic-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#basic-settings\",\n    \"aria-label\": \"basic settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Basic settings\"), \"\\n\", React.createElement(CarouselGeneratorBasicSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"slide-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#slide-settings\",\n    \"aria-label\": \"slide settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Slide settings\"), \"\\n\", React.createElement(CarouselGeneratorSlidesSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"alignment-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#alignment-settings\",\n    \"aria-label\": \"alignment settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Alignment settings\"), \"\\n\", React.createElement(CarouselGeneratorAlignmentSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"navigation-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#navigation-settings\",\n    \"aria-label\": \"navigation settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Navigation settings\"), \"\\n\", React.createElement(CarouselGeneratorNavigationSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"plugins\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#plugins\",\n    \"aria-label\": \"plugins permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Plugins\"), \"\\n\", React.createElement(CarouselGeneratorPlugins), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(CarouselGeneratorSubmit), \"\\n\", React.createElement(_components.h2, {\n    id: \"support\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#support\",\n    \"aria-label\": \"support permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Support\"), \"\\n\", React.createElement(_components.p, null, \"Did this save you time? Don't say thank you! \", React.createElement(_components.strong, null, \"Share\"), \" it, \", React.createElement(_components.strong, null, \"star\"), \" it or \", React.createElement(_components.strong, null, \"support\"), \" my work:\"), \"\\n\", React.createElement(CarouselGeneratorSupport));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React, { PropsWithRef } from 'react'\nimport { URLS } from 'consts/urls'\n\ntype PropType = PropsWithRef<\n  React.DetailedHTMLProps<\n    React.FormHTMLAttributes<HTMLFormElement>,\n    HTMLFormElement\n  >\n>\n\nexport const CarouselGeneratorForm = (props: PropType) => {\n  const { children, ...restProps } = props\n\n  return (\n    <form\n      action={URLS.CODESANDBOX_DEFINE}\n      method=\"POST\"\n      target=\"_blank\"\n      {...restProps}\n    >\n      {children}\n    </form>\n  )\n}\n","import React, { PropsWithChildren, useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport { Seo } from 'components/Seo/Seo'\nimport maskable from 'assets/images/maskable.png'\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\nimport { PageEditThisPage } from 'components/Page/PageEditThisPage'\nimport { PagePagination } from 'components/Page/PagePagination'\nimport { PageBreadcrumbs } from 'components/Page/PageBreadcrumbs'\nimport { MAIN_CONTENT_ID } from 'components/KeyNavigating/KeyNavigatingSkipToContent'\nimport { removeProtocol } from 'utils/removeProtocol'\nimport { Mdx } from 'components/Mdx/Mdx'\nimport {\n  PagePropType,\n  PageHeadPropType,\n  PageDefaultLayoutType,\n  PagePaginationType\n} from 'consts/page'\n\nexport const query = graphql`\n  query PageDefaultQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      tableOfContents\n      frontmatter {\n        title\n        description\n        date(formatString: \"DD MMMM YYYY\")\n      }\n    }\n  }\n`\n\nexport const Head = (props: PageHeadPropType) => {\n  const { data, pageContext } = props\n  const { siteUrl, author } = useSiteMetadata()\n  const { title = '', description, date } = data.mdx.frontmatter\n  const dateToISOString = useMemo(\n    () => new Date(`${date} UTC`).toISOString(),\n    [date]\n  )\n\n  return (\n    <Seo\n      title={title}\n      description={description}\n      url={`${siteUrl}${pageContext.slug}`}\n    >\n      <script type=\"application/ld+json\">\n        {`\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"TechArticle\",\n        \"name\": \"${removeProtocol(siteUrl)}\",\n        \"description\": \"${description}\",\n        \"url\": \"${siteUrl}${pageContext.slug}\",\n        \"headline\": \"${title}\",\n        \"image\": \"${siteUrl}/share-image.png\",\n        \"datePublished\": \"${dateToISOString}\",\n        \"dateModified\": \"${dateToISOString}\",\n        \"author\": {\n          \"@type\": \"Person\",\n          \"name\": \"${author}\"\n        },\n        \"publisher\": {\n          \"@type\": \"Organization\",\n          \"name\": \"${author}\",\n          \"logo\": {\n            \"@type\": \"ImageObject\",\n            \"width\": \"512\",\n            \"height\": \"512\",\n            \"url\": \"${siteUrl}${maskable}\"\n          }\n        }\n      }\n    `}\n      </script>\n    </Seo>\n  )\n}\n\nexport type PropType = PropsWithChildren<\n  PagePropType<PageDefaultLayoutType, PagePaginationType>\n>\n\nconst PageDefault = (props: PropType) => {\n  const { pageContext, children } = props\n  const { next, previous, filePath, id } = pageContext\n\n  return (\n    <>\n      <PageBreadcrumbs id={id} />\n      <article id={MAIN_CONTENT_ID}>\n        <Mdx>{children}</Mdx>\n      </article>\n      <PageEditThisPage pageUrl={filePath} />\n      <PagePagination previous={previous} next={next} />\n    </>\n  )\n}\n\nexport default PageDefault\n","import GATSBY_COMPILED_MDX from \"/Users/davidjerleke/Sites/embla-carousel/packages/embla-carousel-docs/src/content/pages/examples/generator.mdx\";\nimport React from 'react';\nimport {PageEditThisPage} from 'components/Page/PageEditThisPage';\nimport {PagePagination} from 'components/Page/PagePagination';\nimport {PageBreadcrumbs} from 'components/Page/PageBreadcrumbs';\nimport {MAIN_CONTENT_ID} from 'components/KeyNavigating/KeyNavigatingSkipToContent';\nimport {CarouselGeneratorForm} from 'components/CarouselGenerator/CarouselGeneratorForm';\nimport {CarouselGeneratorProvider} from 'components/CarouselGenerator/CarouselGeneratorContext';\nimport {Mdx} from 'components/Mdx/Mdx';\nimport {Head} from './Default';\nconst query = \"1476602449\";\nexport {Head};\nconst PageGenerator = props => {\n  const {pageContext, children} = props;\n  const {next, previous, filePath, id} = pageContext;\n  return React.createElement(React.Fragment, null, React.createElement(PageBreadcrumbs, {\n    id: id\n  }), React.createElement(CarouselGeneratorProvider, null, React.createElement(CarouselGeneratorForm, {\n    id: MAIN_CONTENT_ID\n  }, React.createElement(Mdx, null, children))), React.createElement(PageEditThisPage, {\n    pageUrl: filePath\n  }), React.createElement(PagePagination, {\n    previous: previous,\n    next: next\n  }));\n};\nPageGenerator\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageGenerator, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["CONTEXT_DEFAULT_VALUE","formData","framework","loop","dragFree","axis","direction","accessibility","slideSize","slideGapSize","edgeGap","align","containScroll","navigationPrevNextButtons","navigationDots","autoplay","wheelGestures","onChange","onCheckboxChange","onRadioChange","onNumberChange","onNumberBlur","CarouselGeneratorContext","createContext","CarouselGeneratorProvider","props","children","setFormData","useState","useCallback","key","value","currentFormValues","event","name","checked","currentTarget","input","fieldName","minValue","parseInt","getAttribute","maxValue","number","parseFloat","min","max","Math","numberWithinRange","toString","useMemo","React","Provider","useCarouselGenerator","useContext","CAROUSEL_GENERATOR_FORM_FIELDS","START","END","MIDDLE","carouselGeneratorToggleFeature","featureLabel","featureActive","carouselScript","regexString","regex","RegExp","replace","carouselGeneratorToggleFeatures","settings","carouselScriptWithFeatures","default","hasAutoplayAndNavigation","isHorizontal","isLeftToRight","isRightToLeft","createCarouselGeneratorStyles","styleList","push","ARROWS_STYLES","DOTS_STYLES","createCarouselDefaultStyles","map","styles","styledComponentsStylesToString","join","createCarouselGeneratorOptions","createCarouselGeneratorPlugins","pluginList","SANDBOX_PLUGINS","AUTOPLAY","addSandboxPlugins","plugins","ID","DEFAULT_SETTINGS","SLIDES","arrayFromNumber","sandboxVanilla","async","language","isTypeScript","vanillaScriptExtension","formatScript","sandboxLanguageUtils","arrowButtonsScript","dotButtonScript","carouselHtml","createSandboxVanilla","id","options","sandboxOverrides","SANDBOX_VANILLA_FOLDERS","JS","isBinary","content","sandboxReact","reactScriptExtension","createSandboxReact","slides","SANDBOX_REACT_FOLDERS","SANDBOXES","createSandboxFunctionsWithLabels","VANILLA_JS","SANDBOX_LANGUAGES","JAVASCRIPT","VANILLA_TS","TYPESCRIPT","REACT_JS","REACT_TS","createCarouselGeneratorInputId","FIELD_NAME","CAROUSEL_GENERATOR_FORM_PREFIX","string","separator","split","letter","idx","toUpperCase","toLowerCase","INPUT_FRAMEWORK","OPTIONS","SandboxSelectionList","styled","ul","withConfig","displayName","componentId","createGapStyles","SANDBOX_SELECTION_SPACING","CarouselGeneratorFrameworkSettings","role","sandbox","SandboxSelectionInput","snakeCaseToKebabCase","label","InputCheckboxDefault","createRadioOrCheckboxDefault","createRadioOrCheckboxCard","HEIGHT","SPACINGS","EIGHT","SIDES_PADDING","THREE","INPUT_RADIUS","BORDER_RADIUSES","BOX","InputTextWrapper","span","BORDER_SIZES","DETAIL","COLORS","DETAIL_LOW_CONTRAST","BACKGROUND_CODE","labelActiveStyles","css","Label","LAYERS","STEP","TEXT_LOW_CONTRAST","labelTextActiveStyles","LabelText","ONE","Highlight","BRAND_GRADIENT_BACKGROUND_STYLES","OUTLINE","Input","TAP_HIGHLIGHT_STYLES","KEY_NAVIGATING_STYLES","TEXT_BODY","FONT_SIZES","BODY","_ref","$inputHasValue","FORM_ITEM_SPACING_X","FOUR","FORM_ITEM_SPACING_Y","TWO","FORM_ITEMS_GAP_STYLES","FORM_ITEM_MAX_WIDTH_STYLES","MEDIA","MIN_XS","CarouselGeneratorFormItems","div","CarouselGeneratorFormItem","CarouselGeneratorInputText","className","restProps","isKeyNavigating","useKeyNavigating","Object","assign","$isKeyNavigating","type","INPUT_AXIS","LABEL","VALUE","INPUT_DIRECTION","INPUT_LOOP","INPUT_DRAG_FREE","INPUT_ACCESSIBILITY","CarouselGeneratorBasicSettings","InputRadioDefault","_ref2","disabled","INPUT_SLIDE_SIZE","INPUT_SLIDE_GAP_SIZE","CarouselGeneratorSlidesSettings","onBlur","INPUT_ALIGN","INPUT_CONTAIN_SCROLL","CAROUSEL_ALIGN_ID","CAROUSEL_STYLES","CarouselWrapper","carouselDefaultWrapperStyles","$showContainScroll","$align","CUSTOM","CAROUSEL_SLIDES_SPACING","AlignmentMarker","ACCENT_VERTICAL","CAROUSEL_WRAPPER_SPACING","LINE","CarouselGeneratorAlignmentSettings","inViewRef","inView","useInView","setOptions","useEffect","Admonition","ref","CarouselDefault","_ref3","INPUT_PREV_NEXT_BUTTONS","INPUT_DOTS","CarouselGeneratorNavigationSettings","INPUT_AUTOPLAY","INPUT_WHEEL_GESTURES","CarouselGeneratorPlugins","CarouselGeneratorSubmitWrapper","CarouselGeneratorButtonWrapper","CarouselGeneratorSubmit","setSandbox","sandboxKey","isLoading","loadSandbox","find","createSandbox","ButtonPrimaryFilledWithLoading","CarouselGeneratorSupport","LinkContent","to","URLS","DONATE_PAYPAL","DONATE_KO_FI","_createMdxContent","_components","h1","p","strong","hr","h2","a","_provideComponents","components","component","Error","_missingMdxReference","GITHUB_DISCUSSIONS","style","position","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","CarouselGeneratorForm","action","CODESANDBOX_DEFINE","method","target","Head","data","pageContext","siteUrl","author","useSiteMetadata","title","description","date","mdx","frontmatter","dateToISOString","Date","toISOString","Seo","url","slug","removeProtocol","maskable","PageGenerator","next","previous","filePath","PageBreadcrumbs","MAIN_CONTENT_ID","Mdx","PageEditThisPage","pageUrl","PagePagination","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}